//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// Generated from: room.proto
/// <reference path="game.ts" />

module Cmd {
	/**
	 * -----------------------------------公共定义-----------------------------------//
	 *  玩家在线状态
	 */
	export enum SWOnlineState {
		/**
		 * 在线
		 */
		OnlineState_Online = 1,
		/**
		 * 网络差
		 */
		OnlineState_Slow = 2,
		/**
		 * 离开,切后台
		 */
		OnlineState_Leave = 4,
		/**
		 * 旁观中
		 */
		OnlineState_Watching = 6,
		/**
		 * 电话中
		 */
		OnlineState_Calling = 8,
		/**
		 * 托管状态
		 */
		OnlineState_Hosting = 16
	}
	export class SWUserBaseInfo {
		uid: number;
		/**
		 * 头像
		 */
		headUrl: string;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 如果为0就是站着
		 */
		seatId: number;
		/**
		 * 玩家积分
		 */
		remainder: number;
		/**
		 * 性别
		 */
		gender: string;
		ip: string;
		/**
		 * 在线状态OnlineState
		 */
		onlineState: number;
		/**
		 * 钻石
		 */
		diamond: number;
		/**
		 * 积分
		 */
		points: number;
		/**
		 * 金币
		 */
		chips: number;
		/**
		 * 是否准备
		 */
		bReady: boolean;
		/**
		 * 是否房主
		 */
		bOwner: boolean;
		/**
		 * 是否中途进房
		 */
		bEnterRoom: boolean;
		GetType(): string { return 'Cmd.SWUserBaseInfo'; }
	}
	/**
	 * 房间信息
	 */
	export class SWRoomInfo {
		/**
		 * 房间ID
		 */
		roomId: number;
		/**
		 * 开房玩家uid
		 */
		ownerId: number;
		/**
		 * 人数
		 */
		playNum: number;
		/**
		 * 局数
		 */
		roundNum: number;
		/**
		 * 房间玩法属性
		 */
		roomPro: number[];
		/**
		 * 房间类型   1金币场 2 钻石场
		 */
		roomType: number;
		/**
		 * 底分
		 */
		basePoint: number;
		/**
		 * 玩家信息
		 */
		userInfo: SWUserBaseInfo[];
		/**
		 * 下注上限
		 */
		betLimit: number;
		/**
		 * 入场值
		 */
		enterPoint: number;
		/**
		 * 离场值
		 */
		leavePoint: number;
		/**
		 * 房间庄家剩余局数
		 */
		haveRound: number;
		GetType(): string { return 'Cmd.SWRoomInfo'; }
	}
	/**
	 * 游戏对局信息
	 */
	export class GameRoundInfo {
		/**
		 * 游戏状态
		 */
		gameStatus: Cmd.GameStatus;
		/**
		 * 房间对局信息
		 */
		roomRoundInfo: Cmd.RoomRoundInfo;
		/**
		 * 玩家对局信息
		 */
		userRoundInfo: Cmd.UserRoundInfo[];
		/**
		 * 当前操作剩余时间，不同阶段对应不同操作
		 */
		operateTime: number;
		GetType(): string { return 'Cmd.GameRoundInfo'; }
	}
	/**
	 * /////////////////////////////房间相关////////////////////////////////////////
	 * Echo消息
	 */
	export class PokerEchoRoomCmd_CS {
		GetType(): string { return 'Cmd.PokerEchoRoomCmd_CS'; }
	}
	/**
	 * 进入房间
	 */
	export class SWEnterRoomCmd_C {
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 全局唯一房间id
		 */
		globalRoomId: number;
		/**
		 * 座位数量
		 */
		seatNum: number;
		/**
		 * 机器人数量
		 */
		robotNum: number;
		/**
		 * 局数
		 */
		roundNum: number;
		/**
		 * 玩法属性
		 */
		roomProp: number[];
		GetType(): string { return 'Cmd.SWEnterRoomCmd_C'; }
	}
	export class SWTableRoomConfig {
		/**
		 * 抢庄时间
		 */
		bankerTime: number;
		/**
		 * 下注时间
		 */
		betTime: number;
		/**
		 * 藏子时间
		 */
		hideTime: number;
		/**
		 * 开子时间
		 */
		openTime: number;
		/**
		 * 结算时间
		 */
		balanceTime: number;
		GetType(): string { return 'Cmd.SWTableRoomConfig'; }
	}
	export class SWEnterRoomCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		dec: string;
		/**
		 * 自己的位置ID
		 */
		seatIdx: number;
		/**
		 * 房间信息
		 */
		roomInfo: SWRoomInfo;
		/**
		 * 对局信息，用于重连
		 */
		roundInfo: GameRoundInfo;
		/**
		 * 庄家id
		 */
		bankerId: number;
		/**
		 * 1断线重连 2中途加入
		 */
		enterType: number;
		/**
		 * 房间配置表时间
		 */
		tableRoomConfig: SWTableRoomConfig;
		/**
		 * 玩家在该房间盈利
		 */
		roomPoint: number;
		GetType(): string { return 'Cmd.SWEnterRoomCmd_S'; }
	}
	/**
	 * 用来广播别的玩家有人进入房间
	 */
	export class SWEnterRoomCmd_Brd {
		/**
		 * 玩家信息
		 */
		userInfo: SWUserBaseInfo;
		/**
		 * 是否第一次进
		 */
		bFirst: boolean;
		GetType(): string { return 'Cmd.SWEnterRoomCmd_Brd'; }
	}
	export class SWOnlineStateCmd_Brd {
		uid: number;
		/**
		 * 2进制，每一位代表一个PokerOnlineState枚举
		 */
		state: number;
		GetType(): string { return 'Cmd.SWOnlineStateCmd_Brd'; }
	}
	/**
	 * 换房间
	 */
	export class SWChangeRoomCmd_C {
		GetType(): string { return 'Cmd.SWChangeRoomCmd_C'; }
	}
	export class SWChangeRoomCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		dec: string;
		GetType(): string { return 'Cmd.SWChangeRoomCmd_S'; }
	}
	/**
	 * 换坐
	 */
	export class SWChangeSeatCmd_C {
		/**
		 * 要换的座位
		 */
		seatId: number;
		GetType(): string { return 'Cmd.SWChangeSeatCmd_C'; }
	}
	export class SWChangeSeatCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		dec: string;
		GetType(): string { return 'Cmd.SWChangeSeatCmd_S'; }
	}
	export class SWChangeSeatCmd_Brd {
		uid: number;
		/**
		 * 要换的座位
		 */
		seatId: number;
		GetType(): string { return 'Cmd.SWChangeSeatCmd_Brd'; }
	}
	/**
	 * 离开房间
	 */
	export class SWLeaveRoomCmd_C {
		/**
		 * 离开状态 0 返回大厅 1 断线
		 */
		state: number;
		GetType(): string { return 'Cmd.SWLeaveRoomCmd_C'; }
	}
	/**
	 * 离开游戏请求返回
	 */
	export class SWLeaveRoomCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		dec: string;
		GetType(): string { return 'Cmd.SWLeaveRoomCmd_S'; }
	}
	/**
	 * 离开游戏进行广播
	 */
	export class SWLeaveRoomCmd_Brd {
		/**
		 * 玩家ID
		 */
		userId: number;
		/**
		 * 状态
		 */
		state: number;
		GetType(): string { return 'Cmd.SWLeaveRoomCmd_Brd'; }
	}
	/**
	 * 请求解散房间
	 */
	export class SWRequestDissolveRoomCmd_C {
		GetType(): string { return 'Cmd.SWRequestDissolveRoomCmd_C'; }
	}
	export class SWRequestDissolveRoomCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 在线玩家人数
		 */
		userNum: number;
		GetType(): string { return 'Cmd.SWRequestDissolveRoomCmd_S'; }
	}
	export class SWRequestDissolveRoomCmd_Brd {
		/**
		 * 请求解散房间的玩家uid
		 */
		uid: number;
		/**
		 * 等待倒计时
		 */
		waitTime: number;
		GetType(): string { return 'Cmd.SWRequestDissolveRoomCmd_Brd'; }
	}
	/**
	 * 回应解散房间
	 */
	export class SWReplyDissolveRoomCmd_C {
		/**
		 * 1表示同意
		 */
		isAgree: number;
		GetType(): string { return 'Cmd.SWReplyDissolveRoomCmd_C'; }
	}
	export class SWReplyDissolveRoomCmd_S {
		resultCode: number;
		dec: string;
		GetType(): string { return 'Cmd.SWReplyDissolveRoomCmd_S'; }
	}
	export class SWReplyDissolveRoomCmd_Brd {
		uid: number;
		/**
		 * 1表示同意
		 */
		isAgree: number;
		GetType(): string { return 'Cmd.SWReplyDissolveRoomCmd_Brd'; }
	}
	/**
	 * 成功解散房间
	 */
	export class SWSuccessDissolveRoomCmd_Brd {
		/**
		 * 所有同意解散的玩家昵称
		 */
		agreeUsers: string[];
		/**
		 * 所有不同意解散的玩家称
		 */
		disagreeUsers: string[];
		/**
		 * 是否解散成功
		 */
		bOk: boolean;
		GetType(): string { return 'Cmd.SWSuccessDissolveRoomCmd_Brd'; }
	}
	/**
	 * 聊天内容
	 */
	export class SWChatContent {
		/**
		 * 文字内容
		 */
		strWords: string;
		/**
		 * 预定义聊天内容ID
		 */
		predefId: number;
		GetType(): string { return 'Cmd.SWChatContent'; }
	}
	/**
	 * 聊天聊天
	 */
	export class SWCommonChatCmd_C {
		/**
		 * 聊天内容
		 */
		chatContent: SWChatContent;
		GetType(): string { return 'Cmd.SWCommonChatCmd_C'; }
	}
	export class SWCommonChatCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		dec: string;
		GetType(): string { return 'Cmd.SWCommonChatCmd_S'; }
	}
	export class SWCommonChatCmd_Brd {
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 聊天内容
		 */
		chatContent: SWChatContent;
		GetType(): string { return 'Cmd.SWCommonChatCmd_Brd'; }
	}
	/**
	 * 语音聊天内容
	 */
	export class SWVoiceChatContent {
		/**
		 * 语音时长
		 */
		time: string;
		/**
		 * 对应文字
		 */
		strWords: string;
		/**
		 * 对应地址
		 */
		url: string;
		GetType(): string { return 'Cmd.SWVoiceChatContent'; }
	}
	/**
	 * 语音聊天
	 */
	export class SWVoiceChatCmd_C {
		/**
		 * 聊天内容
		 */
		voiceContent: SWVoiceChatContent;
		GetType(): string { return 'Cmd.SWVoiceChatCmd_C'; }
	}
	export class SWVoiceChatCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		dec: string;
		GetType(): string { return 'Cmd.SWVoiceChatCmd_S'; }
	}
	export class SWVoiceChatCmd_Brd {
		/**
		 * 玩家
		 */
		uid: number;
		/**
		 * 聊天内容
		 */
		voiceContent: SWVoiceChatContent;
		GetType(): string { return 'Cmd.SWVoiceChatCmd_Brd'; }
	}
	/**
	 * //////////////////////////////////////////////////////////////////////////////
	 * 送礼信息
	 */
	export class SWGiftsInfo {
		/**
		 * 发送玩家Id
		 */
		fromUid: number;
		/**
		 * 接收玩家Id
		 */
		toUid: number;
		/**
		 * 礼物Id
		 */
		giftsId: number;
		/**
		 * 礼物数量
		 */
		giftsNum: number;
		GetType(): string { return 'Cmd.SWGiftsInfo'; }
	}
	/**
	 * 送礼
	 */
	export class SendGiftCmd_C {
		/**
		 * 礼物内容
		 */
		gift: SWGiftsInfo;
		GetType(): string { return 'Cmd.SendGiftCmd_C'; }
	}
	export class SendGiftCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 信息
		 */
		desc: string;
		GetType(): string { return 'Cmd.SendGiftCmd_S'; }
	}
	export class SWSendGiftCmd_Brd {
		/**
		 * 送礼玩家
		 */
		gift: SWGiftsInfo;
		GetType(): string { return 'Cmd.SWSendGiftCmd_Brd'; }
	}
	/**
	 * /////////////////////////////游戏相关////////////////////////////////////////
	 * 游戏开始
	 */
	export class SWGameStartCmd_Brd {
		/**
		 * 庄家id
		 */
		uid: number;
		/**
		 * 庄家剩余局数
		 */
		haveRound: number;
		GetType(): string { return 'Cmd.SWGameStartCmd_Brd'; }
	}
	/**
	 * 每局结算广播
	 */
	export class SWGameRoundEndCmd_Brd {
		/**
		 * 玩家结算
		 */
		userResult: Cmd.GameRoundResult[];
		/**
		 * 庄家筹码不够强制下庄
		 */
		isDownBanker: boolean;
		/**
		 * 结算时间
		 */
		roundEndTime: number;
		GetType(): string { return 'Cmd.SWGameRoundEndCmd_Brd'; }
	}
	/**
	 * /////////////////////////////游戏之外////////////////////////////////////////
	 * 请求玩家信息
	 */
	export class SWRequestUserInfoCmd_C {
		/**
		 * 玩家id
		 */
		uid: number;
		GetType(): string { return 'Cmd.SWRequestUserInfoCmd_C'; }
	}
	export class SWRequestUserInfoCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		dec: string;
		/**
		 * 玩家信息
		 */
		userInfo: SWUserBaseInfo;
		GetType(): string { return 'Cmd.SWRequestUserInfoCmd_S'; }
	}
	export class SWSysMessageCmd_S {
		/**
		 * 消息内容
		 */
		strMsg: string;
		/**
		 * 消息级别和位置相关
		 */
		level: number;
		GetType(): string { return 'Cmd.SWSysMessageCmd_S'; }
	}
	/**
	 * /////////////////////////////GM指令////////////////////////////////////////
	 * /////////////////////////////压缩约定////////////////////////////////////////
	 */
	export class SWJsonCompressKey {
		key: string;
		/**
		 * 嵌套描述
		 */
		json: SWJsonCompressKey[];
		GetType(): string { return 'Cmd.SWJsonCompressKey'; }
	}
	/**
	 * json压缩约定消息
	 */
	export class SWJsonCompressNullUserPmd_CS {
		key: string;
		json: SWJsonCompressKey[];
		/**
		 * 0表示不省略,1表示省略,默认不省略,default省略,{} ,&quot;&quot;,0
		 */
		omit: number;
		/**
		 * 0表示重置,1表示添加
		 */
		add: number;
		/**
		 * 消息列表
		 */
		msglist: string[];
		GetType(): string { return 'Cmd.SWJsonCompressNullUserPmd_CS'; }
	}
	/**
	 * 玩家基本
	 */
	export class SWPersonInfo {
		uid: number;
		headurl: string;
		nickname: string;
		/**
		 * 性别
		 */
		gender: string;
		/**
		 * 钻石
		 */
		diamond: number;
		/**
		 * 金逗
		 */
		chips: number;
		seatId: number;
		ip: string;
		/**
		 * 1
		 */
		onlineState: number;
		/**
		 * 1
		 */
		bReady: number;
		/**
		 * 用户地址
		 */
		location: string;
		/**
		 * 0
		 */
		rate: number;
		/**
		 * 0
		 */
		viplevel: number;
		GetType(): string { return 'Cmd.SWPersonInfo'; }
	}
	export class SWUpdataUserPointCmd_Brd {
		uid: number;
		/**
		 * 冲完后金豆数
		 */
		chips: number;
		/**
		 * 充值完钻石数
		 */
		diamond: number;
		GetType(): string { return 'Cmd.SWUpdataUserPointCmd_Brd'; }
	}
	export class SWResetRoomStateCmd_Brd {
		/**
		 * 房间置为刚进入状态
		 */
		roomId: number;
		GetType(): string { return 'Cmd.SWResetRoomStateCmd_Brd'; }
	}
}
