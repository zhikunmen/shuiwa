//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// Generated from: lobby.proto
/// <reference path="common.ts" />
/// <reference path="lobby_room.ts" />
/// <reference path="lobby_hpmatch.ts" />

module Cmd {
	/**
	 * ---------------------------------大厅设置相关----------------------------//
	 *  设置类型
	 */
	export enum SetType {
		/**
		 * 音乐
		 */
		Music = 1,
		/**
		 * 音效
		 */
		Sound = 2,
		/**
		 * 排行榜(淘金类型的金币排行榜)
		 */
		Rank = 3
	}
	/**
	 * ---------------------------------免费金币界面任务系统相关----------------------------//
	 */
	export enum TaskStatus {
		/**
		 * 任务未开始
		 */
		Task_Status_Unstart = 0,
		/**
		 * 任务进行中
		 */
		Task_Status_Progress = 1,
		/**
		 * 已完成
		 */
		Task_Status_Complete = 2,
		/**
		 * 已领取奖励
		 */
		Task_Status_Received = 3
	}
	/**
	 * 用户信息获取
	 */
	export class UserInfoGetLbyCmd_C {
		/**
		 * 用户ID,当为空时，说明是自己的信息
		 */
		uid: number;
		GetType(): string { return 'Cmd.UserInfoGetLbyCmd_C'; }
	}
	export class UserInfoGetLbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 仅当不存在时，返回错误描述
		 */
		desc: string;
		/**
		 * 用户基本信息
		 */
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.UserInfoGetLbyCmd_S'; }
	}
	/**
	 * 客户端类型推送
	 */
	export class ReportClientTypeLbyCmd_C {
		/**
		 * 客户端类型 暂定nil/1 app/小程序
		 */
		clientType: number;
		GetType(): string { return 'Cmd.ReportClientTypeLbyCmd_C'; }
	}
	/**
	 * 房间数据 用于请求信息同步时 检测玩家是否已经在某个房间中
	 */
	export class UserRoomInfo {
		/**
		 * 返回当前创建的房间号 所对应的游戏id
		 */
		gameId: number;
		/**
		 * 返回当前创建的房间号 所对应的游戏区id
		 */
		zoneId: number;
		/**
		 * 房间号
		 */
		roomId: number;
		/**
		 * 全局唯一的房间id
		 */
		globalRoomId: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * 场景 为匹配场则传
		 */
		scene: number;
		/**
		 * 该房间创建时为几人房 -- 牛牛人数不同ui不一致
		 */
		baseUserNbr: number;
		matchId: number;
		GetType(): string { return 'Cmd.UserRoomInfo'; }
	}
	/**
	 * 请求邀请明细列表
	 */
	export class InviteInfo {
		uid: number;
		parent: number;
		headUrl: string;
		nickName: string;
		playNum: number;
		inviteTime: number;
		GetType(): string { return 'Cmd.InviteInfo'; }
	}
	export class PointRankInfo {
		uid: number;
		nickName: string;
		headUrl: string;
		point: number;
		GetType(): string { return 'Cmd.PointRankInfo'; }
	}
	export class DayRankInfo {
		/**
		 * 玩家uid
		 */
		uid: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 头像
		 */
		headUrl: string;
		/**
		 * 具体数值
		 */
		point: number;
		/**
		 * nil为没有奖励 1有奖 2已领
		 */
		reward: number;
		GetType(): string { return 'Cmd.DayRankInfo'; }
	}
	/**
	 * 开房红包提现数据 -- 兼容一下好牌网比赛的红包。。 要求提现记录跟红包获取记录混在一起。 也是叼。。。用status区分吧
	 */
	export class openRecord {
		/**
		 * 时间
		 */
		time: number;
		/**
		 * 兑换码
		 */
		CDKEY: string;
		/**
		 * 具体金额
		 */
		reward: number;
		/**
		 * 状态 1/2/3 未兑换／已兑换/获取记录
		 */
		status: number;
		GetType(): string { return 'Cmd.openRecord'; }
	}
	/**
	 * 获得大厅类型
	 */
	export class LobbyTypeListLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * TableCreateConfigList的md5
		 */
		md5Code: string;
		/**
		 * 客户端版本信息
		 */
		bundle: string;
		/**
		 * 客户端代码md5
		 */
		md5Game: string;
		GetType(): string { return 'Cmd.LobbyTypeListLobbyCmd_C'; }
	}
	export class LobbyTypeListLobbyCmd_S {
		/**
		 * 大厅支持类型,西安用,为了建容百人厅和房卡厅
		 */
		lobbyTypeList: LobbyType[];
		GetType(): string { return 'Cmd.LobbyTypeListLobbyCmd_S'; }
	}
	/**
	 * 用户登陆
	 */
	export class UserInfoSynLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * TableCreateConfigList的md5
		 */
		md5Code: string;
		/**
		 * 客户端版本信息
		 */
		bundle: string;
		/**
		 * 客户端代码md5 -- 这个当初用于大厅版本更新的 服务器暂时没用到？
		 */
		md5Game: string;
		/**
		 * 大厅类型,没有指定就是0
		 */
		lobbyType: number;
		/**
		 * 平台子Id，用于Monitor数据分析
		 */
		subPlatid: number;
		/**
		 * 客户端版本号,用来判断是否需要更新
		 */
		version: number;
		/**
		 * 客户端上传游戏版本列表的md5 用于子游戏的版本更新
		 */
		md5GameList: string;
		/**
		 * 客户端类型 暂定nil/1 app/小程序
		 */
		clientType: number;
		/**
		 * 客户端系统语言,cn,ph,tw,hk....
		 */
		language: string;
		/**
		 * 推广渠道id
		 */
		channelId: number;
		/**
		 * 渠道主人Uid
		 */
		channelOwnerUid: number;
		/**
		 * 上级推广玩家Uid(推广联盟合伙人Uid)
		 */
		parentUid: number;
		/**
		 * 推广联盟id
		 */
		leagueId: number;
		/**
		 * 推广链接
		 */
		url: string;
		GetType(): string { return 'Cmd.UserInfoSynLobbyCmd_C'; }
	}
	/**
	 * 渠道推广信息
	 */
	export class ChannelInfoLobbyCmd_C {
		/**
		 * 推广渠道id
		 */
		channelId: number;
		/**
		 * 渠道主人Uid
		 */
		channelOwnerUid: number;
		/**
		 * 上级推广玩家Uid(推广联盟合伙人Uid)
		 */
		parentUid: number;
		/**
		 * 推广联盟id
		 */
		leagueId: number;
		/**
		 * 推广链接
		 */
		url: string;
		GetType(): string { return 'Cmd.ChannelInfoLobbyCmd_C'; }
	}
	/**
	 * 注销账号
	 */
	export class DeleteAccountLobbyCmd_CS {
		/**
		 * 指定玩家uid,自己的也需要指定,避免风险误操作
		 */
		uid: number;
		/**
		 * 删除类型,暂时不用
		 */
		typ: string;
		GetType(): string { return 'Cmd.DeleteAccountLobbyCmd_CS'; }
	}
	/**
	 *  创建房间表
	 *  如果有区域选择的大厅 两次检验：1 先校验大厅+n个区域
	 */
	export class CreateConfigListLobbyCmd_S {
		/**
		 * old(lobbyGameList、createRoomConfigs) new(lobbyGameList、areaConfigs)
		 */
		list: string;
		GetType(): string { return 'Cmd.CreateConfigListLobbyCmd_S'; }
	}
	/**
	 * 区域创建房间表 -- 有区域选择的大厅 两次检验：2 再校验区域+n个游戏
	 */
	export class AreaCreateConfigListLobbyCmd_C {
		/**
		 * 区域表格md5
		 */
		md5Code: string;
		/**
		 * 区域id
		 */
		areaId: number;
		GetType(): string { return 'Cmd.AreaCreateConfigListLobbyCmd_C'; }
	}
	/**
	 * 区域创建房间表 只针对到指定区域
	 */
	export class AreaCreateConfigListLobbyCmd_S {
		/**
		 * 区域id
		 */
		areaId: number;
		/**
		 * areaConfig、createRoomConfigs 存在两个字段
		 */
		list: string;
		GetType(): string { return 'Cmd.AreaCreateConfigListLobbyCmd_S'; }
	}
	/**
	 * 指定游戏创建房间表
	 */
	export class GameCreateConfigLobbyCmd_C {
		/**
		 * 游戏id
		 */
		gameId: number;
		/**
		 * 大厅id
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GameCreateConfigLobbyCmd_C'; }
	}
	/**
	 * 指定游戏创建房间表
	 */
	export class GameCreateConfigLobbyCmd_S {
		resultCode: number;
		/**
		 * 指定游戏的玩法表
		 */
		createConfig: string;
		GetType(): string { return 'Cmd.GameCreateConfigLobbyCmd_S'; }
	}
	/**
	 * 大厅类型配置
	 */
	export class LobbyType {
		/**
		 * 大厅类型
		 */
		lobbyType: number;
		/**
		 * 房间类型RoomType
		 */
		roomType: number;
		/**
		 * 是否开启
		 */
		isOpen: number;
		GetType(): string { return 'Cmd.LobbyType'; }
	}
	/**
	 * 公告数据
	 */
	export class BroadInfo {
		/**
		 * 标题
		 */
		title: string;
		/**
		 * 内容
		 */
		content: string;
		GetType(): string { return 'Cmd.BroadInfo'; }
	}
	export class UserInfoSynLobbyCmd_S {
		resultCode: number;
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 当前是否已经创建了房间 (已改为 房间所有的玩家都可以返回房间了)
		 */
		isCreate: boolean;
		/**
		 * 玩家是否有可主动回去的房间
		 */
		userRoomInfos: UserRoomInfo;
		/**
		 * 是否为代理商
		 */
		canMarket: boolean;
		/**
		 * 是否显示免责声明 1则需要显示
		 */
		disclaimer: number;
		/**
		 * 当天还剩多少次获取分享奖励的次数 若为空表示当前活动不开启或当天已达到领取上限
		 */
		shareTimes: number;
		/**
		 * 1表示开启  活动结束时 该字段为空
		 */
		openSignIn: number;
		/**
		 * 当前第几天
		 */
		days: number;
		/**
		 * 是否可领取 1可领取 0不可领取
		 */
		canGet: number;
		/**
		 * 是否展示第一次进入的18个钻面板（贵州）1显示
		 */
		showFirst: number;
		/**
		 * 大厅默认公告
		 */
		defaultMsg: string;
		/**
		 * 是否开放积分排行榜 1开放
		 */
		showPointRank: number;
		/**
		 * 公告扣钻
		 */
		noticeFee: number;
		/**
		 * 累计充值钻石数
		 */
		recharge: number;
		/**
		 * 排行榜类型 不传代表当前不开放 2消耗排行榜 3开房次数排行榜
		 */
		rankType: number;
		/**
		 * 自动弹出老司机
		 */
		showRank: number;
		/**
		 * 是否显示开房红包
		 */
		openReward: number;
		/**
		 * 是否显示实名认证 0:不显示 1:显示
		 */
		authen: number;
		/**
		 * 自动弹出开房红包界面
		 */
		showReward: number;
		/**
		 * vip等级已经通过userinfo带回去了 所以打开vip界面不再多余请求了 这里直接带回 可领奖励
		 */
		vipReward: number[];
		/**
		 * 是否显示首充礼包 1 显示
		 */
		firstRecharge: number;
		/**
		 * 弹窗公告 如果不存在则表示不存弹窗公告
		 */
		popupBroad: BroadInfo;
		/**
		 * 是否显示限时优惠 1 显示
		 */
		limitOffer: number;
		/**
		 * 限时活动倒计时剩余时间 根据limitoOffer确定
		 */
		limitActTime: number;
		/**
		 * 最后一次进入的房间号,匹配号和茶馆用
		 */
		lastRoomId: number;
		/**
		 * 是否启用头像压缩
		 */
		isCompressHeadUrl: boolean;
		/**
		 * 启用头像压缩规则 如“  http:\/\/img.bwgame.com.cn\/img\/  ”
		 */
		CompressHeadUrlRule: string;
		/**
		 * 不填或者0表示弹默认窗,1表示新手引导,2表示三缺一加客服微信引导,
		 */
		firstPage: number;
		/**
		 * 1表示为代理
		 */
		isAgent: number;
		/**
		 * 是否显示vip话费券特权活动 1显示
		 */
		vipCoupon: number;
		/**
		 * 是否有未处理俱乐部的消息 1表示有
		 */
		noHandle: number;
		/**
		 * 是否开启瑞狗迎春活动 1表示启动
		 */
		ausDog: number;
		/**
		 * 奖池剩余总量
		 */
		allJackPotNum: number;
		/**
		 * bashi俱乐部账号
		 */
		BSClubAccountId: number;
		/**
		 * bashi俱乐部ID
		 */
		BSClubId: number;
		/**
		 * 三张游戏玩法隐藏功能
		 */
		hiddenGame: Hidden_Game[];
		/**
		 * 系统设置
		 */
		settings: string;
		/**
		 * 芝麻斗牌选场界面 进入大厅
		 */
		openGameIdList: number[];
		/**
		 * 游戏版本json数据 用于子游戏的版本更新
		 */
		gameVersionList: string;
		/**
		 * 来吧系列 是否显示转盘签到
		 */
		isShowTurnTable: number;
		/**
		 * 好牌网比赛数据
		 */
		hpRanks: Cmd.PersonalHpRankInfo[];
		/**
		 * 每日任务按钮显示标志,不填表示不显示,1表示显示
		 */
		dailyTask: number;
		/**
		 * 不填或0表示不支持基金模式,其他表示支持,1表示什么都不扣,2表示扣钻石,3表示扣金币
		 */
		fundType: number;
		/**
		 * 不填或0表示不支持网页充值,1表示支持钻石充值,2表示支持金豆充值,3表示都支持
		 */
		rechargeType: number;
		/**
		 * 是否推广者 1 是 0 不是
		 */
		isPromoters: number;
		/**
		 * 免费领钻倒计时
		 */
		countDownSec: number;
		/**
		 * 收藏 1:已收藏 0:未收藏
		 */
		subscribe: number;
		/**
		 * 好牌网比赛场次数据
		 */
		sceneInfos: Cmd.SceneInfo[];
		/**
		 * 是否月卡用户
		 */
		ismcardvalid: boolean;
		/**
		 * 桌面启动奖励是否领取
		 */
		dtlaunchaward: boolean;
		/**
		 * 弹窗图url
		 */
		windowImg: string;
		/**
		 * 分享图url
		 */
		shareImg: string;
		/**
		 * 下个限时宝箱时间
		 */
		timeLimitBoxTime: number;
		/**
		 * 是否显示刮刮乐 -- 当前只有金华三个大厅有
		 */
		isShowScratch: number;
		/**
		 * 设备操作状态
		 */
		deviceOpCheck: number;
		/**
		 * 1账号在封停状态
		 */
		punish: number;
		/**
		 * 是否显示新手签到
		 */
		newSign: number;
		/**
		 * 是否可以领取邀请奖励
		 */
		canGetInvite: number;
		/**
		 * 连续签到次数
		 */
		signDayNum: number;
		/**
		 * 默认不打日志不发或0 表示所有日志都打，1：INFO，2：WARN，3：ERROR，4：DEBUG_SERVER，5：INFO_SERVER，6：WARN_SERVER，7：ERROR_SERVER
		 */
		logLevel: number;
		/**
		 * 是否显示纯真年代 nil/1/2 不显示、弹出广告图并需要显示按钮、界面需要显示按钮
		 */
		isShowPureTime: number;
		/**
		 * 是否当前可开箱 nil/1 不可开、可开
		 */
		canOpenPureBox: number;
		/**
		 * 是否当前可转转盘 nil/1 不可开、可开
		 */
		canTurnTable: number;
		GetType(): string { return 'Cmd.UserInfoSynLobbyCmd_S'; }
	}
	/**
	 * 通知客户端换区
	 */
	export class NotifyChangeZoneLobbyCmd_S {
		/**
		 * 最佳大厅区服id
		 */
		bestLobbyZoneId: number;
		GetType(): string { return 'Cmd.NotifyChangeZoneLobbyCmd_S'; }
	}
	/**
	 * 用户信息获取
	 */
	export class UserInfoGetLobbyCmd_C {
		/**
		 * 指定玩家uid
		 */
		uid: number;
		/**
		 * 是否需要获取有无房间归属
		 */
		getIsCreate: boolean;
		lobbyId: number;
		GetType(): string { return 'Cmd.UserInfoGetLobbyCmd_C'; }
	}
	export class UserInfoGetLobbyCmd_S {
		resultCode: number;
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 当前是否已经创建了房间 (已改为 房间所有的玩家都可以返回房间了)
		 */
		isCreate: boolean;
		/**
		 * 累计充值钻石数
		 */
		recharge: number;
		/**
		 * vip等级已经通过userinfo带回去了 所以打开vip界面不再多余请求了 这里直接带回 可领奖励
		 */
		vipReward: number[];
		/**
		 * 告知前端是否存在官方充值存在 绑定代理商返钻 1表示存在 -- 定义在这里 而不是在玩家请求信息同步那里的原因是 需要等代理商系统回调才能获取到该数据
		 */
		bindRechargeRet: number;
		/**
		 * 是否显示首充礼包 1 显示 2018.06.28
		 */
		firstRecharge: number;
		/**
		 * 好牌网比赛数据
		 */
		hpRanks: Cmd.PersonalHpRankInfo[];
		/**
		 * 如果为断线重连推送的则赋值1
		 */
		isReconnet: number;
		/**
		 * 好牌网场次数据
		 */
		sceneInfos: Cmd.SceneInfo[];
		/**
		 * 下个限时宝箱时间
		 */
		timeLimitBoxTime: number;
		/**
		 * 是否可以领取邀请奖励
		 */
		canGetInvite: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 是否当前可开箱 nil/1 不可开、可开
		 */
		canOpenPureBox: number;
		/**
		 * 是否当前可转转盘 nil/1 不可开、可开
		 */
		canTurnTable: number;
		GetType(): string { return 'Cmd.UserInfoGetLobbyCmd_S'; }
	}
	/**
	 * 查找指定玩家 与UserInfoGetLobbyCmd_C区分一下 只用于查找返回数据给前端 不需要前端更新信息
	 */
	export class UserInfoSearchLobbyCmd_C {
		/**
		 * 玩家ID
		 */
		uid: number;
		GetType(): string { return 'Cmd.UserInfoSearchLobbyCmd_C'; }
	}
	export class UserInfoSearchLobbyCmd_S {
		resultCode: number;
		/**
		 * 为空则表示玩家不存在
		 */
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 战绩信息
		 */
		gameRecord: CoinGameRecord;
		GetType(): string { return 'Cmd.UserInfoSearchLobbyCmd_S'; }
	}
	export class UserInfoModifyRequestLobyCmd_C {
		headUrl: string;
		nickName: string;
		gender: string;
		/**
		 * 修改个性签名
		 */
		signature: string;
		/**
		 * 操作，0或空表示不限制,1表示限制
		 */
		checkOp: number;
		/**
		 * 名片
		 */
		businessCard: string;
		GetType(): string { return 'Cmd.UserInfoModifyRequestLobyCmd_C'; }
	}
	export class UserInfoModifyReturnLobyCmd_S {
		resultCode: number;
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.UserInfoModifyReturnLobyCmd_S'; }
	}
	/**
	 * 分享请求
	 */
	export class ShareLobbyCmd_C {
		/**
		 * 分享请求具体数据需要读表 所以后续需要传lobbyId
		 */
		lobbyId: number;
		/**
		 * 分享类型,不填或0表示朋友圈,1表示群分享
		 */
		shareType: number;
		/**
		 * 分享内容,目前是matchId
		 */
		shareId: number;
		/**
		 * 第二类分享类型：nil/1/2 不填或0兼容以前老的协议/表示漳州金币场分享送金币活动/漳州游戏内分享获取代金券(转盘活动积分也传这个)
		 */
		shareType2: number;
		/**
		 * shareType2为2时 需传
		 */
		gameId: number;
		GetType(): string { return 'Cmd.ShareLobbyCmd_C'; }
	}
	export class ShareLobbyCmd_S {
		resultCode: number;
		/**
		 * 活动时间内 每天第一次分享成功后 钻石余额
		 */
		remainder: number;
		/**
		 * 剩余次数
		 */
		shareTimes: number;
		/**
		 * 第二类分享类型：不填或0兼容以前老的协议，1表示漳州金币场分享送金币活动
		 */
		shareType2: number;
		/**
		 * 奖励数量
		 */
		rewardNbr: number;
		GetType(): string { return 'Cmd.ShareLobbyCmd_S'; }
	}
	/**
	 * 进入修改上级代理界面(丹东需要显示一下）
	 */
	export class GetParentLobbyCmd_C {
		GetType(): string { return 'Cmd.GetParentLobbyCmd_C'; }
	}
	export class GetParentLobbyCmd_S {
		parent: number;
		GetType(): string { return 'Cmd.GetParentLobbyCmd_S'; }
	}
	/**
	 * 修改上级代理
	 */
	export class ChangeParentCmd_C {
		/**
		 * 上级代理
		 */
		parent: number;
		GetType(): string { return 'Cmd.ChangeParentCmd_C'; }
	}
	export class ChangeParentCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.ChangeParentCmd_S'; }
	}
	/**
	 * 已阅免责声明
	 */
	export class ReadDisclaimerLobbyCmd_C {
		GetType(): string { return 'Cmd.ReadDisclaimerLobbyCmd_C'; }
	}
	/**
	 * 已阅弹窗公告
	 */
	export class ReadPopubBroadLobbyCmd_C {
		GetType(): string { return 'Cmd.ReadPopubBroadLobbyCmd_C'; }
	}
	/**
	 * 获取自己的推广二维码
	 */
	export class GetExtendsion2DCodeCmd_C {
		GetType(): string { return 'Cmd.GetExtendsion2DCodeCmd_C'; }
	}
	export class GetExtendsion2DCodeCmd_S {
		codeUrl: string;
		GetType(): string { return 'Cmd.GetExtendsion2DCodeCmd_S'; }
	}
	/**
	 * 招募代理
	 */
	export class RecruitAgentCmd_CS {
		/**
		 * 手机号码
		 */
		mobilePhone: number;
		/**
		 * 微信联系方式
		 */
		wechat: string;
		/**
		 * 区域 1/2/3 漳浦、漳州、云霄
		 */
		area: number;
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.RecruitAgentCmd_CS'; }
	}
	/**
	 * 获取推广员数据
	 */
	export class GetInviteListCmd_CS {
		inviteList: InviteInfo[];
		codeUrl: string;
		inviteAllNum: number;
		playAllNum: number;
		myself: InviteInfo;
		/**
		 * 是否可以领取砖石
		 */
		canGet: number;
		/**
		 * 已领
		 */
		alreadyRecv: number;
		/**
		 * 待领
		 */
		notRecv: number;
		GetType(): string { return 'Cmd.GetInviteListCmd_CS'; }
	}
	/**
	 * 领取推广员奖励
	 */
	export class GetInviteRewardCmd_C {
		GetType(): string { return 'Cmd.GetInviteRewardCmd_C'; }
	}
	export class GetInviteRewardCmd_S {
		resultCode: number;
		/**
		 * 获取奖励后当前砖石余额
		 */
		diamond: number;
		alreadyRecv: number;
		notRecv: number;
		GetType(): string { return 'Cmd.GetInviteRewardCmd_S'; }
	}
	/**
	 * 领取签到奖励(麻将钻石场 正常签到领取钻石流程)
	 */
	export class GetRegisterRewardCmd_C {
		/**
		 * 大厅id 暂时只有贵州可领取
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetRegisterRewardCmd_C'; }
	}
	export class GetRegisterRewardCmd_S {
		resultCode: number;
		/**
		 * 获取奖励后当前砖石余额
		 */
		diamond: number;
		/**
		 * 连续签到次数
		 */
		signDayNum: number;
		GetType(): string { return 'Cmd.GetRegisterRewardCmd_S'; }
	}
	/**
	 * 获取渠道推广信息
	 */
	export class GetChannelInfoCmd_C {
		/**
		 * 不填表示自己,以后考虑是否需要查看他人的推广信息
		 */
		uid: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.GetChannelInfoCmd_C'; }
	}
	/**
	 * 获取渠道推广信息返回
	 */
	export class GetChannelInfoCmd_S {
		/**
		 * 不填表示自己,以后考虑是否需要查看他人的推广信息
		 */
		uid: number;
		/**
		 * 如果有推广链接,则直接跳转至推广页
		 */
		url: string;
		/**
		 * 如果达不到推广条件给个标书
		 */
		desc: string;
		/**
		 * 错误码
		 */
		resultCode: number;
		/**
		 * 后台管理页面
		 */
		urlAgent: string;
		GetType(): string { return 'Cmd.GetChannelInfoCmd_S'; }
	}
	/**
	 * 领取反水
	 */
	export class GetRefundTaxCmd_C {
		GetType(): string { return 'Cmd.GetRefundTaxCmd_C'; }
	}
	/**
	 * 积分排行榜 （贵州）
	 */
	export class GetDayPointRankCmd_C {
		/**
		 * 1今天，2昨天
		 */
		day: number;
		GetType(): string { return 'Cmd.GetDayPointRankCmd_C'; }
	}
	/**
	 * 积分排行榜 （贵州）
	 */
	export class GetDayPointRankCmd_S {
		resultCode: number;
		/**
		 * 1今天，2昨天
		 */
		day: number;
		/**
		 * 排行数据
		 */
		infos: PointRankInfo[];
		GetType(): string { return 'Cmd.GetDayPointRankCmd_S'; }
	}
	/**
	 * 发送喇叭
	 */
	export class SendSuonaLobbyCmd_C {
		/**
		 * 内容
		 */
		content: string;
		GetType(): string { return 'Cmd.SendSuonaLobbyCmd_C'; }
	}
	export class SendSuonaLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.SendSuonaLobbyCmd_S'; }
	}
	/**
	 * 系统弹框消息,目前用来控制版本,其他地方也可以用
	 */
	export class MessageBoxLobbyCmd_S {
		/**
		 * 弹窗类型,1表示重启系统框
		 */
		type: number;
		/**
		 * 弹框内容
		 */
		desc: string;
		/**
		 * 标题
		 */
		title: string;
		/**
		 * 按钮,不填默认就是确定
		 */
		btn1: string;
		/**
		 * 按钮,不填就没有
		 */
		btn2: string;
		/**
		 * 按钮,不填就没有
		 */
		btn3: string;
		/**
		 * 链接,如果有,点确定就弹外部链接
		 */
		url: string;
		GetType(): string { return 'Cmd.MessageBoxLobbyCmd_S'; }
	}
	/**
	 * 钻石换房卡（江西客家）
	 */
	export class ExchangeCardByDiamondLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 兑换房卡数
		 */
		card: number;
		GetType(): string { return 'Cmd.ExchangeCardByDiamondLobbyCmd_C'; }
	}
	/**
	 * 钻石 房卡变动 都有专用的接口发送 但是存在冗余 钻石房卡同时变化时 都会推送个人信息刷新
	 */
	export class ExchangeCardByDiamondLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.ExchangeCardByDiamondLobbyCmd_S'; }
	}
	/**
	 * 进入房间前请求一下当前房间有谁在 (金华大厅)
	 */
	export class GetRoomUserLobbyCmd_C {
		/**
		 * 房间id
		 */
		roomId: number;
		GetType(): string { return 'Cmd.GetRoomUserLobbyCmd_C'; }
	}
	export class GetRoomUserLobbyCmd_S {
		/**
		 * 如果为空表示 正常返回 客户端读取desc数据进行显示
		 */
		resultCode: number;
		desc: string;
		/**
		 * 原样返回
		 */
		roomId: number;
		GetType(): string { return 'Cmd.GetRoomUserLobbyCmd_S'; }
	}
	/**
	 * 获取每日排行榜数据
	 */
	export class GetDayRankCmd_C {
		/**
		 * 1今天，2昨天
		 */
		day: number;
		/**
		 * 不传默认可兼容以前的1积分排行榜  2开房钻石消耗排行榜 3开房次数排行榜（暂未实现）
		 */
		type: number;
		/**
		 * 大厅id（兼容老的前端 默认不传时 默认奖励数据为{60,30,20,20,20}）
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetDayRankCmd_C'; }
	}
	export class GetDayRankCmd_S {
		resultCode: number;
		/**
		 * 1今天，2昨天
		 */
		day: number;
		/**
		 * 排行数据
		 */
		infos: DayRankInfo[];
		/**
		 * 玩家自身数据
		 */
		userInfo: DayRankInfo;
		GetType(): string { return 'Cmd.GetDayRankCmd_S'; }
	}
	/**
	 * 领取每日排行榜奖励
	 */
	export class GetDayRankRewardCmd_C {
		/**
		 * 2开房消耗排行榜奖励 3开房次数排行榜奖励（暂未实现）
		 */
		type: number;
		/**
		 * 大厅id （兼容老的前端 默认不传时 默认奖励数据为{60,30,20,20,20}）
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetDayRankRewardCmd_C'; }
	}
	export class GetDayRankRewardCmd_S {
		resultCode: number;
		/**
		 * 第几名
		 */
		rank: number;
		/**
		 * 获取奖励砖石
		 */
		diamond: number;
		GetType(): string { return 'Cmd.GetDayRankRewardCmd_S'; }
	}
	/**
	 * 处罚提示前端 1警告，2禁言，3自言自语，4关禁闭，5踢下线，6封号 暂时只处理了 5 6
	 */
	export class PunishUserCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.PunishUserCmd_S'; }
	}
	/**
	 * 取款请求
	 */
	export class BankWithdrawCmd_C {
		/**
		 * 取款数量
		 */
		num: number;
		/**
		 * 密码
		 */
		passwd: string;
		GetType(): string { return 'Cmd.BankWithdrawCmd_C'; }
	}
	/**
	 * 存款请求
	 */
	export class BankDepositCmd_C {
		/**
		 * 存款数量
		 */
		num: number;
		GetType(): string { return 'Cmd.BankDepositCmd_C'; }
	}
	/**
	 * 余款数量更新
	 */
	export class BankMoneyUpdate_S {
		/**
		 * 身上钱数
		 */
		bodyHave: number;
		/**
		 * 剩款
		 */
		bankHave: number;
		GetType(): string { return 'Cmd.BankMoneyUpdate_S'; }
	}
	/**
	 * 修改密码请求
	 */
	export class ChangePasswordCmd_C {
		/**
		 * 旧密码
		 */
		passwdOld: string;
		/**
		 * 新密码
		 */
		passwdNew: string;
		GetType(): string { return 'Cmd.ChangePasswordCmd_C'; }
	}
	/**
	 * -------------------------------------------------------------------------------------//
	 * 微信红包开始
	 * -------------------------------------------------------------------------------------//
	 *  查看当前微信红包奖励
	 */
	export class GetRedPackRewardInfoLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetRedPackRewardInfoLobbyCmd_C'; }
	}
	/**
	 * 返回当前微信红包奖励
	 */
	export class GetRedPackRewardInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 待提取金额
		 */
		num: number;
		/**
		 * 距离可提取还有多少
		 */
		distance: number;
		/**
		 * 剩余时间
		 */
		surplusTime: number;
		/**
		 * 今日开奖情况
		 */
		infos: RedPackInfo[];
		/**
		 * 活动开始时间(这两个时间传了 有没有用 前端自己决定)
		 */
		startTime: number;
		/**
		 * 活动结束时间
		 */
		endTime: number;
		/**
		 * 已提取金额
		 */
		recvnum: number;
		GetType(): string { return 'Cmd.GetRedPackRewardInfoLobbyCmd_S'; }
	}
	/**
	 * 检测是否可提取微信红包到公众号
	 */
	export class CheckOpenRedPackLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 红包提取类型 nil/1/2/3 不传默认老的开房红包模式/瑞狗迎春/好彩跑得快小程序提现/漳州转盘提现
		 */
		typ: number;
		GetType(): string { return 'Cmd.CheckOpenRedPackLobbyCmd_C'; }
	}
	export class CheckOpenRedPackLobbyCmd_S {
		/**
		 * 检测通过 该字段为nil
		 */
		resultCode: number;
		codeUrl: string;
		/**
		 * 红包提取类型 nil/1 不传默认老的开房红包模式/瑞狗迎春
		 */
		typ: number;
		GetType(): string { return 'Cmd.CheckOpenRedPackLobbyCmd_S'; }
	}
	/**
	 * 提取微信红包到公众号(兼容企业付款)
	 */
	export class OpenRedPackLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 红包提取类型 nil/1/2/3 不传默认老的开房红包模式/瑞狗迎春/好彩跑得快提取到企业付款/漳州转盘红包提现
		 */
		typ: number;
		GetType(): string { return 'Cmd.OpenRedPackLobbyCmd_C'; }
	}
	/**
	 * 提取微信红包到公众号返回
	 */
	export class OpenRedPackLobbyCmd_S {
		resultCode: number;
		/**
		 * 剩余
		 */
		surplus: number;
		/**
		 * 当前提取数据
		 */
		info: openRecord;
		codeUrl: string;
		distance: number;
		/**
		 * 红包提取类型 nil/1 不传默认老的开房红包模式/瑞狗迎春
		 */
		typ: number;
		/**
		 * 已提取总额 好彩跑得快（小程序用）
		 */
		drawAll: number;
		GetType(): string { return 'Cmd.OpenRedPackLobbyCmd_S'; }
	}
	/**
	 * 提取微信红包失败给单独回个东西 让弹框
	 */
	export class OpenRedPackFailLobbyCmd_S {
		/**
		 * 兑换码
		 */
		CDKEY: number;
		GetType(): string { return 'Cmd.OpenRedPackFailLobbyCmd_S'; }
	}
	/**
	 * 查看提现详情
	 */
	export class GetOpenRedPackRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetOpenRedPackRecordLobbyCmd_C'; }
	}
	export class GetOpenRedPackRecordLobbyCmd_S {
		infos: openRecord[];
		GetType(): string { return 'Cmd.GetOpenRedPackRecordLobbyCmd_S'; }
	}
	/**
	 * 大厅下微信红包雨
	 */
	export class GrabRedPackLobbyCmd_Brd {
		/**
		 * 红包id
		 */
		packid: number;
		GetType(): string { return 'Cmd.GrabRedPackLobbyCmd_Brd'; }
	}
	/**
	 * 抢微信红包雨
	 */
	export class GetGrabRedPackLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 红包id
		 */
		packid: number;
		GetType(): string { return 'Cmd.GetGrabRedPackLobbyCmd_C'; }
	}
	/**
	 * 获取微信电话
	 */
	export class WechatLobbyCmd_CS {
		/**
		 * 姓名
		 */
		name: string;
		/**
		 * 手机号码
		 */
		mobile: string;
		/**
		 * 微信联系方式
		 */
		wechat: string;
		GetType(): string { return 'Cmd.WechatLobbyCmd_CS'; }
	}
	/**
	 * 实名认证
	 */
	export class AuthenticationLobbyCmd_C {
		/**
		 * 姓名
		 */
		name: string;
		/**
		 * 身份证号码
		 */
		cardID: string;
		GetType(): string { return 'Cmd.AuthenticationLobbyCmd_C'; }
	}
	export class AuthenticationLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.AuthenticationLobbyCmd_S'; }
	}
	export class AuthenticationLobbyCmd_CS {
		/**
		 * 姓名
		 */
		name: string;
		/**
		 * 身份证号码
		 */
		cardID: string;
		/**
		 * 手机号
		 */
		mobilePhone: string;
		/**
		 * 支付宝账号
		 */
		alipay: string;
		/**
		 * 邀请码
		 */
		inviteCode: string;
		/**
		 * 添加、编辑， 0 获取
		 */
		typ: number;
		resultCode: number;
		GetType(): string { return 'Cmd.AuthenticationLobbyCmd_CS'; }
	}
	/**
	 * 比赛场报名
	 */
	export class EntryMatchLobbyCmd_C {
		lobbyId: number;
		/**
		 * 报名场次
		 */
		playId: number;
		GetType(): string { return 'Cmd.EntryMatchLobbyCmd_C'; }
	}
	export class EntryMatchLobbyCmd_S {
		resultCode: number;
		lobbyId: number;
		playId: number;
		/**
		 * 报名人数
		 */
		enrollment: number;
		/**
		 * 总需人数
		 */
		totalCount: number;
		GetType(): string { return 'Cmd.EntryMatchLobbyCmd_S'; }
	}
	/**
	 * 推送比赛场的报名人数给当前报名等待的人
	 */
	export class EntryMatchUserCountLobbyCmd_Brd {
		playId: number;
		/**
		 * 报名人数
		 */
		enrollment: number;
		/**
		 * 总需人数
		 */
		totalCount: number;
		GetType(): string { return 'Cmd.EntryMatchUserCountLobbyCmd_Brd'; }
	}
	/**
	 * 退赛
	 */
	export class QuitMatchLobbyCmd_C {
		lobbyId: number;
		playId: number;
		GetType(): string { return 'Cmd.QuitMatchLobbyCmd_C'; }
	}
	export class QuitMatchLobbyCmd_S {
		resultCode: number;
		enrollment: number;
		totalCount: number;
		GetType(): string { return 'Cmd.QuitMatchLobbyCmd_S'; }
	}
	/**
	 * 获取报名条件
	 */
	export class GetEnrollConditionLobbyCmd_C {
		playId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetEnrollConditionLobbyCmd_C'; }
	}
	export class GetEnrollConditionLobbyCmd_S {
		resultCode: number;
		/**
		 * 开始时间
		 */
		st: string;
		/**
		 * 结束时间
		 */
		et: string;
		enrollment: number;
		totalCount: number;
		/**
		 * 是否已经报名，前端用于判断报名界面的显示 1已报名  2未报名
		 */
		isEnroll: number;
		GetType(): string { return 'Cmd.GetEnrollConditionLobbyCmd_S'; }
	}
	/**
	 * 比赛场战绩与奖励
	 */
	export class MatchLotteryLobbyCmd_Brd {
		/**
		 * 战绩类型 1中途淘汰，2等待晋级，3比赛结束最终奖励
		 */
		rType: number;
		rank: number;
		round: number;
		point: number;
		GetType(): string { return 'Cmd.MatchLotteryLobbyCmd_Brd'; }
	}
	/**
	 * 等待晋级页面数据刷新
	 */
	export class WaitMatchPromotionInfoLobbyCmd_Brd {
		playId: number;
		/**
		 * 剩余晋级数量
		 */
		remainder: number;
		GetType(): string { return 'Cmd.WaitMatchPromotionInfoLobbyCmd_Brd'; }
	}
	/**
	 * 获取符合比赛场符合报名条件的人数
	 */
	export class JoinMatch {
		playId: number;
		userCount: number;
		/**
		 * 是否可点击
		 */
		click: boolean;
		GetType(): string { return 'Cmd.JoinMatch'; }
	}
	export class GetJoinMatchUserCountCmd_C {
		playIdSet: number[];
		GetType(): string { return 'Cmd.GetJoinMatchUserCountCmd_C'; }
	}
	export class GetJoinMatchUserCountCmd_S {
		resultCode: number;
		joinMatch: JoinMatch[];
		GetType(): string { return 'Cmd.GetJoinMatchUserCountCmd_S'; }
	}
	/**
	 * 比赛场异常补偿弹窗
	 */
	export class SendMatchAbnormalLobbyCmd_Brd {
		/**
		 * 赔偿信息
		 */
		compensation: string;
		GetType(): string { return 'Cmd.SendMatchAbnormalLobbyCmd_Brd'; }
	}
	/**
	 * 符合比赛场报名条件人的排行信息
	 */
	export class JoinMatchRank {
		nickname: string;
		/**
		 * 夺冠次数
		 */
		crownnum: number;
		GetType(): string { return 'Cmd.JoinMatchRank'; }
	}
	export class GetJoinMatchRankLobbyCmd_C {
		playId: number;
		GetType(): string { return 'Cmd.GetJoinMatchRankLobbyCmd_C'; }
	}
	export class GetJoinMatchRankLobbyCmd_S {
		joinMatchRank: JoinMatchRank[];
		/**
		 * 可报名多少人
		 */
		enrollment: number;
		/**
		 * 总需多少人
		 */
		totalCount: number;
		/**
		 * 当前时间
		 */
		curTime: string;
		GetType(): string { return 'Cmd.GetJoinMatchRankLobbyCmd_S'; }
	}
	/**
	 * 百人场 进入某个游戏
	 */
	export class EnterHundredGameLobbyCmd_C {
		gameId: number;
		/**
		 * 是否是体验场 1是
		 */
		isLearn: number;
		/**
		 * 测试服允许前端指定区服id
		 */
		preZoneId: number;
		GetType(): string { return 'Cmd.EnterHundredGameLobbyCmd_C'; }
	}
	export class EnterHundredGameLobbyCmd_S {
		resultCode: number;
		gameId: number;
		zoneId: number;
		/**
		 * 是否是体验场 1是
		 */
		isLearn: number;
		GetType(): string { return 'Cmd.EnterHundredGameLobbyCmd_S'; }
	}
	/**
	 * -------------------------------------------------------------------------------------//
	 *  每日签到活动(麻将金币场引入的 二号签到流程 - -#)
	 * -------------------------------------------------------------------------------------//
	 */
	export class ContinueSignInfo {
		id: number;
		/**
		 * 连续领取天数
		 */
		continueDay: number;
		/**
		 * 是否已领取
		 */
		bReceived: boolean;
		/**
		 * 是否可领取
		 */
		bCouldReceive: boolean;
		GetType(): string { return 'Cmd.ContinueSignInfo'; }
	}
	/**
	 * 用户签到信息获取
	 */
	export class UserSignInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.UserSignInfoLobbyCmd_C'; }
	}
	export class UserSignInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 本周已签到日期(周一至周日 分别为 1 -- 7)
		 */
		signWeek: number[];
		/**
		 * 连续签到数据
		 */
		continue: ContinueSignInfo[];
		/**
		 * 今日是否已领取
		 */
		bTodayReceived: boolean;
		continueDay: number;
		/**
		 * 未领取的本周签到(周一至周日 分别为 1 -- 7) 空值表示没有未领取
		 */
		noSignWeek: number[];
		/**
		 * 当天可领取的每周签到(周一至周日 分别为 1 -- 7) 空值表示没有可领取
		 */
		signWeekDay: number;
		GetType(): string { return 'Cmd.UserSignInfoLobbyCmd_S'; }
	}
	/**
	 * 用户今日签到
	 */
	export class UserSignTodayLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.UserSignTodayLobbyCmd_C'; }
	}
	export class UserSignTodayLobbyCmd_S {
		resultCode: number;
		curWeek: number;
		GetType(): string { return 'Cmd.UserSignTodayLobbyCmd_S'; }
	}
	/**
	 * 用户领取累计签到奖励
	 */
	export class UserSignContinueLobbyCmd_C {
		lobbyId: number;
		/**
		 * 累计签到id
		 */
		continueSignId: number;
		GetType(): string { return 'Cmd.UserSignContinueLobbyCmd_C'; }
	}
	export class UserSignContinueLobbyCmd_S {
		resultCode: number;
		/**
		 * 累计签到id
		 */
		continueSignId: number;
		GetType(): string { return 'Cmd.UserSignContinueLobbyCmd_S'; }
	}
	/**
	 * -------------------------------------------------------------------------------------//
	 *  金币场排行榜(麻将金币场引入的 二号排行榜 跟麻将排行榜不混在一起 - -#)
	 * -------------------------------------------------------------------------------------//
	 */
	export class UserRankInfo {
		uid: number;
		headUrl: string;
		gender: string;
		nickName: string;
		signature: string;
		/**
		 * 玩家 总共筹码
		 */
		allChips: number;
		/**
		 * 玩家 当天赢取筹码
		 */
		winChips: number;
		/**
		 * 玩家 总充值
		 */
		allRecharge: number;
		/**
		 * 玩家 魅力 （暂时先不用就行了 不理它）
		 */
		charm: number;
		/**
		 * 玩家 自身排名
		 */
		rank: number;
		/**
		 * 玩家 vip等级
		 */
		vip: number;
		/**
		 * 玩家 魅力值
		 */
		userCp: number;
		/**
		 * 玩家 头衔
		 */
		title: string;
		/**
		 * 正在使用的个人形象 2017.11.15好彩真人需求
		 */
		personalImage: Cmd.PersonalImage[];
		/**
		 * 玩家游戏盈利金币
		 */
		dailyWinChips: number;
		/**
		 * 周魅力值
		 */
		weekUserCp: number;
		/**
		 * 玩家周游戏盈利金币
		 */
		weekWinChips: number;
		/**
		 * 货币类型 1 钻石 2 金币
		 */
		rType: number;
		GetType(): string { return 'Cmd.UserRankInfo'; }
	}
	/**
	 * 获取排行榜信息
	 */
	export class GetListRankCmd_C {
		/**
		 * 不填或者1表示钻石,2表示金豆
		 */
		rType: number;
		/**
		 * 第几次请求 一次请求获取20个数据
		 */
		index: number;
		GetType(): string { return 'Cmd.GetListRankCmd_C'; }
	}
	/**
	 * 获取排行榜信息回复
	 */
	export class GetListRankCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 是否首次进入排行榜（如果在设置中设置过是否参加排行榜则 也算）
		 */
		isFirst: boolean;
		/**
		 * 金币排行榜
		 */
		allChipsRank: UserRankInfo[];
		/**
		 * 我的金币排行信息
		 */
		myAllChipsRank: UserRankInfo;
		/**
		 * 大赢家排行榜
		 */
		winChipsRank: UserRankInfo[];
		/**
		 * 我的大赢家排行信息
		 */
		myWinChipsRank: UserRankInfo;
		/**
		 * 充值排行榜
		 */
		allRechargeRankList: UserRankInfo[];
		/**
		 * 我的充值排行榜
		 */
		myAllRechargeRank: UserRankInfo;
		index: number;
		/**
		 * 昨日充值排行榜
		 */
		allYesterdayRechargeList: UserRankInfo[];
		/**
		 * 我的昨日充值排行榜
		 */
		myYesterdayRechargeRank: UserRankInfo;
		/**
		 * 更新时间
		 */
		updatetime: number;
		GetType(): string { return 'Cmd.GetListRankCmd_S'; }
	}
	/**
	 * 获取大赢家排行榜奖励
	 */
	export class GetWinChipsRankRewardCmd_C {
		GetType(): string { return 'Cmd.GetWinChipsRankRewardCmd_C'; }
	}
	/**
	 * 获取大赢家排行榜奖励回复
	 */
	export class GetWinChipsRankRewardCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 领取多少筹码
		 */
		chips: number;
		/**
		 * 当前剩余多少筹码
		 */
		remainder: number;
		GetType(): string { return 'Cmd.GetWinChipsRankRewardCmd_S'; }
	}
	/**
	 * 魅力值排行榜
	 */
	export class GetUserCpRankListLobbyCmd_C {
		GetType(): string { return 'Cmd.GetUserCpRankListLobbyCmd_C'; }
	}
	export class GetUserCpRankListLobbyCmd_S {
		allUserCpRank: UserRankInfo[];
		/**
		 * 自己的排名，为空则表示未上榜
		 */
		myRank: number;
		GetType(): string { return 'Cmd.GetUserCpRankListLobbyCmd_S'; }
	}
	/**
	 * 好彩真人金币排行榜(无数个排行榜)
	 */
	export class GetCoinLobbyRankListLobbyCmd_C {
		/**
		 * 1财富总榜 2充值总榜 3魅力值周榜 4魅力值总榜 5游戏盈利榜 6银鲨榜 7金鲨榜
		 */
		rType: number;
		/**
		 * 如果查询的是游戏盈利榜则需要传对应的游戏id过来
		 */
		gameId: number;
		GetType(): string { return 'Cmd.GetCoinLobbyRankListLobbyCmd_C'; }
	}
	export class GetCoinLobbyRankListLobbyCmd_S {
		resultCode: number;
		rType: number;
		/**
		 * 如果查询的是游戏盈利榜则需要传对应的游戏id过来
		 */
		gameId: number;
		rankInfo: UserRankInfo[];
		/**
		 * 自己的排名，为空则表示未上榜
		 */
		myRank: number;
		/**
		 * 差多少上榜
		 */
		distance: number;
		/**
		 * 更新时间
		 */
		updatetime: number;
		GetType(): string { return 'Cmd.GetCoinLobbyRankListLobbyCmd_S'; }
	}
	/**
	 * 芝麻斗牌 排行榜(新加一个 不用兼容以前的)
	 */
	export class GetRankListLobbyCmd_C {
		/**
		 * 1 金币 2 钻石
		 */
		rType: number;
		/**
		 * 前端是否已有数据 1:有 0:没有
		 */
		bData: number;
		GetType(): string { return 'Cmd.GetRankListLobbyCmd_C'; }
	}
	export class GetRankListLobbyCmd_S {
		resultCode: number;
		rType: number;
		rankInfo: UserRankInfo[];
		myRank: number;
		myChips: number;
		GetType(): string { return 'Cmd.GetRankListLobbyCmd_S'; }
	}
	/**
	 * 大厅设置
	 */
	export class GameSetLobbyCmd_C {
		/**
		 * 设置哪一项
		 */
		setType: SetType;
		/**
		 * 开 或 关
		 */
		status: boolean;
		GetType(): string { return 'Cmd.GameSetLobbyCmd_C'; }
	}
	export class GameSetLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GameSetLobbyCmd_S'; }
	}
	/**
	 * 获取当前设置
	 */
	export class GetGameSetLobbyCmd_C {
		GetType(): string { return 'Cmd.GetGameSetLobbyCmd_C'; }
	}
	export class GetGameSetLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 音乐设置
		 */
		music: boolean;
		/**
		 * 音效设置
		 */
		sound: boolean;
		/**
		 * 排行榜设置
		 */
		rank: boolean;
		GetType(): string { return 'Cmd.GetGameSetLobbyCmd_S'; }
	}
	/**
	 * 领取vip奖励
	 */
	export class GetVipRewardLobbyCmd_C {
		lobbyId: number;
		/**
		 * 领取制定档次
		 */
		level: number;
		GetType(): string { return 'Cmd.GetVipRewardLobbyCmd_C'; }
	}
	export class GetVipRewardLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 领取制定档次
		 */
		level: number;
		GetType(): string { return 'Cmd.GetVipRewardLobbyCmd_S'; }
	}
	/**
	 * ---------------------------------商城购买相关----------------------------//
	 */
	export class BuyGoodsLobbyCmd_C {
		shopId: number;
		shopNbr: number;
		GetType(): string { return 'Cmd.BuyGoodsLobbyCmd_C'; }
	}
	export class BuyGoodsLobbyCmd_S {
		resultCode: number;
		shopId: number;
		shopNbr: number;
		GetType(): string { return 'Cmd.BuyGoodsLobbyCmd_S'; }
	}
	export class TaskItem {
		/**
		 * 任务id
		 */
		taskId: number;
		/**
		 * 任务状态
		 */
		taskStatus: TaskStatus;
		/**
		 * 子任务已完成数量
		 */
		subTaskCompletedNbr: number;
		/**
		 * 子任务总数量
		 */
		subTaskAllNbr: number;
		GetType(): string { return 'Cmd.TaskItem'; }
	}
	export class DaysTaskItem {
		/**
		 * 任务id
		 */
		taskId: number;
		/**
		 * 任务状态
		 */
		taskStatus: TaskStatus;
		/**
		 * 当前完成进度
		 */
		current: number;
		/**
		 * 已领取次数
		 */
		recv: number;
		/**
		 * 剩余领取次数
		 */
		remainder: number;
		GetType(): string { return 'Cmd.DaysTaskItem'; }
	}
	/**
	 * 进入免费金币界面
	 */
	export class IntoFreeGoldLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.IntoFreeGoldLobbyCmd_C'; }
	}
	export class IntoFreeGoldLobbyCmd_S {
		resultCode: number;
		taskInfo: DaysTaskItem[];
		/**
		 * 引入金币场系统后 新增的 其他类型任务
		 */
		otherTaskInfo: DaysTaskItem[];
		/**
		 * 成就任务，属于一次性任务
		 */
		onceTaskInfo: DaysTaskItem[];
		GetType(): string { return 'Cmd.IntoFreeGoldLobbyCmd_S'; }
	}
	/**
	 * 领取指定任务奖励
	 */
	export class GetDaysTaskRewardLobbyCmd_C {
		taskId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetDaysTaskRewardLobbyCmd_C'; }
	}
	export class GetDaysTaskRewardLobbyCmd_S {
		resultCode: number;
		taskId: number;
		/**
		 * 后续任务
		 */
		followTasks: DaysTaskItem[];
		GetType(): string { return 'Cmd.GetDaysTaskRewardLobbyCmd_S'; }
	}
	/**
	 * 向前端发送破产补助弹窗
	 */
	export class SendBankruptcyLobbyCmd_Brd {
		/**
		 * 已经领取过多少次破产补助  总次数、金额等 前端自己读表
		 */
		bankruptcy: number;
		GetType(): string { return 'Cmd.SendBankruptcyLobbyCmd_Brd'; }
	}
	/**
	 * 游戏任务进度 例如：1/10
	 */
	export class GetGameTaskScheduleLobbyCmd_C {
		/**
		 * 游戏id
		 */
		gameId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetGameTaskScheduleLobbyCmd_C'; }
	}
	/**
	 * 每更新一次服务器会主动推送_S给客户端
	 */
	export class GetGameTaskScheduleLobbyCmd_S {
		resultCode: number;
		gameId: number;
		/**
		 * 前面的值 例如：1/10
		 */
		pre: number;
		/**
		 * 后面的值 例如：1/10
		 */
		back: number;
		/**
		 * 1为可领取状态，前端用来展示光圈 2为所有的任务奖励都已经领取
		 */
		receive: number;
		taskId: number;
		GetType(): string { return 'Cmd.GetGameTaskScheduleLobbyCmd_S'; }
	}
	/**
	 * 获取任务列表
	 */
	export class GetGameTaskListLobbyCmd_C {
		gameId: number;
		lobbyId: number;
		/**
		 * 场次ID
		 */
		sceneId: number;
		GetType(): string { return 'Cmd.GetGameTaskListLobbyCmd_C'; }
	}
	export class GetGameTaskListLobbyCmd_S {
		resultCode: number;
		gameId: number;
		gameTaskInfo: DaysTaskItem[];
		/**
		 * 场次ID
		 */
		sceneId: number;
		GetType(): string { return 'Cmd.GetGameTaskListLobbyCmd_S'; }
	}
	/**
	 * 领取指定游戏任务奖励
	 */
	export class GetGameTaskRewardLobbyCmd_C {
		taskId: number;
		gameId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetGameTaskRewardLobbyCmd_C'; }
	}
	export class GetGameTaskRewardLobbyCmd_S {
		resultCode: number;
		taskId: number;
		gameId: number;
		goods: Cmd.Goods[];
		/**
		 * 描述，三张大厅使用
		 */
		desc: string;
		/**
		 * 后续任务
		 */
		followTasks: DaysTaskItem[];
		GetType(): string { return 'Cmd.GetGameTaskRewardLobbyCmd_S'; }
	}
	/**
	 * 新金币场首充
	 */
	export class FirstRechargeInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.FirstRechargeInfoLobbyCmd_C'; }
	}
	/**
	 * 新金币场首充弹窗
	 */
	export class FirstRechargeInfoLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 商城id
		 */
		shopId: number;
		/**
		 * 是否可以领取 1 可以领取
		 */
		receive: number;
		GetType(): string { return 'Cmd.FirstRechargeInfoLobbyCmd_S'; }
	}
	/**
	 * 领取首充礼包
	 */
	export class FirstRecharge {
		/**
		 * 1 金币  2钻石  (暂时只有金币)
		 */
		awardType: number;
		/**
		 * 奖励数量
		 */
		awardNum: number;
		GetType(): string { return 'Cmd.FirstRecharge'; }
	}
	export class ReceiveFirstRechargeLobbyCmd_C {
		GetType(): string { return 'Cmd.ReceiveFirstRechargeLobbyCmd_C'; }
	}
	export class ReceiveFirstRechargeLobbyCmd_S {
		resultCode: number;
		award: FirstRecharge[];
		GetType(): string { return 'Cmd.ReceiveFirstRechargeLobbyCmd_S'; }
	}
	/**
	 * 限时优惠活动
	 */
	export class LimitOfferChipsLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.LimitOfferChipsLobbyCmd_C'; }
	}
	/**
	 * 限时优惠活动的弹窗
	 */
	export class LimitOfferChipsLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 对应的档位id
		 */
		limitId: number;
		/**
		 * 限时活动倒计时剩余时间
		 */
		limitActTime: number;
		GetType(): string { return 'Cmd.LimitOfferChipsLobbyCmd_S'; }
	}
	/**
	 * 兑换限时优惠的金币
	 */
	export class GetLimitOfferChipsLobbyCmd_C {
		/**
		 * 对应的档位id
		 */
		limitId: number;
		/**
		 * 对应的优惠id
		 */
		shopId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetLimitOfferChipsLobbyCmd_C'; }
	}
	export class GetLimitOfferChipsLobbyCmd_S {
		resultCode: number;
		shopId: number;
		GetType(): string { return 'Cmd.GetLimitOfferChipsLobbyCmd_S'; }
	}
	/**
	 * 幸运翻翻翻资格
	 */
	export class GetLuckTurnCardInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardInfoLobbyCmd_C'; }
	}
	export class GetLuckTurnCardInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 0拥有免费资格(免费抽奖) 1当前已使用(翻牌需要消耗货币) 2暂未拥有(不允许参与翻牌)
		 */
		freeTurn: number;
		/**
		 * 当前最大局数
		 */
		curRound: number;
		/**
		 * 免费条件的局数
		 */
		freeRound: number;
		/**
		 * 1免费 2钻石
		 */
		costType: number;
		/**
		 * 消耗钻石数量
		 */
		costNum: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardInfoLobbyCmd_S'; }
	}
	/**
	 * 幸运翻翻翻的翻牌结果
	 */
	export class GetLuckTurnCardResultLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardResultLobbyCmd_C'; }
	}
	export class GetLuckTurnCardResultLobbyCmd_S {
		resultCode: number;
		/**
		 * 1金币 2钻石
		 */
		awardType: number;
		/**
		 * 数量
		 */
		awardNum: number;
		/**
		 * 0拥有免费资格(免费抽奖) 1当前已使用(翻牌需要消耗货币) 2暂未拥有(不允许参与翻牌)
		 */
		freeTurn: number;
		/**
		 * 当前最大局数
		 */
		curRound: number;
		/**
		 * 免费条件的局数
		 */
		freeRound: number;
		/**
		 * 1免费 2钻石
		 */
		costType: number;
		/**
		 * 消耗钻石数量
		 */
		costNum: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardResultLobbyCmd_S'; }
	}
	/**
	 *  新版幸运翻翻翻
	 *  金币奖励集合
	 */
	export class RewardChips {
		/**
		 * chips只有在第一轮或者已领取的时候才会回给客户端
		 */
		chips: number;
		/**
		 * 是否是最大值 1是
		 */
		maxChips: number;
		/**
		 * 是否已领取 1是
		 */
		recv: number;
		/**
		 * 第几张牌
		 */
		index: number;
		GetType(): string { return 'Cmd.RewardChips'; }
	}
	/**
	 * 新版幸运翻翻翻主界面
	 */
	export class NewLuckTurnCardShowLobbyCmd_C {
		GetType(): string { return 'Cmd.NewLuckTurnCardShowLobbyCmd_C'; }
	}
	export class NewLuckTurnCardShowLobbyCmd_S {
		resultCode: number;
		/**
		 * 当前完成局数
		 */
		curRound: number;
		/**
		 * 总局数
		 */
		totalRound: number;
		/**
		 * 翻牌类型 1:免费 2:钻石 3:今天已结束,不可领
		 */
		costType: number;
		/**
		 * 消耗数量 只有用钻石的时候才存在
		 */
		costNum: number;
		/**
		 * 幸运翻翻翻的轮数
		 */
		luckRound: number;
		/**
		 * 金币奖励集合
		 */
		reward: RewardChips[];
		GetType(): string { return 'Cmd.NewLuckTurnCardShowLobbyCmd_S'; }
	}
	/**
	 * 新版幸运翻翻翻翻牌
	 */
	export class NewGetLuckTurnCardRewardLobbyCmd_C {
		/**
		 * 第几张牌
		 */
		index: number;
		GetType(): string { return 'Cmd.NewGetLuckTurnCardRewardLobbyCmd_C'; }
	}
	export class NewGetLuckTurnCardRewardLobbyCmd_S {
		resultCode: number;
		/**
		 * 获得的金币数
		 */
		rewardChips: number;
		/**
		 * 下面的用于刷新界面
		 * 当前完成局数
		 */
		curRound: number;
		/**
		 * 总局数
		 */
		totalRound: number;
		/**
		 * 翻牌类型 1:免费 2:钻石 3:今天已结束,不可领
		 */
		costType: number;
		/**
		 * 消耗数量 只有用钻石的时候才存在
		 */
		costNum: number;
		/**
		 * 幸运翻翻翻的轮数
		 */
		luckRound: number;
		/**
		 * 金币奖励集合
		 */
		reward: RewardChips[];
		GetType(): string { return 'Cmd.NewGetLuckTurnCardRewardLobbyCmd_S'; }
	}
	/**
	 * 第三版幸运翻翻翻
	 * 对应的翻牌结果
	 */
	export class TurnReward {
		/**
		 * 第几张牌
		 */
		index: number;
		/**
		 * 状态 0未翻开 1翻开
		 */
		status: number;
		/**
		 * 翻开后的话费券数量 status为1的时候存在
		 */
		reward: number;
		/**
		 * 金币翻牌未翻开时展示话费券的最小值和最大值
		 * 最小值
		 */
		minReward: number;
		/**
		 * 最大值
		 */
		maxReward: number;
		/**
		 * 金币翻牌需要消耗的金币数量
		 */
		costChips: number;
		GetType(): string { return 'Cmd.TurnReward'; }
	}
	/**
	 * 获取对应的界面数据
	 */
	export class GetLuckTurnCardShowInfoV3LobbyCmd_C {
		lobbyId: number;
		/**
		 * 0主界面 1免费抽奖界面 2金币抽奖界面
		 */
		sType: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardShowInfoV3LobbyCmd_C'; }
	}
	export class GetLuckTurnCardShowInfoV3LobbyCmd_S {
		resultCode: number;
		sType: number;
		/**
		 * 主界面的话费券展示集合
		 */
		couponList: number[];
		/**
		 * 免费抽奖当前完成的对局信息
		 * 当前局数
		 */
		curRound: number;
		/**
		 * 总局数
		 */
		totalRound: number;
		/**
		 * 免费界面数据
		 */
		freeTurn: TurnReward[];
		/**
		 * 金币界面数据
		 */
		chipsTurn: TurnReward[];
		/**
		 * 轮数
		 */
		luckRound: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardShowInfoV3LobbyCmd_S'; }
	}
	/**
	 * 翻牌结果
	 */
	export class GetLuckTurnCardRewardV3LobbyCmd_C {
		lobbyId: number;
		/**
		 * 1免费翻 2金币翻
		 */
		opType: number;
		/**
		 * 翻第几张牌
		 */
		index: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardRewardV3LobbyCmd_C'; }
	}
	export class GetLuckTurnCardRewardV3LobbyCmd_S {
		resultCode: number;
		opType: number;
		reward: TurnReward;
		/**
		 * 轮数
		 */
		luckRound: number;
		/**
		 * 免费翻牌刷新
		 * 当前局数
		 */
		curRound: number;
		/**
		 * 总局数
		 */
		totalRound: number;
		GetType(): string { return 'Cmd.GetLuckTurnCardRewardV3LobbyCmd_S'; }
	}
	/**
	 * 好彩金币场的救济金
	 */
	export class GetReliefPayStatusLobbyCmd_C {
		lobbyId: number;
		/**
		 * 操作类型：1 查询 2 领取
		 */
		optype: number;
		GetType(): string { return 'Cmd.GetReliefPayStatusLobbyCmd_C'; }
	}
	export class GetReliefPayStatusLobbyCmd_S {
		resultCode: number;
		reliefPay: DaysTaskItem;
		/**
		 * 操作类型：1 查询 2 领取
		 */
		optype: number;
		GetType(): string { return 'Cmd.GetReliefPayStatusLobbyCmd_S'; }
	}
	/**
	 * 礼包码兑换功能
	 */
	export class UserGiftCodeLobbyCmd_C {
		giftCode: string;
		GetType(): string { return 'Cmd.UserGiftCodeLobbyCmd_C'; }
	}
	export class UserGiftCodeLobbyCmd_S {
		resultCode: number;
		items: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.UserGiftCodeLobbyCmd_S'; }
	}
	/**
	 * 好彩金币场快速开始按钮
	 */
	export class QuickStartGameLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.QuickStartGameLobbyCmd_C'; }
	}
	export class QuickStartGameLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.QuickStartGameLobbyCmd_S'; }
	}
	/**
	 * 进入绑定代理商界面 -- 福建新增 这个感觉跟存在自身的parent不是同一个
	 */
	export class IntoHigherAgentLobbyCmd_C {
		/**
		 * 绑定类型 默认为nil 兼容老版本短id  1表示当前请求得是上级代理的真实uid
		 */
		bindType: number;
		GetType(): string { return 'Cmd.IntoHigherAgentLobbyCmd_C'; }
	}
	export class IntoHigherAgentLobbyCmd_S {
		/**
		 * 查询结果 成功不返回 失败返回错误码
		 */
		resultCode: number;
		/**
		 * 有则传 无则为nil
		 */
		higherAgent: number;
		GetType(): string { return 'Cmd.IntoHigherAgentLobbyCmd_S'; }
	}
	/**
	 * 通过大厅向代理商系统 绑定上级代理(福建新增的一个绑定类型)
	 */
	export class EnquireBindAgent2LobbyCmd_C {
		higherAgent: number;
		/**
		 * 绑定类型 默认为nil 兼容老版本短id  1表示当前输入的上级id为上级玩家uid
		 */
		bindType: number;
		GetType(): string { return 'Cmd.EnquireBindAgent2LobbyCmd_C'; }
	}
	export class EnquireBindAgent2LobbyCmd_S {
		/**
		 * 查询结果 成功不返回 失败返回错误码
		 */
		resultCode: number;
		/**
		 * 绑定成功后 带回来
		 */
		higherAgent: number;
		GetType(): string { return 'Cmd.EnquireBindAgent2LobbyCmd_S'; }
	}
	/**
	 * zqb银行相关协议 不共用西安的
	 */
	export class AccessBankChipsLobbyCmd_C {
		lobbyId: number;
		/**
		 * 操作类型 1/2  存、取
		 */
		typ: number;
		/**
		 * 货币类型 1/2/3 金币、钻石、房卡
		 */
		chipsType: number;
		/**
		 * 数值
		 */
		num: number;
		/**
		 * 密码 暂时不需要密码 所以暂无密码修改设定等
		 */
		passwd: string;
		GetType(): string { return 'Cmd.AccessBankChipsLobbyCmd_C'; }
	}
	export class AccessBankChipsLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.AccessBankChipsLobbyCmd_S'; }
	}
	/**
	 * 修改用户信息(好彩真人有些信息需要特殊处理在这里重新定义下)
	 */
	export class UserInfoModifyLobbyCmd_C {
		/**
		 * 暂时只有昵称特殊处理,后续有其他的再添加
		 */
		nickName: string;
		GetType(): string { return 'Cmd.UserInfoModifyLobbyCmd_C'; }
	}
	export class UserInfoModifyLobbyCmd_S {
		resultCode: number;
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.UserInfoModifyLobbyCmd_S'; }
	}
	/**
	 * 申请添加好友
	 */
	export class AddFriendLobbyCmd_C {
		uid: number;
		/**
		 * 好友验证信息
		 */
		msg: string;
		GetType(): string { return 'Cmd.AddFriendLobbyCmd_C'; }
	}
	export class AddFriendLobbyCmd_S {
		resultCode: number;
		/**
		 * optional UserBaseInfo 	userInfo   = 2; //好友信息
		 */
		uid: number;
		GetType(): string { return 'Cmd.AddFriendLobbyCmd_S'; }
	}
	/**
	 * 删除好友
	 */
	export class RemoveFriendLobbyCmd_C {
		/**
		 * 好友ID
		 */
		uid: number;
		GetType(): string { return 'Cmd.RemoveFriendLobbyCmd_C'; }
	}
	export class RemoveFriendLobbyCmd_S {
		resultCode: number;
		/**
		 * 删除好友ID
		 */
		uid: number;
		GetType(): string { return 'Cmd.RemoveFriendLobbyCmd_S'; }
	}
	/**
	 * 获取好友列表
	 */
	export class GetFriendListLobbyCmd_C {
		/**
		 * 分页
		 */
		index: number;
		GetType(): string { return 'Cmd.GetFriendListLobbyCmd_C'; }
	}
	export class GetFriendListLobbyCmd_S {
		resultCode: number;
		/**
		 * 为空则表示没有数据
		 */
		friendList: Cmd.UserBaseInfo[];
		index: number;
		/**
		 * 好友数量
		 */
		friendNum: number;
		/**
		 * 可加好友总量
		 */
		totalNum: number;
		GetType(): string { return 'Cmd.GetFriendListLobbyCmd_S'; }
	}
	/**
	 * 好友申请列表
	 */
	export class GetFriendApplyListLobbyCmd_C {
		/**
		 * 分页
		 */
		index: number;
		GetType(): string { return 'Cmd.GetFriendApplyListLobbyCmd_C'; }
	}
	export class GetFriendApplyListLobbyCmd_S {
		resultCode: number;
		/**
		 * 为空则表示没有数据
		 */
		applyList: Cmd.UserBaseInfo[];
		index: number;
		/**
		 * 有验证信息申请
		 */
		applyUser: GetFriendApplyListLobbyCmd_S.ApplyUser[];
		GetType(): string { return 'Cmd.GetFriendApplyListLobbyCmd_S'; }
	}
	export module GetFriendApplyListLobbyCmd_S {
		export class ApplyUser {
			user: Cmd.UserBaseInfo;
			/**
			 * 好友验证信息
			 */
			msg: string;
			/**
			 * 0: 没有操作过, 1: 同意，2:拒绝
			 */
			state: number;
			GetType(): string { return 'Cmd.GetFriendApplyListLobbyCmd_S.ApplyUser'; }
		}
	}
	/**
	 * 同意，拒绝好友申请
	 */
	export class DealFriendApplyListLobbyCmd_C {
		/**
		 * 1:同意，2:拒绝，3:全部同意，4:全部拒绝,  5:删除
		 */
		type: number;
		uid: number;
		GetType(): string { return 'Cmd.DealFriendApplyListLobbyCmd_C'; }
	}
	export class DealFriendApplyListLobbyCmd_S {
		resultCode: number;
		type: number;
		uid: number;
		GetType(): string { return 'Cmd.DealFriendApplyListLobbyCmd_S'; }
	}
	/**
	 * 查找特定玩家(因为存在机器人的情况所有不能用UserInfoGetLobbyCmd_C UserInfoGetLobbyCmd_S的协议)
	 */
	export class SearchUserLobbyCmd_C {
		/**
		 * 玩家ID
		 */
		uid: number;
		/**
		 * 1 获取指定好友信息 2 获取好友信息和金币场战绩信息
		 */
		type: number;
		GetType(): string { return 'Cmd.SearchUserLobbyCmd_C'; }
	}
	export class SearchUserLobbyCmd_S {
		resultCode: number;
		/**
		 * 为空则表示玩家不存在
		 */
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 金币场战绩信息  //本来打算让前端自己去将userinfo带到具体的信息面板，前端不好处理，这里将根据type在重新返回下
		 */
		gameRecord: CoinGameRecord[];
		type: number;
		GetType(): string { return 'Cmd.SearchUserLobbyCmd_S'; }
	}
	/**
	 * 查找好友界面
	 */
	export class SearchFriendsListLobbyCmd_C {
		/**
		 * 刷新次数
		 */
		refurbish: number;
		GetType(): string { return 'Cmd.SearchFriendsListLobbyCmd_C'; }
	}
	export class SearchFriendsListLobbyCmd_S {
		/**
		 * 刷新次数
		 */
		refurbish: number;
		friendList: Cmd.UserBaseInfo[];
		GetType(): string { return 'Cmd.SearchFriendsListLobbyCmd_S'; }
	}
	/**
	 * 好友聊天
	 */
	export class FriendChatLobbyCmd_C {
		chatInfo: Cmd.ChatInfo;
		GetType(): string { return 'Cmd.FriendChatLobbyCmd_C'; }
	}
	/**
	 * 发送和接收者都用这一条消息推送
	 */
	export class FriendChatLobbyCmd_S {
		resultCode: number;
		chatInfo: Cmd.ChatInfo;
		GetType(): string { return 'Cmd.FriendChatLobbyCmd_S'; }
	}
	/**
	 * 好友聊天历史记录
	 */
	export class FriendChatRecordLobbyCmd_C {
		uid: number;
		GetType(): string { return 'Cmd.FriendChatRecordLobbyCmd_C'; }
	}
	export class FriendChatRecordLobbyCmd_S {
		resultCode: number;
		uid: number;
		/**
		 * 聊天历史记录
		 */
		records: Cmd.ChatInfo[];
		GetType(): string { return 'Cmd.FriendChatRecordLobbyCmd_S'; }
	}
	/**
	 * 消息红点功能
	 */
	export class RedPoint {
		msgType: Cmd.MsgType;
		msgNum: number;
		clubId: number;
		GetType(): string { return 'Cmd.RedPoint'; }
	}
	export class ShowRedPointLobbyCmd_S {
		redPoint: RedPoint[];
		GetType(): string { return 'Cmd.ShowRedPointLobbyCmd_S'; }
	}
	/**
	 * 移除红点请求
	 */
	export class RemoveRedPointLobbyCmd_CS {
		redPoint: RedPoint[];
		GetType(): string { return 'Cmd.RemoveRedPointLobbyCmd_CS'; }
	}
	/**
	 * 获取验证码当前认证状态
	 */
	export class GetIdentifyingCodeStateLobbyCmd_CS {
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.GetIdentifyingCodeStateLobbyCmd_CS'; }
	}
	/**
	 * 获取验证码
	 */
	export class GetIdentifyingCodeLobbyCmd_C {
		/**
		 * 手机号
		 */
		phoneNumber: number;
		/**
		 * 1:绑定 2:解除绑定
		 */
		opType: number;
		GetType(): string { return 'Cmd.GetIdentifyingCodeLobbyCmd_C'; }
	}
	export class GetIdentifyingCodeLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.GetIdentifyingCodeLobbyCmd_S'; }
	}
	/**
	 * 绑定手机
	 */
	export class BindingMobilePhoneLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		/**
		 * 1:绑定 2:解除绑定
		 */
		opType: number;
		GetType(): string { return 'Cmd.BindingMobilePhoneLobbyCmd_C'; }
	}
	export class BindingMobilePhoneLobbyCmd_S {
		resultCode: number;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.BindingMobilePhoneLobbyCmd_S'; }
	}
	/**
	 * 获取红包信息
	 */
	export class GetRedPackInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetRedPackInfoLobbyCmd_C'; }
	}
	export class GetRedPackInfoLobbyCmd_S {
		/**
		 * 红包
		 */
		redpackSet: RedPack[];
		/**
		 * 剩余次数
		 */
		surplus: number;
		/**
		 * 1:手机号未绑定 2:未到开奖时间 3:活动已结束 4:次数已用完
		 */
		resultCode: number;
		/**
		 * 距离下一次领取的剩余时间
		 */
		surplustime: number;
		/**
		 * 活动时间
		 */
		activitytime: string;
		GetType(): string { return 'Cmd.GetRedPackInfoLobbyCmd_S'; }
	}
	/**
	 * 抢红包
	 */
	export class GrabRedPackLobbyCmd_C {
		/**
		 * 幸运词
		 */
		luckyword: string;
		GetType(): string { return 'Cmd.GrabRedPackLobbyCmd_C'; }
	}
	export class GrabRedPackLobbyCmd_S {
		/**
		 * 中奖红包
		 */
		redpack: RedPack;
		/**
		 * 剩余次数
		 */
		surplus: number;
		GetType(): string { return 'Cmd.GrabRedPackLobbyCmd_S'; }
	}
	/**
	 * 累计奖励
	 */
	export class GetMyRedPackRewardLobbyCmd_C {
		GetType(): string { return 'Cmd.GetMyRedPackRewardLobbyCmd_C'; }
	}
	export class GetMyRedPackRewardLobbyCmd_S {
		uid: number;
		/**
		 * 累计现金
		 */
		totalMoney: number;
		/**
		 * 累计金币
		 */
		totalChips: number;
		/**
		 * 奖励明细
		 */
		recordSet: RedPack[];
		/**
		 * 是否已兑换 1:已兑 0:未兑
		 */
		recv: number;
		GetType(): string { return 'Cmd.GetMyRedPackRewardLobbyCmd_S'; }
	}
	/**
	 * 兑换
	 */
	export class ExchangeRedPackLobbyCmd_C {
		/**
		 * 微信
		 */
		wechat: string;
		GetType(): string { return 'Cmd.ExchangeRedPackLobbyCmd_C'; }
	}
	export class ExchangeRedPackLobbyCmd_S {
		/**
		 * 1:活动未结束 2:没有现金红包 3:已兑换
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ExchangeRedPackLobbyCmd_S'; }
	}
	export class RedPack {
		/**
		 * 现金
		 */
		money: number;
		/**
		 * 金币
		 */
		chips: number;
		/**
		 * 日期
		 */
		date: string;
		GetType(): string { return 'Cmd.RedPack'; }
	}
	/**
	 * 获取金币场战绩(由于这个数据量的问题,不放在userBaseInfo里面，需要前端根据需求去自行请求)
	 */
	export class CoinGameRecord {
		gameId: number;
		/**
		 * 胜率
		 */
		winPercent: number;
		/**
		 * 总局数
		 */
		totalRound: number;
		/**
		 * 连胜局数
		 */
		winStreak: number;
		/**
		 * 单局最多赢取金币
		 */
		winChips: number;
		/**
		 * 单局最大输掉金币
		 */
		loseChips: number;
		/**
		 * 今日胜场数
		 */
		todayWin: number;
		/**
		 * 比赛前三名局数
		 */
		topThree: number;
		/**
		 * 淘汰人数
		 */
		eliminateNum: number;
		/**
		 * 累积奖金
		 */
		drawAll: number;
		/**
		 * 闯关局数
		 */
		rushRound: number;
		GetType(): string { return 'Cmd.CoinGameRecord'; }
	}
	export class GetCoinGameRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetCoinGameRecordLobbyCmd_C'; }
	}
	export class GetCoinGameRecordLobbyCmd_S {
		gameRecord: CoinGameRecord[];
		GetType(): string { return 'Cmd.GetCoinGameRecordLobbyCmd_S'; }
	}
	/**
	 * 获取礼品券
	 */
	export class GetGiftVoucherLobbyCmd_C {
		GetType(): string { return 'Cmd.GetGiftVoucherLobbyCmd_C'; }
	}
	export class GetGiftVoucherLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 礼品券
		 */
		giftVoucher: number;
		GetType(): string { return 'Cmd.GetGiftVoucherLobbyCmd_S'; }
	}
	/**
	 * 兑换礼品券记录个人信息
	 */
	export class ExchangeGiftVoucherRecordUserInfoLobby_C {
		/**
		 * 真实姓名
		 */
		realName: string;
		/**
		 * 手机号码
		 */
		phoneNumber: string;
		/**
		 * 商品ID //2017.11.15之后的礼品券兑换实物就可以只传商品id
		 */
		shopId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.ExchangeGiftVoucherRecordUserInfoLobby_C'; }
	}
	export class ExchangeGiftVoucherRecordUserInfoLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 商品ID //2017.11.15之后的礼品券兑换实物就可以只传商品id
		 */
		shopId: number;
		GetType(): string { return 'Cmd.ExchangeGiftVoucherRecordUserInfoLobby_S'; }
	}
	/**
	 * 获取兑换记录
	 */
	export class ExchangeRecord {
		/**
		 * 商品Id,对应上面协议ExchangeGiftVoucherRecordUserInfoLobby_C的shopId
		 */
		shopId: number;
		/**
		 * 礼品券数量
		 */
		coupon: number;
		/**
		 * 兑换时间
		 */
		timestamp: number;
		/**
		 * 兑换状态 0:未兑换 1:已兑换
		 */
		state: number;
		GetType(): string { return 'Cmd.ExchangeRecord'; }
	}
	export class GetExchangeRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetExchangeRecordLobbyCmd_C'; }
	}
	export class GetExchangeRecordLobbyCmd_S {
		/**
		 * 为空则表示没有兑换记录
		 */
		record: ExchangeRecord[];
		GetType(): string { return 'Cmd.GetExchangeRecordLobbyCmd_S'; }
	}
	/**
	 * 获取收货地址
	 */
	export class GetShippingAddressLobby_C {
		GetType(): string { return 'Cmd.GetShippingAddressLobby_C'; }
	}
	export class GetShippingAddressLobby_S {
		resultCode: number;
		/**
		 * 邮寄地址
		 */
		addr: Cmd.DeliverAddr;
		GetType(): string { return 'Cmd.GetShippingAddressLobby_S'; }
	}
	/**
	 * 填写或修改收货地址
	 */
	export class ChangeShippingAddressLobby_C {
		/**
		 * 邮寄地址
		 */
		addr: Cmd.DeliverAddr;
		GetType(): string { return 'Cmd.ChangeShippingAddressLobby_C'; }
	}
	export class ChangeShippingAddressLobby_S {
		resultCode: number;
		/**
		 * 邮寄地址
		 */
		addr: Cmd.DeliverAddr;
		GetType(): string { return 'Cmd.ChangeShippingAddressLobby_S'; }
	}
	/**
	 * 请求转盘信息
	 */
	export class GetInfoTurnTableCmd_C {
		GetType(): string { return 'Cmd.GetInfoTurnTableCmd_C'; }
	}
	/**
	 * 转盘信息回复
	 */
	export class GetInfoTurnTableCmd_S {
		/**
		 * 回复
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 累计登录天数
		 */
		days: number;
		/**
		 * 今天已经转了几次了
		 */
		times: number;
		/**
		 * 当前身上还有多少礼品券
		 */
		giftVoucher: number;
		/**
		 * 今天是否已经开过宝箱
		 */
		isOpen: boolean;
		GetType(): string { return 'Cmd.GetInfoTurnTableCmd_S'; }
	}
	/**
	 * 转动转盘
	 */
	export class TurnTurnTableCmd_C {
		GetType(): string { return 'Cmd.TurnTurnTableCmd_C'; }
	}
	/**
	 * 转动转盘回复
	 */
	export class TurnTurnTableCmd_S {
		/**
		 * 回复
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 今天已经转了几次了
		 */
		times: number;
		/**
		 * 转中的哪一个
		 */
		turnId: number;
		/**
		 * 奖励翻倍
		 */
		multiple: number;
		/**
		 * 当前身上还有多少礼品券
		 */
		giftVoucher: number;
		/**
		 * 玩家获得的奖励
		 */
		rewardNum: number;
		/**
		 * 今天是否打开过宝箱
		 */
		isOpen: boolean;
		GetType(): string { return 'Cmd.TurnTurnTableCmd_S'; }
	}
	/**
	 * 领取神秘宝箱奖励
	 */
	export class GetCumulativeRewordTurnTableCmd_C {
		GetType(): string { return 'Cmd.GetCumulativeRewordTurnTableCmd_C'; }
	}
	/**
	 * 领取神秘宝箱奖励回复
	 */
	export class GetCumulativeRewordTurnTableCmd_S {
		/**
		 * 回复
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 抽中的哪一个
		 */
		getId: number;
		/**
		 * 获得的奖励
		 */
		rewardNum: number;
		GetType(): string { return 'Cmd.GetCumulativeRewordTurnTableCmd_S'; }
	}
	/**
	 * 好彩大厅VIP系统
	 */
	export class GetUserVipInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetUserVipInfoLobbyCmd_C'; }
	}
	export class GetUserVipInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * vip等级
		 */
		vipLevel: number;
		/**
		 * vip点数
		 */
		vipPoint: number;
		/**
		 * vip未领取奖励
		 */
		vipReward: number[];
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GetUserVipInfoLobbyCmd_S'; }
	}
	/**
	 * 退出面板
	 */
	export class QuitGameInfo {
		/**
		 * 根据不同的type去取对应的数据
		 */
		type: QuitGameInfo.QuitType;
		/**
		 * 明日签到获取奖励
		 */
		signChips: number;
		/**
		 * 幸运翻翻翻剩余局数 和 costDiamond不同时存在
		 */
		turnRound: number;
		/**
		 * 幸运翻翻翻消耗钻石 和 round不同时存在
		 */
		turncostDiamond: number;
		/**
		 * 充值6/30 为空的话则表明6&amp;30任务都已经完成
		 */
		recharge: number;
		GetType(): string { return 'Cmd.QuitGameInfo'; }
	}
	export module QuitGameInfo {
		export enum QuitType {
			/**
			 * 幸运翻翻翻 turnRound/turncostDiamond
			 */
			TurnCard = 1,
			/**
			 * 每日签到 signChips
			 */
			DaySign = 2,
			/**
			 * 每日充值 recharge
			 */
			Recharge = 3
		}
	}
	export class QuitGameShowLobbyCmd_C {
		GetType(): string { return 'Cmd.QuitGameShowLobbyCmd_C'; }
	}
	export class QuitGameShowLobbyCmd_S {
		quitGameInfo: QuitGameInfo[];
		GetType(): string { return 'Cmd.QuitGameShowLobbyCmd_S'; }
	}
	/**
	 * 获取累计红包金额
	 */
	export class GetTotalRedPackMoneyLobbyCmd_C {
		GetType(): string { return 'Cmd.GetTotalRedPackMoneyLobbyCmd_C'; }
	}
	/**
	 * 当累计金额发生变化时，服务器会主动推送
	 */
	export class GetTotalRedPackMoneyLobbyCmd_S {
		totalMoney: number;
		GetType(): string { return 'Cmd.GetTotalRedPackMoneyLobbyCmd_S'; }
	}
	/**
	 * 新用户红包界面
	 */
	export class GetNewUserRedPackShowLobbyCmd_C {
		GetType(): string { return 'Cmd.GetNewUserRedPackShowLobbyCmd_C'; }
	}
	export class GetNewUserRedPackShowLobbyCmd_S {
		resultCode: number;
		/**
		 * 待领取红包集合[1,2,3,4,5,6,7]
		 */
		waitRecvSet: number[];
		/**
		 * 已领取红包集合[1,2,3,4,5,6,7]
		 */
		recvSet: number[];
		/**
		 * 已过期红包集合[1,2,3,4,5,6,7]
		 */
		timeOutSet: number[];
		/**
		 * 今天可领取天数
		 */
		bToday: number;
		GetType(): string { return 'Cmd.GetNewUserRedPackShowLobbyCmd_S'; }
	}
	/**
	 * 领取新手红包
	 */
	export class ExchangeNewUserRedPackLobbyCmd_C {
		recvDay: number;
		GetType(): string { return 'Cmd.ExchangeNewUserRedPackLobbyCmd_C'; }
	}
	export class ExchangeNewUserRedPackLobbyCmd_S {
		resultCode: number;
		/**
		 * 用于去更新界面数据
		 */
		recvDay: number;
		/**
		 * 现金
		 */
		cash: number;
		/**
		 * 话费券
		 */
		coupon: number;
		/**
		 * 对应道具（2018.05.14）
		 */
		goods: Cmd.Goods;
		GetType(): string { return 'Cmd.ExchangeNewUserRedPackLobbyCmd_S'; }
	}
	/**
	 * 话费券兑换红包界面
	 */
	export class CCRedPack {
		id: number;
		/**
		 * 满足条件
		 */
		condition: number;
		/**
		 * 状态 0:未完成 1:可兑换 2:已兑换
		 */
		status: number;
		/**
		 * 现金
		 */
		cash: number;
		GetType(): string { return 'Cmd.CCRedPack'; }
	}
	export class GetCCRedPackShowLobbyCmd_C {
		GetType(): string { return 'Cmd.GetCCRedPackShowLobbyCmd_C'; }
	}
	export class GetCCRedPackShowLobbyCmd_S {
		resultCode: number;
		redPack: CCRedPack[];
		GetType(): string { return 'Cmd.GetCCRedPackShowLobbyCmd_S'; }
	}
	/**
	 * 话费券兑换红包
	 */
	export class ExchangeCCRedPackLobbyCmd_C {
		/**
		 * 兑换的id
		 */
		id: number;
		GetType(): string { return 'Cmd.ExchangeCCRedPackLobbyCmd_C'; }
	}
	export class ExchangeCCRedPackLobbyCmd_S {
		resultCode: number;
		/**
		 * 刷新各个红包状态
		 */
		redPack: CCRedPack[];
		GetType(): string { return 'Cmd.ExchangeCCRedPackLobbyCmd_S'; }
	}
	/**
	 * 返利红包(领取话费券)
	 */
	export class RechargeRedPack {
		id: number;
		/**
		 * 状态 0:未完成 1:可领取 2:已领取
		 */
		status: number;
		/**
		 * 满足条件
		 */
		condition: number;
		/**
		 * 话费券
		 */
		coupon: number;
		/**
		 * 对应道具（2018.05.14）
		 */
		goods: Cmd.Goods;
		GetType(): string { return 'Cmd.RechargeRedPack'; }
	}
	/**
	 * 返利红包界面
	 */
	export class GetRechargeRedPackShowLobbyCmd_C {
		GetType(): string { return 'Cmd.GetRechargeRedPackShowLobbyCmd_C'; }
	}
	export class GetRechargeRedPackShowLobbyCmd_S {
		resultCode: number;
		redPack: RechargeRedPack[];
		GetType(): string { return 'Cmd.GetRechargeRedPackShowLobbyCmd_S'; }
	}
	/**
	 * 兑换返利红包
	 */
	export class ExchangeRechargeRedPackLobbyCmd_C {
		id: number;
		GetType(): string { return 'Cmd.ExchangeRechargeRedPackLobbyCmd_C'; }
	}
	export class ExchangeRechargeRedPackLobbyCmd_S {
		resultCode: number;
		/**
		 * 刷新界面
		 */
		redPack: RechargeRedPack[];
		GetType(): string { return 'Cmd.ExchangeRechargeRedPackLobbyCmd_S'; }
	}
	/**
	 * 暴击红包界面
	 */
	export class GetCriticalStrikeLobbyCmd_C {
		GetType(): string { return 'Cmd.GetCriticalStrikeLobbyCmd_C'; }
	}
	export class CCInfo {
		/**
		 * 获取时间
		 */
		time: number;
		/**
		 * 红包金额
		 */
		value: number;
		/**
		 * 游戏id 客户端根据id去显示游戏名称(服务器同服所以游戏名称无法确定)
		 */
		gameId: number;
		GetType(): string { return 'Cmd.CCInfo'; }
	}
	export class GetCriticalStrikeLobbyCmd_S {
		/**
		 * 客户端要进行判空操作，如果不回复这个值就认为没有数据
		 */
		info: CCInfo[];
		GetType(): string { return 'Cmd.GetCriticalStrikeLobbyCmd_S'; }
	}
	/**
	 * 红包提现
	 */
	export class RedPackInfo {
		/**
		 * 文字描述
		 */
		stringType: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 具体金额
		 */
		reward: number;
		money: number;
		/**
		 * 好彩红包获取方式  1新手红包 2话费券兑换
		 */
		typ: number;
		GetType(): string { return 'Cmd.RedPackInfo'; }
	}
	/**
	 * 玩家获得红包明细
	 */
	export class GetUserGetRedPackInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetUserGetRedPackInfoLobbyCmd_C'; }
	}
	export class GetUserGetRedPackInfoLobbyCmd_S {
		redPackInfo: RedPackInfo[];
		GetType(): string { return 'Cmd.GetUserGetRedPackInfoLobbyCmd_S'; }
	}
	/**
	 * 提现记录
	 */
	export class DrawCash {
		money: number;
		timestamp: number;
		/**
		 * 1:已兑换
		 */
		status: number;
		GetType(): string { return 'Cmd.DrawCash'; }
	}
	export class GetDrawCashRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetDrawCashRecordLobbyCmd_C'; }
	}
	export class GetDrawCashRecordLobbyCmd_S {
		resultCode: number;
		records: DrawCash[];
		GetType(): string { return 'Cmd.GetDrawCashRecordLobbyCmd_S'; }
	}
	/**
	 * 红包提现
	 */
	export class RedPackDrawCashLobbyCmd_C {
		GetType(): string { return 'Cmd.RedPackDrawCashLobbyCmd_C'; }
	}
	export class RedPackDrawCashLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.RedPackDrawCashLobbyCmd_S'; }
	}
	/**
	 *  好彩游戏抢红包活动
	 *  发红包广播
	 */
	export class GameRedPackInfo {
		/**
		 * 红包id
		 */
		rid: string;
		/**
		 * 发包人uid
		 */
		uid: number;
		/**
		 * 头像
		 */
		headUrl: string;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 红包数量
		 */
		totalCount: number;
		/**
		 * 已领取数量
		 */
		recvCount: number;
		/**
		 * 发送时间
		 */
		sendTime: number;
		GetType(): string { return 'Cmd.GameRedPackInfo'; }
	}
	export class SendHaoCaiGameRedPackLobbyCmd_Brd {
		redPackInfo: GameRedPackInfo;
		GetType(): string { return 'Cmd.SendHaoCaiGameRedPackLobbyCmd_Brd'; }
	}
	/**
	 * 领红包
	 */
	export class RecvGameRedPackLobbyCmd_C {
		rid: string;
		GetType(): string { return 'Cmd.RecvGameRedPackLobbyCmd_C'; }
	}
	export class RecvRedPackInfo {
		/**
		 * 红包金额
		 */
		value: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 头像
		 */
		headUrl: string;
		/**
		 * 是否手气最佳 1是
		 */
		luck: number;
		/**
		 * 领取时间
		 */
		recvTime: number;
		GetType(): string { return 'Cmd.RecvRedPackInfo'; }
	}
	export class RecvGameRedPackLobbyCmd_S {
		resultCode: number;
		redPackInfo: GameRedPackInfo;
		/**
		 * 个人领取
		 */
		personal: RecvRedPackInfo;
		/**
		 * 领取列表
		 */
		recvList: RecvRedPackInfo[];
		GetType(): string { return 'Cmd.RecvGameRedPackLobbyCmd_S'; }
	}
	/**
	 * 获取拥有的所有时效性道具
	 */
	export class GetTimeGoodsLobbyCmd_C {
		/**
		 * 0获取所有 1头像框 2月卡周卡...
		 */
		timeType: number;
		/**
		 * 获取指定uid拥有的时效性道具,不传默认为自己
		 */
		uid: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetTimeGoodsLobbyCmd_C'; }
	}
	export class GetTimeGoodsLobbyCmd_S {
		resultCode: number;
		timeType: number;
		/**
		 * 玩家拥有的时效性道具
		 */
		timeGoods: Cmd.TimeGoods[];
		/**
		 * type为0/2存在 玩家累计待领取的时效性金币数量(周卡/月卡...)
		 */
		timeChips: number;
		/**
		 * 获取指定uid拥有的时效性道具,不传默认为自己
		 */
		uid: number;
		headUrl: number;
		vip: number;
		GetType(): string { return 'Cmd.GetTimeGoodsLobbyCmd_S'; }
	}
	/**
	 * 领取累计待领取的时效性金币
	 */
	export class RevTimeChipsLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.RevTimeChipsLobbyCmd_C'; }
	}
	export class RevTimeChipsLobbyCmd_S {
		resultCode: number;
		/**
		 * chips为空则表示没有领取到金币
		 */
		chips: number;
		/**
		 * 如果道具数量跟有效时间发生变化则推送下面三条数据
		 */
		timeType: number;
		/**
		 * 玩家拥有的时效性道具
		 */
		timeGoods: Cmd.TimeGoods[];
		timeChips: number;
		GetType(): string { return 'Cmd.RevTimeChipsLobbyCmd_S'; }
	}
	/**
	 * 购买头像框，周卡/月卡等时效性道具(用钻石购买，不支持其他支付方式)
	 */
	export class BuyTimeGoodsLobbyCmd_C {
		timeType: number;
		/**
		 * 2018.03.15 弃用
		 */
		goodsId: number;
		goodsNbr: number;
		lobbyId: number;
		/**
		 * 2018.03.15 购买全部用shopId,上面的goodsId弃用(字段暂时不删除)
		 */
		shopId: number;
		GetType(): string { return 'Cmd.BuyTimeGoodsLobbyCmd_C'; }
	}
	export class BuyTimeGoodsLobbyCmd_S {
		resultCode: number;
		timeType: number;
		/**
		 * 玩家拥有的时效性道具
		 */
		timeGoods: Cmd.TimeGoods[];
		/**
		 * 玩家累计待领取的时效性金币数量(周卡/月卡...)
		 */
		timeChips: number;
		GetType(): string { return 'Cmd.BuyTimeGoodsLobbyCmd_S'; }
	}
	/**
	 * 个人形象道具的使用
	 */
	export class ChangePersonalImageLobbyCmd_C {
		personalImage: Cmd.PersonalImage;
		GetType(): string { return 'Cmd.ChangePersonalImageLobbyCmd_C'; }
	}
	export class ChangePersonalImageLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.ChangePersonalImageLobbyCmd_S'; }
	}
	/**
	 * 获取弹窗公告
	 */
	export class GetPopupBroadListLobbyCmd_C {
		GetType(): string { return 'Cmd.GetPopupBroadListLobbyCmd_C'; }
	}
	export class PopupList {
		id: number;
		/**
		 * 标题
		 */
		title: string;
		/**
		 * 内容
		 */
		content: string;
		/**
		 * 0未读 1已读
		 */
		status: number;
		endTime: number;
		/**
		 * 扩展参数
		 */
		extparam: string;
		GetType(): string { return 'Cmd.PopupList'; }
	}
	export module PopupList {
		export class Extparamdesc {
			/**
			 * （跑马灯 9，活动公告 11，普通公告 6，维护公告 3）
			 */
			btype: number;
			/**
			 * （立即发布生效 0，单次立即生效 1，每次登陆生效 2，首次登陆生效 3 ，每次加载生效 4）
			 */
			bactime: number;
			/**
			 * （所有游戏 0，保单类游戏 1，非保单类游戏 2，大厅 3，指定游戏 gameid）
			 */
			blocation: number;
			/**
			 * （可以关闭 0，不可关闭 1）
			 */
			bcanclose: number;
			/**
			 * （gm 0，玩家 1, 机器人 2）
			 */
			bpublisher: number;
			GetType(): string { return 'Cmd.PopupList.Extparamdesc'; }
		}
	}
	export class GetPopupBroadListLobbyCmd_S {
		popupList: PopupList[];
		GetType(): string { return 'Cmd.GetPopupBroadListLobbyCmd_S'; }
	}
	/**
	 * 已读弹窗公告(如果公告的状态status为0未读状态才去调用这条消息)
	 */
	export class ReadPopBroadLobbyCmd_C {
		id: number;
		GetType(): string { return 'Cmd.ReadPopBroadLobbyCmd_C'; }
	}
	export class ReadPopBroadLobbyCmd_S {
		resultCode: number;
		id: number;
		GetType(): string { return 'Cmd.ReadPopBroadLobbyCmd_S'; }
	}
	/**
	 *  好彩捕鱼电玩城vip话费券活动
	 *  显示界面
	 */
	export class GetVipCouponShowLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetVipCouponShowLobbyCmd_C'; }
	}
	export class GetVipCouponShowLobbyCmd_S {
		resultCode: number;
		/**
		 * 剩余领取次数 等于0则表示不能领取
		 */
		recvNum: number;
		GetType(): string { return 'Cmd.GetVipCouponShowLobbyCmd_S'; }
	}
	/**
	 * 获取话费券
	 */
	export class GetVipCouponRewardLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetVipCouponRewardLobbyCmd_C'; }
	}
	export class GetVipCouponRewardLobbyCmd_S {
		resultCode: number;
		/**
		 * 获取到的话费券数量
		 */
		coupon: number;
		/**
		 * 剩余领取次数 等于0则表示不能领取
		 */
		recvNum: number;
		GetType(): string { return 'Cmd.GetVipCouponRewardLobbyCmd_S'; }
	}
	/**
	 * 转盘签到
	 */
	export class ContinueTurnTableInfo {
		continueDay: number;
		/**
		 * 是否已领取 1已领取
		 */
		isRecv: number;
		/**
		 * 当前是否可领取 1可领取
		 */
		canRecv: number;
		GetType(): string { return 'Cmd.ContinueTurnTableInfo'; }
	}
	/**
	 * 是否显示转盘签到
	 */
	export class IsShowTurnTableSignLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.IsShowTurnTableSignLobbyCmd_C'; }
	}
	export class IsShowTurnTableSignLobbyCmd_S {
		/**
		 * 0不显示 1显示
		 */
		isShow: number;
		GetType(): string { return 'Cmd.IsShowTurnTableSignLobbyCmd_S'; }
	}
	/**
	 * 获取转盘签到的面板信息
	 */
	export class GetTurnTableSignLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetTurnTableSignLobbyCmd_C'; }
	}
	export class GetTurnTableSignLobbyCmd_S {
		resultCode: number;
		/**
		 * 今天是否可领取  1可领取
		 */
		todayRecv: number;
		/**
		 * 连续签到天数
		 */
		continueDay: number;
		/**
		 * 连续签到领取情况
		 */
		continue: ContinueTurnTableInfo[];
		GetType(): string { return 'Cmd.GetTurnTableSignLobbyCmd_S'; }
	}
	/**
	 * 用户今日转盘签到
	 */
	export class UserTurnTableSignTodayLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.UserTurnTableSignTodayLobbyCmd_C'; }
	}
	export class UserTurnTableSignTodayLobbyCmd_S {
		resultCode: number;
		/**
		 * 连续天数
		 */
		continueDay: number;
		/**
		 * 连续签到领取情况
		 */
		continue: ContinueTurnTableInfo[];
		/**
		 * 奖品id
		 */
		goodsId: number;
		/**
		 * 奖品数量
		 */
		goodsNum: number;
		GetType(): string { return 'Cmd.UserTurnTableSignTodayLobbyCmd_S'; }
	}
	/**
	 * 领取连续转盘签到奖励
	 */
	export class UserRecvContinueRewardLobbyCmd_C {
		lobbyId: number;
		/**
		 * 要领取对应的累计天数
		 */
		continueDay: number;
		GetType(): string { return 'Cmd.UserRecvContinueRewardLobbyCmd_C'; }
	}
	export class UserRecvContinueRewardLobbyCmd_S {
		resultCode: number;
		/**
		 * 连续签到领取情况
		 */
		continue: ContinueTurnTableInfo[];
		/**
		 * 奖品id
		 */
		goodsId: number;
		/**
		 * 奖品数量
		 */
		goodsNum: number;
		GetType(): string { return 'Cmd.UserRecvContinueRewardLobbyCmd_S'; }
	}
	/**
	 * 百宝箱奖励
	 */
	export class TreasureBoxLottery {
		/**
		 * 奖励类型 0普通道具(金币、钻石、话费券等) 1红包现金奖励
		 */
		lType: number;
		/**
		 * 普通道具使用 商品id
		 */
		goodsId: number;
		/**
		 * 普通道具使用 商品数量
		 */
		goodsNum: number;
		/**
		 * 红包现金使用 现金金额
		 */
		rmb: number;
		GetType(): string { return 'Cmd.TreasureBoxLottery'; }
	}
	/**
	 * 百宝箱每日任务
	 */
	export class TreasureBoxTask {
		/**
		 * 任务id
		 */
		taskId: number;
		/**
		 * 对应的子游戏id
		 */
		gameId: number;
		/**
		 * 任务描述
		 */
		taskDesc: string;
		/**
		 * 任务状态 0进行中 1待领取 2已领取
		 */
		taskStatus: number;
		/**
		 * 当前进度
		 */
		current: number;
		/**
		 * 总进度
		 */
		total: number;
		/**
		 * 任务奖励
		 */
		lottery: TreasureBoxLottery;
		GetType(): string { return 'Cmd.TreasureBoxTask'; }
	}
	/**
	 * 获取百宝箱界面数据
	 */
	export class GetTreasureBoxShowInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetTreasureBoxShowInfoLobbyCmd_C'; }
	}
	export class GetTreasureBoxShowInfoLobbyCmd_S {
		resultCode: number;
		task: TreasureBoxTask[];
		/**
		 * 完成任务的累计天数
		 */
		taskDays: number;
		/**
		 * 剩余抽奖次数
		 */
		lotteryNum: number;
		/**
		 * 滚动跑马灯
		 */
		msg: string[];
		GetType(): string { return 'Cmd.GetTreasureBoxShowInfoLobbyCmd_S'; }
	}
	/**
	 * 领取百宝箱任务奖励
	 */
	export class GetTreasureBoxTaskLotteryLobbyCmd_C {
		taskId: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetTreasureBoxTaskLotteryLobbyCmd_C'; }
	}
	export class GetTreasureBoxTaskLotteryLobbyCmd_S {
		resultCode: number;
		/**
		 * 这里只回复请求领取的对应taskId的任务用于刷新(物品奖励也在这个里面)，其他任务不回复
		 */
		task: TreasureBoxTask;
		/**
		 * 刷新下完成任务的累计天数
		 */
		taskDays: number;
		/**
		 * 刷新下剩余抽奖次数
		 */
		lotteryNum: number;
		GetType(): string { return 'Cmd.GetTreasureBoxTaskLotteryLobbyCmd_S'; }
	}
	/**
	 * 百宝箱转动抽奖
	 */
	export class TurnTreasureBoxLotteryLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.TurnTreasureBoxLotteryLobbyCmd_C'; }
	}
	export class TurnTreasureBoxLotteryLobbyCmd_S {
		resultCode: number;
		lottery: TreasureBoxLottery;
		/**
		 * 刷新下剩余抽奖次数
		 */
		lotteryNum: number;
		/**
		 * 滚动跑马灯
		 */
		msg: string;
		GetType(): string { return 'Cmd.TurnTreasureBoxLotteryLobbyCmd_S'; }
	}
	/**
	 *  在线奖励
	 *  获取在线奖励状态和倒计时时间
	 */
	export class GetOnlineTimeStatusLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetOnlineTimeStatusLobbyCmd_C'; }
	}
	export class GetOnlineTimeStatusLobbyCmd_S {
		resultCode: number;
		/**
		 * 0倒计时中 1待领取 2当天奖励已结束
		 */
		status: number;
		/**
		 * 倒计时剩余时间
		 */
		remainderTime: number;
		GetType(): string { return 'Cmd.GetOnlineTimeStatusLobbyCmd_S'; }
	}
	/**
	 * 领取在线奖励
	 */
	export class GetOnlineTimeRewardLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetOnlineTimeRewardLobbyCmd_C'; }
	}
	export class GetOnlineTimeRewardLobbyCmd_S {
		resultCode: number;
		reward: Cmd.Goods[];
		/**
		 * 0倒计时中 1待领取 2当天奖励已结束
		 */
		status: number;
		/**
		 * 倒计时剩余时间
		 */
		remainderTime: number;
		GetType(): string { return 'Cmd.GetOnlineTimeRewardLobbyCmd_S'; }
	}
	/**
	 * 获取当前大厅在线总人数（包括机器人）
	 */
	export class GetOnlineUserNumLobbyCmd_C {
		GetType(): string { return 'Cmd.GetOnlineUserNumLobbyCmd_C'; }
	}
	export class GameUsers {
		gameId: number;
		userNum: number;
		GetType(): string { return 'Cmd.GameUsers'; }
	}
	export class GetOnlineUserNumLobbyCmd_S {
		/**
		 * 总人数
		 */
		onlineNum: number;
		/**
		 * 各个游戏人数(客户端根据界面上的游戏去对应添加，如果没有传对应游戏的人数则客户端默认为0)
		 */
		gameUsers: GameUsers[];
		GetType(): string { return 'Cmd.GetOnlineUserNumLobbyCmd_S'; }
	}
	/**
	 *  明日礼包
	 *  界面显示
	 */
	export class GetTomorrowGiftBagShowLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetTomorrowGiftBagShowLobbyCmd_C'; }
	}
	export class GetTomorrowGiftBagShowLobbyCmd_S {
		resultCode: number;
		/**
		 * 状态 1今天可领取 2明天可领取
		 */
		status: number;
		/**
		 * 可领取金币的后三位
		 */
		tail: string;
		/**
		 * 倒计时剩余时间
		 */
		remainderTime: number;
		GetType(): string { return 'Cmd.GetTomorrowGiftBagShowLobbyCmd_S'; }
	}
	/**
	 * 礼包领取
	 */
	export class GetTomorrowGiftBagRewardLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetTomorrowGiftBagRewardLobbyCmd_C'; }
	}
	export class GetTomorrowGiftBagRewardLobbyCmd_S {
		resultCode: number;
		chips: number;
		/**
		 * 用于领取成功后刷新页面
		 */
		status: number;
		tail: string;
		/**
		 * 倒计时剩余时间
		 */
		remainderTime: number;
		GetType(): string { return 'Cmd.GetTomorrowGiftBagRewardLobbyCmd_S'; }
	}
	/**
	 * 世界聊天
	 */
	export class WorldChatBySuonaLobbyCmd_C {
		content: string;
		GetType(): string { return 'Cmd.WorldChatBySuonaLobbyCmd_C'; }
	}
	export class WorldChatBySuonaLobbyCmd_S {
		resultCode: number;
		/**
		 * 聊天框提示语
		 */
		markWords: string;
		GetType(): string { return 'Cmd.WorldChatBySuonaLobbyCmd_S'; }
	}
	export class WorldChat {
		/**
		 * 0系统公告 1玩家世界聊天 2只在百人场显示 3只在麻将等匹配场 4只在大厅显示(2/3/4表示XX玩家在哪赢了多少金币之类的荣耀信息或者单独的公告信息)
		 */
		chatTyp: number;
		/**
		 * 内容
		 */
		content: string;
		/**
		 * 用户基本信息(1的时候会存在里面用到的只有vip和nickname)
		 */
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 时间戳
		 */
		time: number;
		GetType(): string { return 'Cmd.WorldChat'; }
	}
	export class WorldChatBySuonaLobbyCmd_Brd {
		chat: WorldChat;
		GetType(): string { return 'Cmd.WorldChatBySuonaLobbyCmd_Brd'; }
	}
	/**
	 * 获取世界聊天记录
	 */
	export class GetWorldChatRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetWorldChatRecordLobbyCmd_C'; }
	}
	export class GetWorldChatRecordLobbyCmd_S {
		chat: WorldChat[];
		/**
		 * 聊天框提示语
		 */
		markWords: string;
		GetType(): string { return 'Cmd.GetWorldChatRecordLobbyCmd_S'; }
	}
	/**
	 * 代理商发送喇叭
	 */
	export class AgentSendSuonaLobbyCmd_C {
		/**
		 * 喇叭消息
		 */
		msg: string;
		GetType(): string { return 'Cmd.AgentSendSuonaLobbyCmd_C'; }
	}
	export class AgentSendSuonaLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.AgentSendSuonaLobbyCmd_S'; }
	}
	/**
	 * 邮件附件
	 */
	export class Attachment {
		/**
		 * 附件商品id
		 */
		itemid: number;
		/**
		 * 对应的商品数量
		 */
		itemnum: number;
		GetType(): string { return 'Cmd.Attachment'; }
	}
	export class MailInfo {
		/**
		 * 该邮件id 期望是 每一个邮件会有一个唯一id
		 */
		id: number;
		/**
		 * 标题
		 */
		subject: string;
		/**
		 * 内容
		 */
		content: string;
		/**
		 * 钻石数
		 */
		diamond: number;
		/**
		 * 状态
		 */
		state: MailInfo.State;
		/**
		 * 时间戳
		 */
		stamp: number;
		/**
		 * 附件商品
		 */
		attachment: Attachment[];
		/**
		 * 发送者
		 */
		sendName: string;
		/**
		 * 兑奖码
		 */
		cdkey: string;
		/**
		 * 邮寄地址,兑奖码用
		 */
		addr: Cmd.DeliverAddr;
		/**
		 * 金币数
		 */
		chips: number;
		/**
		 * 内容概要
		 */
		outline: string;
		/**
		 * 标题id
		 */
		subjectId: number;
		/**
		 * 内容id
		 */
		contentId: number;
		titleId: number;
		GetType(): string { return 'Cmd.MailInfo'; }
	}
	export module MailInfo {
		export enum State {
			/**
			 * 未读
			 */
			UnRead = 1,
			/**
			 * 已读,但还有未领取的东西
			 */
			ReadHasItem = 2,
			/**
			 * 已读,且没有需要领取的东西
			 */
			ReadOver = 3
		}
	}
	/**
	 * 存在新邮件广播
	 */
	export class NewMailCmd_Brd {
		mail: MailInfo;
		GetType(): string { return 'Cmd.NewMailCmd_Brd'; }
	}
	/**
	 *  C-&gt;S 获取邮件列表请求
	 *  S-&gt;C 邮件列表更新
	 */
	export class GetListMailCmd_CS {
		/**
		 * 具体邮件
		 */
		mailList: MailInfo[];
		/**
		 * uid查看某人邮件,飞车用
		 */
		uid: number;
		/**
		 * matchId,匹配号id,飞车用
		 */
		matchId: number;
		/**
		 * roomId,查看某人某房间邮件,飞车用
		 */
		roomId: number;
		/**
		 * 昵称
		 */
		nickName: string;
		GetType(): string { return 'Cmd.GetListMailCmd_CS'; }
	}
	/**
	 *  C-&gt;S 查看指定邮件请求
	 *  S-&gt;C 查看完成指定邮件通知
	 */
	export class ReadMailCmd_CS {
		/**
		 * 查看指定邮件
		 */
		ids: number[];
		/**
		 * uid查看某人邮件,飞车用
		 */
		uid: number;
		/**
		 * matchId,匹配号id,飞车用
		 */
		matchId: number;
		/**
		 * roomId,查看某人某房间邮件,飞车用
		 */
		roomId: number;
		/**
		 * 昵称
		 */
		nickName: string;
		GetType(): string { return 'Cmd.ReadMailCmd_CS'; }
	}
	/**
	 *  C-&gt;S 获取邮件的东西请求
	 *  S-&gt;C 已获取邮件东西通知
	 */
	export class GetItemMailCmd_CS {
		ids: number[];
		/**
		 * 获取后得到的钻石数
		 */
		diamond: number;
		GetType(): string { return 'Cmd.GetItemMailCmd_CS'; }
	}
	/**
	 *  C-&gt;S 删除指定邮件请求
	 *  S-&gt;C 删除指定邮件通知
	 */
	export class DeleteMailCmd_CS {
		/**
		 * 删除指定邮件
		 */
		ids: number[];
		GetType(): string { return 'Cmd.DeleteMailCmd_CS'; }
	}
	/**
	 * 获取邮件列表
	 */
	export class GetListMailCmd_C {
		/**
		 * 分页
		 */
		index: number;
		/**
		 * 请求类型，1：初始化请求，2：刷新请求.默认为1
		 */
		type: number;
		/**
		 * 邮件类型，0：系统 1：好友 不传值或者其他的默认为全部(2018.09.04小程序添加使用)
		 */
		mailtype: number;
		GetType(): string { return 'Cmd.GetListMailCmd_C'; }
	}
	/**
	 * 获取邮件列表
	 */
	export class GetListMailCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 具体邮件：为空则表示没有邮件了，前端也不需要继续分页滑动
		 */
		mailInfo: MailInfo[];
		/**
		 * 分页
		 */
		index: number;
		/**
		 * 原样返回
		 */
		type: number;
		/**
		 * 邮件类型，0：系统 1：好友 不传值或者其他的默认为全部(2018.09.04小程序添加使用)
		 */
		mailtype: number;
		GetType(): string { return 'Cmd.GetListMailCmd_S'; }
	}
	/**
	 * 查看指定邮件
	 */
	export class ReadMailCmd_C {
		/**
		 * 查看指定邮件
		 */
		id: number;
		GetType(): string { return 'Cmd.ReadMailCmd_C'; }
	}
	/**
	 * 查看指定邮件
	 */
	export class ReadMailCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 具体邮件,前端刷新
		 */
		mailInfo: MailInfo;
		GetType(): string { return 'Cmd.ReadMailCmd_S'; }
	}
	/**
	 * 删除指定邮件
	 */
	export class DeleteMailCmd_C {
		/**
		 * 删除指定邮件
		 */
		ids: number[];
		GetType(): string { return 'Cmd.DeleteMailCmd_C'; }
	}
	/**
	 * 删除指定邮件
	 */
	export class DeleteMailCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 将删除指定邮件的id返回
		 */
		ids: number[];
		GetType(): string { return 'Cmd.DeleteMailCmd_S'; }
	}
	/**
	 * 领取指定邮件内的奖励
	 */
	export class GetMailRewardCmd_C {
		/**
		 * 邮件id
		 */
		id: number;
		GetType(): string { return 'Cmd.GetMailRewardCmd_C'; }
	}
	export class GetMailRewardCmd_S {
		resultCode: number;
		/**
		 * 具体邮件,前端刷新
		 */
		mailInfo: MailInfo;
		GetType(): string { return 'Cmd.GetMailRewardCmd_S'; }
	}
	/**
	 * 邮件批量操作
	 */
	export class BulkOperationMailCmd_C {
		/**
		 * 1 全部处理  2 全部删除
		 */
		opType: number;
		/**
		 * 待处理的邮件id列表
		 */
		ids: number[];
		GetType(): string { return 'Cmd.BulkOperationMailCmd_C'; }
	}
	export class BulkOperationMailCmd_S {
		resultCode: number;
		opType: number;
		/**
		 * 附件商品
		 */
		attachment: Attachment[];
		GetType(): string { return 'Cmd.BulkOperationMailCmd_S'; }
	}
	/**
	 * 用户反馈功能
	 */
	export class UserFeedBackLobbyCmd_C {
		/**
		 * 反馈内容
		 */
		feedback: string;
		/**
		 * 图片url集合
		 */
		feedbackUrl: string[];
		/**
		 * 联系方式
		 */
		contactInfo: string;
		lobbyId: number;
		GetType(): string { return 'Cmd.UserFeedBackLobbyCmd_C'; }
	}
	export class FeedBackDealResult {
		/**
		 * 反馈内容
		 */
		feedback: string;
		/**
		 * 回答内容
		 */
		reply: string;
		/**
		 * 创建时间
		 */
		cTime: number;
		/**
		 * 处理状态
		 */
		dealState: number;
		/**
		 * 反馈id
		 */
		feedBackId: number;
		/**
		 * 反馈url
		 */
		feedbackUrl: string[];
		GetType(): string { return 'Cmd.FeedBackDealResult'; }
	}
	export class UserFeedBackLobbyCmd_S {
		resultCode: number;
		dealResult: FeedBackDealResult[];
		GetType(): string { return 'Cmd.UserFeedBackLobbyCmd_S'; }
	}
	/**
	 * 修改鱼币
	 */
	export class UserFishcoinsChangeLobbyCmd_C {
		uid: number;
		/**
		 * 变化量
		 */
		change: number;
		GetType(): string { return 'Cmd.UserFishcoinsChangeLobbyCmd_C'; }
	}
	/**
	 * ClientErrorLogToServer
	 */
	export class ClientErrorLogToServerLobbyCmd_C {
		/**
		 * uid
		 */
		gameid: number;
		/**
		 * uid
		 */
		zoneid: number;
		/**
		 * 图片url集合
		 */
		log: string;
		GetType(): string { return 'Cmd.ClientErrorLogToServerLobbyCmd_C'; }
	}
	/**
	 * 申请提现
	 */
	export class CashWithdrawalLobbyCmd_C {
		/**
		 * 取现数额
		 */
		num: number;
		GetType(): string { return 'Cmd.CashWithdrawalLobbyCmd_C'; }
	}
	/**
	 * 提现回复
	 */
	export class CashWithdrawalLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.CashWithdrawalLobbyCmd_S'; }
	}
	/**
	 * 查看提现记录
	 */
	export class GetCashWithdrawalRecordLobbyCmd_C {
		GetType(): string { return 'Cmd.GetCashWithdrawalRecordLobbyCmd_C'; }
	}
	export class CashWithdrawalRecord {
		time: number;
		num: number;
		/**
		 * 提现结果 0/1/2 处理中、成功、失败
		 */
		status: number;
		GetType(): string { return 'Cmd.CashWithdrawalRecord'; }
	}
	/**
	 * 提现记录回复
	 */
	export class GetCashWithdrawalRecordLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 记录
		 */
		records: CashWithdrawalRecord[];
		GetType(): string { return 'Cmd.GetCashWithdrawalRecordLobbyCmd_S'; }
	}
	/**
	 * 顺序弹窗
	 */
	export class SequentialPopupsLobbyCmd_S {
		/**
		 * 1红包乐翻天 2签到面板 3首充 4新手红包 5多弹窗公告
		 */
		popId: number[];
		GetType(): string { return 'Cmd.SequentialPopupsLobbyCmd_S'; }
	}
	/**
	 * 运营活动 摇一摇
	 * 摇一摇结果数据
	 */
	export class ShakeShopInfo {
		/**
		 * 摇一摇对应的结果id
		 */
		shakeId: number;
		/**
		 * 倒计时时间
		 */
		remainderTime: number;
		/**
		 * 获得的金币总额
		 */
		totalChips: number;
		GetType(): string { return 'Cmd.ShakeShopInfo'; }
	}
	/**
	 * 打开摇一摇界面
	 */
	export class GetShakeBaseInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetShakeBaseInfoLobbyCmd_C'; }
	}
	export class GetShakeBaseInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 1:可以免费摇 2:需要消耗金币摇 3:摇过后选择购买界面 4:不可以摇一摇
		 */
		type: number;
		/**
		 * 剩余免费次数
		 */
		freeCount: number;
		/**
		 * 免费次数用完后需要消耗的金币数量
		 */
		costChips: number;
		shake: ShakeShopInfo;
		GetType(): string { return 'Cmd.GetShakeBaseInfoLobbyCmd_S'; }
	}
	/**
	 * 放弃摇一摇机会(再来一次)
	 */
	export class AbandonShakeLobbyCmd_C {
		GetType(): string { return 'Cmd.AbandonShakeLobbyCmd_C'; }
	}
	export class AbandonShakeLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.AbandonShakeLobbyCmd_S'; }
	}
	/**
	 * 获取摇一摇结果
	 */
	export class GetShakeResultLobbyCmd_C {
		GetType(): string { return 'Cmd.GetShakeResultLobbyCmd_C'; }
	}
	export class GetShakeResultLobbyCmd_S {
		resultCode: number;
		shake: ShakeShopInfo;
		GetType(): string { return 'Cmd.GetShakeResultLobbyCmd_S'; }
	}
	/**
	 * 运营活动 瑞狗迎春
	 * 打开瑞狗迎春界面
	 */
	export class GetAuspiciousDogInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetAuspiciousDogInfoLobbyCmd_C'; }
	}
	export class GetAuspiciousDogInfoLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 开始时间
		 */
		beginTime: number;
		/**
		 * 结束时间
		 */
		endTime: number;
		/**
		 * 待提现金额
		 */
		getNum: number;
		/**
		 * 当前游戏局数
		 */
		curGameNbr: number;
		/**
		 * 已抽奖次数
		 */
		lotteryTime: number;
		/**
		 * 1表示已经领取过了(前三个任务的状态)
		 */
		taskState: number[];
		/**
		 * 幸运玩家记录
		 */
		luckRecords: AuspiciousDogRecord[];
		/**
		 * 当前场景id
		 */
		scene: number;
		GetType(): string { return 'Cmd.GetAuspiciousDogInfoLobbyCmd_S'; }
	}
	export class AuspiciousDogRecord {
		/**
		 * 时间
		 */
		time: number;
		/**
		 * 昵称
		 */
		nickName: number;
		/**
		 * 物品ID(如果为0表示为元吧)
		 */
		goodId: number;
		/**
		 * 物品数量
		 */
		goodNbr: number;
		/**
		 * 模板id
		 */
		template: number;
		GetType(): string { return 'Cmd.AuspiciousDogRecord'; }
	}
	/**
	 * 获取瑞狗迎春奖励记录(只保留最新20条数据)
	 */
	export class GetAuspiciousDogRecordsLobbyCmd_C {
		GetType(): string { return 'Cmd.GetAuspiciousDogRecordsLobbyCmd_C'; }
	}
	export class GetAuspiciousDogRecordsLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 活动获奖记录
		 */
		records: AuspiciousDogRecord[];
		/**
		 * 提现记录
		 */
		withdrawalRecords: openRecord[];
		GetType(): string { return 'Cmd.GetAuspiciousDogRecordsLobbyCmd_S'; }
	}
	/**
	 * 领取奖励
	 */
	export class GetAuspiciousDogRewardsLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 任务id
		 */
		taskId: number;
		GetType(): string { return 'Cmd.GetAuspiciousDogRewardsLobbyCmd_C'; }
	}
	export class GetAuspiciousDogRewardsLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 任务id
		 */
		taskId: number;
		/**
		 * 奖励数据
		 */
		rewards: AuspiciousDogRecord[];
		GetType(): string { return 'Cmd.GetAuspiciousDogRewardsLobbyCmd_S'; }
	}
	/**
	 * 三张大厅游客绑定账户, 获取验证码
	 */
	export class GetGuestBindAccountIdentifyCodeLobbyCmd_C {
		/**
		 * 手机号码
		 */
		phoneNumber: number;
		/**
		 * 修改手机号
		 */
		modifyPhone: boolean;
		/**
		 * 重置密码
		 */
		resetPasswd: boolean;
		GetType(): string { return 'Cmd.GetGuestBindAccountIdentifyCodeLobbyCmd_C'; }
	}
	export class GetGuestBindAccountIdentifyCodeLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GetGuestBindAccountIdentifyCodeLobbyCmd_S'; }
	}
	/**
	 * 三张大厅游客绑定账户
	 */
	export class GuestBindAccountLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		GetType(): string { return 'Cmd.GuestBindAccountLobbyCmd_C'; }
	}
	/**
	 * 绑定手机操作返回
	 */
	export class GuestBindAccountLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 操作类型
		 */
		opType: number;
		/**
		 * 电话号
		 */
		mobile: number;
		GetType(): string { return 'Cmd.GuestBindAccountLobbyCmd_S'; }
	}
	/**
	 * 三张大厅校验手机验证码
	 */
	export class VerifyPhoneCodeLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.VerifyPhoneCodeLobbyCmd_C'; }
	}
	export class VerifyPhoneCodeLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.VerifyPhoneCodeLobbyCmd_S'; }
	}
	/**
	 * 三张大厅游客修改账户手机号
	 */
	export class GuestModifyAccountPhoneLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.GuestModifyAccountPhoneLobbyCmd_C'; }
	}
	export class GuestModifyAccountPhoneLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GuestModifyAccountPhoneLobbyCmd_S'; }
	}
	/**
	 * 三张大厅游客重置账户密码
	 */
	export class GuestResetAccountPasswdLobbyCmd_C {
		/**
		 * 验证码
		 */
		code: number;
		/**
		 * 密码
		 */
		password: string;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		GetType(): string { return 'Cmd.GuestResetAccountPasswdLobbyCmd_C'; }
	}
	export class GuestResetAccountPasswdLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GuestResetAccountPasswdLobbyCmd_S'; }
	}
	/**
	 * 玩家修改昵称, 成就任务
	 */
	export class ChangeUserNickName_C {
		/**
		 * 玩家昵称
		 */
		nickName: string;
		GetType(): string { return 'Cmd.ChangeUserNickName_C'; }
	}
	/**
	 * 修改昵称返回
	 */
	export class ChangeUserNickName_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 错误描述
		 */
		desc: string;
		/**
		 * 用户信息
		 */
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.ChangeUserNickName_S'; }
	}
	/**
	 * 玩家上传图像，成就任务
	 */
	export class ChangeUserHeadUrl_C {
		/**
		 * 玩家图像
		 */
		headUrl: string;
		GetType(): string { return 'Cmd.ChangeUserHeadUrl_C'; }
	}
	/**
	 * 上传图像返回
	 */
	export class ChangeUserHeadUrl_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 错误描述
		 */
		desc: string;
		/**
		 * 用户信息
		 */
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.ChangeUserHeadUrl_S'; }
	}
	/**
	 * 修改签名
	 */
	export class ChangeUserSignature_C {
		/**
		 * 签名
		 */
		signature: string;
		GetType(): string { return 'Cmd.ChangeUserSignature_C'; }
	}
	export class ChangeUserSignature_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 用户信息
		 */
		userInfo: Cmd.UserBaseInfo;
		GetType(): string { return 'Cmd.ChangeUserSignature_S'; }
	}
	/**
	 * 赠送金币时查找玩家昵称
	 */
	export class GetUserNickNameLobby_C {
		/**
		 * 玩家ID
		 */
		uid: number;
		GetType(): string { return 'Cmd.GetUserNickNameLobby_C'; }
	}
	/**
	 * 查找昵称回复
	 */
	export class GetUserNickNameLobby_S {
		/**
		 * 昵称
		 */
		nickName: string;
		resultCode: number;
		desc: string;
		/**
		 * 是否在白名单中
		 */
		isInWhiteList: boolean;
		GetType(): string { return 'Cmd.GetUserNickNameLobby_S'; }
	}
	/**
	 * 赠送金币
	 */
	export class ExchangeCoinLobby_C {
		/**
		 * 赠送给其他玩家ID
		 */
		toUid: number;
		/**
		 * 赠送金币数量
		 */
		coin: number;
		/**
		 * 货币类型 1/2 钻石、金币 如果为nil 默认为2金币 兼容老代码
		 */
		coinType: number;
		/**
		 * 1:请求检查 2: 请求确认
		 */
		type: number;
		id: number;
		GetType(): string { return 'Cmd.ExchangeCoinLobby_C'; }
	}
	/**
	 * 赠送金币回复
	 */
	export class ExchangeCoinLobby_S {
		/**
		 * 错误码
		 */
		resultCode: number;
		/**
		 * 描述 ==
		 */
		desc: string;
		/**
		 * 检测时 返回玩家信息
		 */
		userInfo: Cmd.UserBaseInfo;
		/**
		 * 赠送金币数量
		 */
		coin: number;
		/**
		 * 货币类型
		 */
		coinType: number;
		/**
		 * 1:请求检查 2: 请求确认
		 */
		type: number;
		GetType(): string { return 'Cmd.ExchangeCoinLobby_S'; }
	}
	/**
	 * 获取赠送金币记录
	 */
	export class GetExchangeCoinRecordLobby_C {
		/**
		 * 货币类型 1/2 钻石、金币 如果为nil 默认为2金币 兼容老代码
		 */
		coinType: number;
		/**
		 * 请求页数
		 */
		curPage: number;
		GetType(): string { return 'Cmd.GetExchangeCoinRecordLobby_C'; }
	}
	/**
	 * 赠送记录
	 */
	export class ExchangeCoinRecord {
		/**
		 * ID
		 */
		uid: number;
		/**
		 * 赠送金币数量
		 */
		coin: number;
		/**
		 * 赠送时间戳
		 */
		timestamp: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 1:给被人赠送 2:别人给自己赠送 ==
		 */
		type: number;
		GetType(): string { return 'Cmd.ExchangeCoinRecord'; }
	}
	/**
	 * 获取赠送金币记录返回
	 */
	export class GetExchangeCoinRecordLobby_S {
		/**
		 * 赠送记录
		 */
		record: ExchangeCoinRecord[];
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述 ==
		 */
		desc: number;
		/**
		 * 请求页数
		 */
		curPage: number;
		GetType(): string { return 'Cmd.GetExchangeCoinRecordLobby_S'; }
	}
	/**
	 * 获取摇钱树
	 */
	export class GetMoneyTreeDataLobby_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetMoneyTreeDataLobby_C'; }
	}
	/**
	 * 获取摇钱树返回
	 */
	export class GetMoneyTreeDataLobby_S {
		resultCode: number;
		/**
		 * 摇钱树的等级
		 */
		level: number;
		/**
		 * 生成金币数量
		 */
		produce: number;
		/**
		 * 是否可领取
		 */
		receive: number;
		GetType(): string { return 'Cmd.GetMoneyTreeDataLobby_S'; }
	}
	/**
	 * 领取摇钱树生成的金币
	 */
	export class GetMoneyTreeGoldLobby_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetMoneyTreeGoldLobby_C'; }
	}
	/**
	 * 领取摇钱树金币返回
	 */
	export class GetMoneyTreeGoldLobby_S {
		/**
		 * 返回
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GetMoneyTreeGoldLobby_S'; }
	}
	/**
	 * 获取公告
	 */
	export class GetBroadcastInfoLobby_C {
		GetType(): string { return 'Cmd.GetBroadcastInfoLobby_C'; }
	}
	export class BroadCastInfo {
		/**
		 * 公告ID
		 */
		taskId: number;
		/**
		 * 公告标题
		 */
		title: string;
		/**
		 * 公告内容
		 */
		content: string;
		/**
		 * 公告简介
		 */
		desc: string;
		/**
		 * 公告状态
		 */
		state: BroadCastInfo.State;
		GetType(): string { return 'Cmd.BroadCastInfo'; }
	}
	export module BroadCastInfo {
		export enum State {
			/**
			 * 已读
			 */
			Read = 1,
			/**
			 * 未读
			 */
			UnRead = 2
		}
	}
	/**
	 * 获取公告返回
	 */
	export class GetBroadCastInfoLobby_S {
		/**
		 * 公告信息
		 */
		broad: BroadCastInfo[];
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetBroadCastInfoLobby_S'; }
	}
	/**
	 * 读取公告
	 */
	export class ReadBroadCastLobby_C {
		/**
		 * 公告ID
		 */
		taskId: number;
		GetType(): string { return 'Cmd.ReadBroadCastLobby_C'; }
	}
	/**
	 * 读取公告返回
	 */
	export class ReadBroadCastLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 公告内容
		 */
		content: string;
		/**
		 * 公告标题
		 */
		title: string;
		GetType(): string { return 'Cmd.ReadBroadCastLobby_S'; }
	}
	/**
	 * 大厅获取时时彩状态
	 */
	export class GetEveryColorStatusLobby_C {
		GetType(): string { return 'Cmd.GetEveryColorStatusLobby_C'; }
	}
	/**
	 * 大厅获取时时彩状态返回
	 */
	export class GetEveryColorStatusLobby_S {
		/**
		 * 状态 1:下注 2:结算
		 */
		status: number;
		/**
		 * 剩余时间
		 */
		time: number;
		GetType(): string { return 'Cmd.GetEveryColorStatusLobby_S'; }
	}
	/**
	 * 玩家下注
	 */
	export class UserBetChipsLobby_C {
		/**
		 * 下注id(1,2~8，从单到双...到豹子,1为单数，2位双数...)
		 */
		betId: number;
		/**
		 * 下注量
		 */
		chips: number;
		GetType(): string { return 'Cmd.UserBetChipsLobby_C'; }
	}
	/**
	 * 玩家下注返回
	 */
	export class UserBetChipsLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 所有下注信息
		 */
		allBetInfo: number[];
		/**
		 * 自己下注信息
		 */
		ownBetInfo: number[];
		GetType(): string { return 'Cmd.UserBetChipsLobby_S'; }
	}
	/**
	 * 玩家自动跟注
	 */
	export class UserAutoFollowLobby_C {
		/**
		 * 是否跟注
		 */
		follow: boolean;
		/**
		 * 跟注次数
		 */
		number: number;
		GetType(): string { return 'Cmd.UserAutoFollowLobby_C'; }
	}
	/**
	 * 玩家自动跟注返回
	 */
	export class UserAutoFollowLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 返回跟注次数
		 */
		number: number;
		GetType(): string { return 'Cmd.UserAutoFollowLobby_S'; }
	}
	/**
	 * 玩家是否可以自动跟注
	 */
	export class UserCanAutoFollowLobby_S {
		/**
		 * 是否跟注
		 */
		follow: boolean;
		GetType(): string { return 'Cmd.UserCanAutoFollowLobby_S'; }
	}
	/**
	 * 通知玩家赢金币
	 */
	export class NoticeUserWinChipsLobby_S {
		/**
		 * 玩家赢金币
		 */
		winChips: number;
		GetType(): string { return 'Cmd.NoticeUserWinChipsLobby_S'; }
	}
	/**
	 * 大厅获取时时彩信息
	 */
	export class GetEveryColorInfoLobby_C {
		GetType(): string { return 'Cmd.GetEveryColorInfoLobby_C'; }
	}
	/**
	 * 简易玩家信息
	 */
	export class ShortUserInfo {
		/**
		 * 玩家Id
		 */
		uid: number;
		/**
		 * 玩家昵称
		 */
		nickName: string;
		/**
		 * 玩家图像
		 */
		headUrl: string;
		/**
		 * 玩家vip等级
		 */
		vip: number;
		/**
		 * 玩家赢取金币
		 */
		winChips: number;
		GetType(): string { return 'Cmd.ShortUserInfo'; }
	}
	/**
	 * 大厅获取时时彩信息返回
	 */
	export class GetEveryColorInfoLobby_S {
		/**
		 * 奖池总额
		 */
		pond: number;
		/**
		 * 剩余时间
		 */
		remainderTime: number;
		/**
		 * 当前状态
		 */
		status: number;
		/**
		 * 上轮豹子时间
		 */
		leopardTime: number;
		/**
		 * 所有人下注信息
		 */
		allBetInfo: number[];
		/**
		 * 玩家自己下注信息
		 */
		ownBetInfo: number[];
		/**
		 * 牌型走势图
		 */
		cardTypeTrend: number[];
		/**
		 * 单双走势图
		 */
		singleDoubleTrend: number[];
		/**
		 * 结算开牌
		 */
		openOutCard: number[];
		/**
		 * 牌型
		 */
		openCardType: number;
		/**
		 * 单双
		 */
		singleDoubleType: number;
		/**
		 * 自动跟注
		 */
		autoFollow: boolean;
		/**
		 * 剩余跟注次数
		 */
		remainder: number;
		/**
		 * 上轮大赢家
		 */
		winner: ShortUserInfo;
		GetType(): string { return 'Cmd.GetEveryColorInfoLobby_S'; }
	}
	/**
	 * 大奖记录
	 */
	export class GetBigRewardRecordLobby_C {
		GetType(): string { return 'Cmd.GetBigRewardRecordLobby_C'; }
	}
	/**
	 * 记录信息
	 */
	export class RecordInfo {
		/**
		 * 记录时间
		 */
		timestamp: number;
		/**
		 * 玩家信息
		 */
		userInfo: ShortUserInfo;
		GetType(): string { return 'Cmd.RecordInfo'; }
	}
	/**
	 * 大奖记录返回
	 */
	export class GetBigRewardRecordLobby_S {
		/**
		 * 大奖记录
		 */
		record: RecordInfo[];
		GetType(): string { return 'Cmd.GetBigRewardRecordLobby_S'; }
	}
	/**
	 * 排行榜
	 */
	export class GetEveryColorRankInfoLobby_C {
		GetType(): string { return 'Cmd.GetEveryColorRankInfoLobby_C'; }
	}
	/**
	 * 玩家排行信息
	 */
	export class SscRankInfo {
		/**
		 * 排行
		 */
		rank: number;
		/**
		 * 玩家信息
		 */
		userInfo: ShortUserInfo;
		GetType(): string { return 'Cmd.SscRankInfo'; }
	}
	/**
	 * 玩家排行信息返回
	 */
	export class GetEveryColorRankInfoLobby_S {
		/**
		 * 所有排行
		 */
		allRankInfo: SscRankInfo[];
		/**
		 * 我的排行
		 */
		myRankInfo: SscRankInfo[];
		/**
		 * 昨日所有排行
		 */
		yesterdayRankInfo: SscRankInfo[];
		/**
		 * 昨日我的排行
		 */
		yesterdayMyRankInfo: SscRankInfo[];
		GetType(): string { return 'Cmd.GetEveryColorRankInfoLobby_S'; }
	}
	/**
	 * 时时彩下注量广播
	 */
	export class EveryColorBetChipsLobby_Brd {
		/**
		 * 所有下注信息
		 */
		allBetInfo: number[];
		GetType(): string { return 'Cmd.EveryColorBetChipsLobby_Brd'; }
	}
	/**
	 * 时时彩下注状态广播
	 */
	export class EveryColorBetStatusLobby_Brd {
		/**
		 * 状态 1 下注 2 结算
		 */
		status: number;
		/**
		 * 每个状态所需时间
		 */
		time: number;
		GetType(): string { return 'Cmd.EveryColorBetStatusLobby_Brd'; }
	}
	/**
	 * 时时彩结算状态广播
	 */
	export class EveryColorLotteryStatusLobby_Brd {
		/**
		 * 状态 1 下注 2 结算
		 */
		status: number;
		/**
		 * 每个状态所需时间
		 */
		time: number;
		/**
		 * 牌型
		 */
		openCardType: number;
		/**
		 * 单双
		 */
		singleDoubleType: number;
		/**
		 * 结算时发牌
		 */
		openOutCard: number[];
		/**
		 * 奖池金额
		 */
		pond: number;
		/**
		 * 上轮豹子时间
		 */
		leopardTime: number;
		/**
		 * 上轮大赢家
		 */
		winner: ShortUserInfo;
		GetType(): string { return 'Cmd.EveryColorLotteryStatusLobby_Brd'; }
	}
	/**
	 * 时时彩玩家打开面板或者关闭面板
	 */
	export class EveryColorPanelStatusLobby_C {
		/**
		 * 状态 1 打开 2 关闭
		 */
		status: number;
		GetType(): string { return 'Cmd.EveryColorPanelStatusLobby_C'; }
	}
	export class EveryColorPanelStatusLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.EveryColorPanelStatusLobby_S'; }
	}
	/**
	 * 登陆天数信息
	 */
	export class ContinueDay {
		/**
		 * 登陆天数
		 */
		day: number;
		/**
		 * 状态 1 未领取 2 已领取 3 已失效
		 */
		status: number;
		/**
		 * 奖励金币
		 */
		coin: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.ContinueDay'; }
	}
	/**
	 * 玩家连续登陆信息
	 */
	export class ContinueLoginDaysInfoLobby_S {
		/**
		 * 登陆天数信息
		 */
		continue: ContinueDay[];
		GetType(): string { return 'Cmd.ContinueLoginDaysInfoLobby_S'; }
	}
	/**
	 * 领取连续登陆天数奖励
	 */
	export class GetContinueLoginDaysRewardLobby_C {
		GetType(): string { return 'Cmd.GetContinueLoginDaysRewardLobby_C'; }
	}
	/**
	 * 领取连续登陆奖励返回
	 */
	export class GetContinueLoginDaysRewardLobby_S {
		/**
		 * 奖励
		 */
		reward: ContinueDay;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetContinueLoginDaysRewardLobby_S'; }
	}
	/**
	 * 取消领取登陆奖励
	 */
	export class CancelGetContinueDayRewardLobby_C {
		GetType(): string { return 'Cmd.CancelGetContinueDayRewardLobby_C'; }
	}
	/**
	 * 取消返回
	 */
	export class CancelGetContinueDayRewardLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.CancelGetContinueDayRewardLobby_S'; }
	}
	/**
	 * 获取标准场和百人场人数
	 */
	export class GetGameCurrentPlayerNumberLobby_C {
		GetType(): string { return 'Cmd.GetGameCurrentPlayerNumberLobby_C'; }
	}
	/**
	 * 获取人数返回
	 */
	export class GetGameCurrentPlayerNumberLobby_S {
		/**
		 * 标准场
		 */
		stand: number;
		/**
		 * 百人场
		 */
		hundred: number;
		/**
		 * 森林舞会
		 */
		slwh: number;
		/**
		 * 各场次人数
		 */
		scene: number[];
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetGameCurrentPlayerNumberLobby_S'; }
	}
	/**
	 * 大厅所有游戏在线人数
	 */
	export class AllGamePlayerOnlineNumberLobby_CS {
		onlineNumDataList: AllGamePlayerOnlineNumberLobby_CS.OnlineNumData[];
		GetType(): string { return 'Cmd.AllGamePlayerOnlineNumberLobby_CS'; }
	}
	export module AllGamePlayerOnlineNumberLobby_CS {
		export class OnlineNumData {
			/**
			 * 游戏Id
			 */
			gameId: number;
			/**
			 * 在线人数
			 */
			onlineNum: number;
			GetType(): string { return 'Cmd.AllGamePlayerOnlineNumberLobby_CS.OnlineNumData'; }
		}
	}
	/**
	 * 三张大厅的非顺序弹窗
	 */
	export class PushPopUpWindowsLobby_S {
		/**
		 * 弹窗类型 1 账户创建 2 未读公告
		 */
		type: number;
		/**
		 * 账户创建金币数量
		 */
		chips: number;
		/**
		 * 未读公告则附带上公告Id
		 */
		broadId: number;
		GetType(): string { return 'Cmd.PushPopUpWindowsLobby_S'; }
	}
	/**
	 * 获取大厅急速夺宝信息
	 */
	export class GetSnatchTreasureInfoLobby_C {
		GetType(): string { return 'Cmd.GetSnatchTreasureInfoLobby_C'; }
	}
	/**
	 * 玩家下注信息
	 */
	export class OwnBetInfo {
		/**
		 * 玩家下注量
		 */
		betChips: number;
		/**
		 * 奖池编号 1,2
		 */
		number: number;
		/**
		 * 玩家下注概率
		 */
		probability: string;
		GetType(): string { return 'Cmd.OwnBetInfo'; }
	}
	/**
	 * 玩家中奖信息
	 */
	export class WinnerInfo {
		/**
		 * 玩家vip
		 */
		vip: number;
		/**
		 * 玩家昵称
		 */
		nickname: string;
		/**
		 * 玩家头像
		 */
		headurl: string;
		/**
		 * 中奖概率
		 */
		probability: string;
		/**
		 * 中奖金币
		 */
		rewardNum: number;
		GetType(): string { return 'Cmd.WinnerInfo'; }
	}
	/**
	 * 获取大厅急速夺宝信息返回
	 */
	export class GetSnatchTreasureInfoLobby_S {
		/**
		 * 1号奖池总额
		 */
		pondOne: number;
		/**
		 * 2号奖池总额
		 */
		pondTwo: number;
		/**
		 * 玩家下注信息
		 */
		ownBetInfo: OwnBetInfo[];
		/**
		 * 1号奖池中奖信息
		 */
		winnerOne: WinnerInfo;
		/**
		 * 2号奖池中奖信息
		 */
		winnerTwo: WinnerInfo;
		/**
		 * 夺宝的状态 1下注 2结算
		 */
		status: number;
		/**
		 * 夺宝剩余的时间
		 */
		time: number;
		/**
		 * 1号奖池玩家信息
		 */
		mulWinnerOne: WinnerInfo[];
		/**
		 * 2号奖池玩家信息
		 */
		mulWinnerTwo: WinnerInfo[];
		/**
		 * 玩家中奖数额
		 */
		rewardNum: number[];
		GetType(): string { return 'Cmd.GetSnatchTreasureInfoLobby_S'; }
	}
	/**
	 * 获取急速夺宝排行榜信息
	 */
	export class GetSnatchTreasureRankInfoLobby_C {
		GetType(): string { return 'Cmd.GetSnatchTreasureRankInfoLobby_C'; }
	}
	/**
	 * 获取急速夺宝排行榜信息
	 */
	export class GetSnatchTreasureRankInfoLobby_S {
		/**
		 * 所有排行
		 */
		allRankInfo: SscRankInfo[];
		/**
		 * 我的排行
		 */
		myRankInfo: SscRankInfo[];
		/**
		 * 昨日所有排行
		 */
		yesterdayRankInfo: SscRankInfo[];
		/**
		 * 昨日我的排行
		 */
		yesterdayMyRankInfo: SscRankInfo[];
		GetType(): string { return 'Cmd.GetSnatchTreasureRankInfoLobby_S'; }
	}
	/**
	 * 急速夺宝下注量广播
	 */
	export class SnatchTreasureBetChipsLobby_Brd {
		/**
		 * 1号奖池下注量
		 */
		oneBetChips: number;
		/**
		 * 1号奖池变化量
		 */
		oneDiffNum: number;
		/**
		 * 2号奖池下注量
		 */
		twoBetChips: number;
		/**
		 * 2号奖池变化量
		 */
		twoDiffNum: number;
		GetType(): string { return 'Cmd.SnatchTreasureBetChipsLobby_Brd'; }
	}
	/**
	 * 急速夺宝下注状态广播
	 */
	export class SnatchTreasureBetStatusLobby_Brd {
		/**
		 * 状态 1 下注 2 开奖
		 */
		status: number;
		/**
		 * 状态时间
		 */
		time: number;
		GetType(): string { return 'Cmd.SnatchTreasureBetStatusLobby_Brd'; }
	}
	/**
	 * 急速夺宝开奖状态广播
	 */
	export class SnatchTreasureLotteryStatusLobby_Brd {
		/**
		 * 状态
		 */
		status: number;
		/**
		 * 时间
		 */
		time: number;
		/**
		 * 1号奖池中奖信息
		 */
		winnerOne: WinnerInfo[];
		/**
		 * 2号奖池中奖信息
		 */
		winnerTwo: WinnerInfo[];
		GetType(): string { return 'Cmd.SnatchTreasureLotteryStatusLobby_Brd'; }
	}
	/**
	 * 急速夺宝玩家下注
	 */
	export class SnatchTreasureUserBetChipsLobby_C {
		/**
		 * 下注奖池编号 1:1号奖池 2:2号奖池
		 */
		number: number;
		/**
		 * 下注量
		 */
		chips: number;
		GetType(): string { return 'Cmd.SnatchTreasureUserBetChipsLobby_C'; }
	}
	/**
	 * 急速夺宝玩家下注返回
	 */
	export class SnatchTreasureUserBetChipsLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 奖池编号
		 */
		number: number;
		/**
		 * 本次下注奖池的总量
		 */
		pondBetChips: number;
		/**
		 * 玩家下注该奖池总量
		 */
		ownBetChips: number;
		/**
		 * 玩家本次下注量
		 */
		ownDiffNum: number;
		/**
		 * 本次下注的中奖概率
		 */
		probability: string;
		GetType(): string { return 'Cmd.SnatchTreasureUserBetChipsLobby_S'; }
	}
	/**
	 * 急速夺宝玩家概率变化
	 */
	export class SnatchTreasureUserProbabilityLobby_S {
		/**
		 * 玩家1号奖池概率
		 */
		oneProbability: string;
		/**
		 * 玩家2号奖池概率
		 */
		twoProbability: string;
		GetType(): string { return 'Cmd.SnatchTreasureUserProbabilityLobby_S'; }
	}
	/**
	 * 急速夺宝中奖玩家通知
	 */
	export class SnatchTreasureWinnerNoticeLobby_S {
		/**
		 * 两个奖池中奖数量
		 */
		rewardNum: number[];
		GetType(): string { return 'Cmd.SnatchTreasureWinnerNoticeLobby_S'; }
	}
	/**
	 * 急速夺宝我的下注记录
	 */
	export class GetSnatchTreasureOwnBetRecordLobby_C {
		GetType(): string { return 'Cmd.GetSnatchTreasureOwnBetRecordLobby_C'; }
	}
	/**
	 * 下注记录信息
	 */
	export class OwnBetRecordInfo {
		/**
		 * 本局是否中奖
		 */
		isWin: boolean;
		/**
		 * 下注时间戳
		 */
		timestamp: number;
		/**
		 * 该奖池编号
		 */
		number: number;
		/**
		 * 该奖池玩家下注额
		 */
		ownBetChips: number;
		/**
		 * 该奖池下注总额
		 */
		pondBetChips: number;
		/**
		 * 该玩家概率
		 */
		probability: string;
		GetType(): string { return 'Cmd.OwnBetRecordInfo'; }
	}
	/**
	 * 急速夺宝我的下注记录返回
	 */
	export class GetSnatchTreasureOwnBetRecordLobby_S {
		/**
		 * 玩家下注记录
		 */
		record: OwnBetRecordInfo[];
		GetType(): string { return 'Cmd.GetSnatchTreasureOwnBetRecordLobby_S'; }
	}
	/**
	 * 急速夺宝打开面板或关闭面板
	 */
	export class SnatchTreasurePanelStatusLobby_C {
		/**
		 * 状态 1 打开 2 关闭
		 */
		status: number;
		GetType(): string { return 'Cmd.SnatchTreasurePanelStatusLobby_C'; }
	}
	export class SnatchTreasurePanelStatusLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.SnatchTreasurePanelStatusLobby_S'; }
	}
	/**
	 * 三张大厅玩法隐藏功能
	 */
	export class Hidden_Game {
		/**
		 * 是否隐藏
		 */
		value: boolean;
		/**
		 * 游戏类型
		 */
		type: Hidden_Game.Hidden_Game_Type;
		GetType(): string { return 'Cmd.Hidden_Game'; }
	}
	export module Hidden_Game {
		export enum Hidden_Game_Type {
			/**
			 * 标准场
			 */
			Game_Stand = 9053000,
			/**
			 * 百人场
			 */
			Game_Hundred = 9053001,
			/**
			 * 森林舞会
			 */
			Game_SenLinWuHui = 9053002,
			/**
			 * 时时彩
			 */
			Game_EveryColor = 9053003,
			/**
			 * 急速夺宝
			 */
			Game_SnatchTreasure = 9053004,
			/**
			 * 赠送金币
			 */
			Game_ExchangeCoin = 9053005,
			/**
			 * 摇钱树
			 */
			Game_MoneyTree = 9053006,
			/**
			 * 龙虎斗
			 */
			Game_LongHu = 9053007,
			/**
			 * 至尊
			 */
			Game_ZhiZun = 9053008,
			/**
			 * 海王捕鱼
			 */
			Game_Fish = 9053009,
			/**
			 * 广播按钮
			 */
			Game_BroadCast = 9053010
		}
	}
	/**
	 * 简单推送
	 */
	export class IsSimpleAgentLobby_S {
		/**
		 * 0/1 否、是
		 */
		state: number;
		GetType(): string { return 'Cmd.IsSimpleAgentLobby_S'; }
	}
	/**
	 * ---------------------------------奖池回馈活动开始----------------------------//
	 *  请求获取奖池奖励内容
	 */
	export class JackpotItemListLobbyCmd_C {
		GetType(): string { return 'Cmd.JackpotItemListLobbyCmd_C'; }
	}
	/**
	 * 奖池物品列表
	 */
	export class JackpotItem {
		/**
		 * 商品ID
		 */
		id: number;
		/**
		 * 商品名称
		 */
		name: string;
		icon: number;
		/**
		 * 奖励数量
		 */
		rewardNum: number;
		/**
		 * 今日总组数
		 */
		allNum: number;
		/**
		 * 今日剩余组数
		 */
		leftNum: number;
		GetType(): string { return 'Cmd.JackpotItem'; }
	}
	export class JackpotItemListLobbyCmd_S {
		/**
		 * 商品列表
		 */
		list: JackpotItem[];
		/**
		 * 当前奖池总奖金
		 */
		curNum: number;
		/**
		 * 我的奖池贡献度,每10个贡献度可以抽一次奖
		 */
		myJackpot: number;
		GetType(): string { return 'Cmd.JackpotItemListLobbyCmd_S'; }
	}
	/**
	 * 刷新奖池
	 */
	export class JackpotNumLobbyCmd_S {
		/**
		 * 当前奖池总奖金
		 */
		num: number;
		GetType(): string { return 'Cmd.JackpotNumLobbyCmd_S'; }
	}
	/**
	 * 请求获奖排行榜
	 */
	export class JackpotOrderLobbyCmd_C {
		/**
		 * 当前奖池总奖金
		 */
		page: number;
		GetType(): string { return 'Cmd.JackpotOrderLobbyCmd_C'; }
	}
	/**
	 * 奖池物品列表
	 */
	export class JackpotRewardUser {
		uid: number;
		/**
		 * nickName
		 */
		name: string;
		/**
		 * 奖励数量
		 */
		rewardNum: number;
		GetType(): string { return 'Cmd.JackpotRewardUser'; }
	}
	/**
	 * 请求获奖排行榜返回
	 */
	export class JackpotOrderLobbyCmd_S {
		/**
		 * 当前奖池总奖金
		 */
		page: number;
		/**
		 * 获奖列表
		 */
		list: JackpotRewardUser[];
		GetType(): string { return 'Cmd.JackpotOrderLobbyCmd_S'; }
	}
	/**
	 * 请求抽奖
	 */
	export class GetJackpotItemLobbyCmd_C {
		GetType(): string { return 'Cmd.GetJackpotItemLobbyCmd_C'; }
	}
	/**
	 * 请求抽奖返回
	 */
	export class GetJackpotItemLobbyCmd_S {
		/**
		 * 奖品id
		 */
		id: number;
		/**
		 * 剩余奖品数量
		 */
		leftNum: number;
		/**
		 * 当前奖池总奖金
		 */
		curNum: number;
		/**
		 * 我的奖池贡献度,每10个贡献度可以抽一次奖
		 */
		myJackpot: number;
		GetType(): string { return 'Cmd.GetJackpotItemLobbyCmd_S'; }
	}
	/**
	 * ---------------------------------积分商城购买----------------------------//
	 *  获取积分商城物品列表
	 */
	export class ShopPointListLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.ShopPointListLobbyCmd_C'; }
	}
	/**
	 * 积分商城物品列表
	 */
	export class ShopPointItem {
		/**
		 * 物品ID
		 */
		id: number;
		/**
		 * 商品名称
		 */
		name: string;
		icon: number;
		/**
		 * 1表示钻石,2表示积分
		 */
		moneyType: number;
		/**
		 * 花费
		 */
		cost: number;
		/**
		 * 数量
		 */
		number: number;
		/**
		 * 是否显示,(购买)
		 */
		open: number;
		/**
		 * 显示栏目
		 */
		displayColumn: number[];
		/**
		 * 上市日期,仅供客户端展示
		 */
		Date: string;
		/**
		 * 抽奖类型1表示钻石,2表示积分
		 */
		luckyType: number;
		/**
		 * 抽奖消耗
		 */
		luckyCost: number;
		/**
		 * 抽奖获得概率
		 */
		luckyProb: number;
		/**
		 * 奖品类型 1钻石 2积分 3物品  4金豆
		 */
		rewardType: number;
		GetType(): string { return 'Cmd.ShopPointItem'; }
	}
	/**
	 * 返回积分商城物品列表
	 */
	export class ShopPointListLobbyCmd_S {
		/**
		 * 商品列表
		 */
		list: ShopPointItem[];
		/**
		 * 剩余转盘次数
		 */
		turntable: number;
		GetType(): string { return 'Cmd.ShopPointListLobbyCmd_S'; }
	}
	/**
	 * 购买一个积分商品
	 */
	export class BuyShopPointItemLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * 物品ID
		 */
		goodId: number;
		GetType(): string { return 'Cmd.BuyShopPointItemLobbyCmd_C'; }
	}
	/**
	 * 单笔订单
	 */
	export class LobbyOrderItem {
		/**
		 * 订单号
		 */
		orderId: number;
		/**
		 * 购买时间
		 */
		time: number;
		/**
		 * 商品ID
		 */
		goodsId: number;
		/**
		 * 数量
		 */
		num: number;
		/**
		 * 订单状态 0：购买成功，1：购买失败 其余的以后再加
		 */
		orderState: number;
		GetType(): string { return 'Cmd.LobbyOrderItem'; }
	}
	/**
	 * 请求查看所有购买订单
	 */
	export class RequestOrderListLobbyCmd_C {
		/**
		 * 大厅ID
		 */
		lobbyId: number;
		/**
		 * 请求的页数
		 */
		pageNum: number;
		GetType(): string { return 'Cmd.RequestOrderListLobbyCmd_C'; }
	}
	/**
	 * 返回订单列表
	 */
	export class ReturnOrderListLobbyCmd_S {
		/**
		 * 订单列表
		 */
		orderList: LobbyOrderItem[];
		/**
		 * 当前的页数
		 */
		curPageNum: number;
		/**
		 * 总的页数
		 */
		totalPageNum: number;
		GetType(): string { return 'Cmd.ReturnOrderListLobbyCmd_S'; }
	}
	/**
	 * 请求上一次抽奖结果,为了让转盘转完再显示抽奖结果,现在把结果下发放在客户端主动请求
	 */
	export class GetLuckShopReusltLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		GetType(): string { return 'Cmd.GetLuckShopReusltLobbyCmd_C'; }
	}
	/**
	 * 抽奖结果
	 */
	export class LuckShopPointItemLobbyCmd_CS {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * 抽奖类型1表示钻石,2表示积分
		 */
		luckyType: number;
		/**
		 * 物品ID,下行用
		 */
		goodId: number;
		GetType(): string { return 'Cmd.LuckShopPointItemLobbyCmd_CS'; }
	}
	/**
	 * 获取抽奖结果
	 */
	export class GetLuckShopPointItemLobbyCmd_C {
		/**
		 * 需要带上大厅id
		 */
		lobbyId: number;
		/**
		 * 抽奖类型1表示钻石,2表示积分
		 */
		luckyType: number;
		GetType(): string { return 'Cmd.GetLuckShopPointItemLobbyCmd_C'; }
	}
	/**
	 * 用钻石钻石金币
	 */
	export class RedeemGoldByDiamondLobbyCmd_C {
		/**
		 * 钻石数量,返回Cmd.UserInfoGetLobbyCmd_S
		 */
		num: number;
		GetType(): string { return 'Cmd.RedeemGoldByDiamondLobbyCmd_C'; }
	}
	/**
	 * ---------------------------------商城兑换码----------------------------//
	 *  请求兑换一个商品
	 */
	export class RedeemItemShopPointLobbyCmd_C {
		/**
		 * 邮寄地址
		 */
		addr: Cmd.DeliverAddr;
		/**
		 * 兑换码
		 */
		cdkey: string;
		GetType(): string { return 'Cmd.RedeemItemShopPointLobbyCmd_C'; }
	}
	/**
	 * 通知消息
	 */
	export class Notification {
		/**
		 * 消息id
		 */
		id: number;
		/**
		 * 类型
		 */
		typ: Notification.Type;
		/**
		 * 名称
		 */
		name: string;
		/**
		 * 留言
		 */
		msg: string;
		/**
		 * 头像
		 */
		headurl: string;
		uid: number;
		GetType(): string { return 'Cmd.Notification'; }
	}
	export module Notification {
		export enum Type {
			AddFriend = 1
		}
	}
	/**
	 *  C-&gt;S 消息更新请求
	 *  S-&gt;C 消息更新通知
	 */
	export class NotificationUpdateLobbyCmd_CS {
		op: Cmd.UpdateOperator;
		rows: Notification[];
		GetType(): string { return 'Cmd.NotificationUpdateLobbyCmd_CS'; }
	}
	/**
	 * 增加带入
	 */
	export class AddBringLobbyCmd_C {
		num: number;
		matchId: number;
		GetType(): string { return 'Cmd.AddBringLobbyCmd_C'; }
	}
	/**
	 * 带出金钱
	 */
	export class TakeoutBringLobbyCmd_C {
		GetType(): string { return 'Cmd.TakeoutBringLobbyCmd_C'; }
	}
	/**
	 * 系统设置
	 */
	export class SystemSettingsLobbyCmd_CS {
		/**
		 * 自定义设置内容
		 */
		settings: string;
		GetType(): string { return 'Cmd.SystemSettingsLobbyCmd_CS'; }
	}
	/**
	 * ---------------------------------账号绑定其他登录方式----------------------------//
	 *  获取手机验证码
	 */
	export class GetBindAccountIdentifyCodeLobbyCmd_C {
		/**
		 * 手机号码
		 */
		phoneNumber: number;
		/**
		 * 操作类型 1/2/3  绑定/换绑/修改密码 4 修改保险箱密码
		 */
		opType: number;
		/**
		 * 手机号
		 */
		phonenumber: string;
		GetType(): string { return 'Cmd.GetBindAccountIdentifyCodeLobbyCmd_C'; }
	}
	export class GetBindAccountIdentifyCodeLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetBindAccountIdentifyCodeLobbyCmd_S'; }
	}
	/**
	 * 账号绑定其他登录方式
	 */
	export class BindAccountLobbyCmd_C {
		/**
		 * 操作类型 1/2/3/4  绑定/换绑/修改密码/解绑
		 */
		opType: number;
		/**
		 * 平台id 129/手机
		 */
		platId: number;
		/**
		 * 平台账号 如果为绑定手机号 则填手机号
		 */
		platAccount: string;
		/**
		 * 各种第三方的验证码
		 */
		code: string;
		/**
		 * 其他登录为账号密码登录的需要同时带上密码
		 */
		passwd: string;
		/**
		 * 如果为换绑 则这为老手机验证码 -- 暂时不用吧。还是使用二步流程
		 */
		oldCode: string;
		GetType(): string { return 'Cmd.BindAccountLobbyCmd_C'; }
	}
	export class BindAccountLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 密码
		 */
		password: string;
		/**
		 * 手机号
		 */
		phoneNumber: number;
		/**
		 * 平台id 129/手机
		 */
		platId: number;
		/**
		 * 操作类型 1/2/3/4  绑定/换绑/修改密码/解绑
		 */
		opType: number;
		GetType(): string { return 'Cmd.BindAccountLobbyCmd_S'; }
	}
	/**
	 * 验证指定验证码
	 */
	export class VerifyIdentifyCodeLobbyCmd_C {
		/**
		 * 平台id 129/手机
		 */
		platId: number;
		/**
		 * 平台账号 如果为绑定手机号 则填手机号
		 */
		platAccount: string;
		/**
		 * 各种第三方的验证码
		 */
		code: string;
		GetType(): string { return 'Cmd.VerifyIdentifyCodeLobbyCmd_C'; }
	}
	export class VerifyIdentifyCodeLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.VerifyIdentifyCodeLobbyCmd_S'; }
	}
	/**
	 * ---------------------------------游客绑定邮箱----------------------------//
	 *  获取手机验证码
	 */
	export class GetGuestBindEmailIdentifyCodeLobbyCmd_C {
		/**
		 * 邮箱
		 */
		email: string;
		/**
		 * 操作类型 1/2/3/4  绑定/换绑/修改密码/解绑 -- 暂时没用到
		 */
		opType: number;
		GetType(): string { return 'Cmd.GetGuestBindEmailIdentifyCodeLobbyCmd_C'; }
	}
	export class GetGuestBindEmailIdentifyCodeLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetGuestBindEmailIdentifyCodeLobbyCmd_S'; }
	}
	/**
	 * 游客绑定邮件
	 */
	export class GuestBindEmailLobbyCmd_C {
		/**
		 * 操作类型 1/2/3/4  绑定/换绑/修改密码/解绑 -- 暂时只处理1、3
		 */
		opType: number;
		/**
		 * 平台账号 如果为绑定邮箱 则填邮箱
		 */
		platAccount: string;
		/**
		 * 邮件验证码
		 */
		code: string;
		/**
		 * 密码
		 */
		passwd: string;
		/**
		 * 旧密码
		 */
		oldPasswd: string;
		GetType(): string { return 'Cmd.GuestBindEmailLobbyCmd_C'; }
	}
	export class GuestBindEmailLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GuestBindEmailLobbyCmd_S'; }
	}
	/**
	 * 防沉迷提示弹窗(好彩金币场yy渠道需求2018.06.08)
	 */
	export class AntiAddictionLobbyCmd_S {
		GetType(): string { return 'Cmd.AntiAddictionLobbyCmd_S'; }
	}
	/**
	 *  好彩金币系列代理商公告
	 *  代理商分享页面信息
	 */
	export class GetAgentShareInfoLobbyCmd_C {
		GetType(): string { return 'Cmd.GetAgentShareInfoLobbyCmd_C'; }
	}
	export class GetAgentShareInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 剩余红包数量
		 */
		redpackNum: number;
		/**
		 * 红包金额
		 */
		redpackChips: number;
		/**
		 * 公告内容
		 */
		broadInfo: string;
		GetType(): string { return 'Cmd.GetAgentShareInfoLobbyCmd_S'; }
	}
	/**
	 * 代理商设置分享数据
	 */
	export class SetAgentShareInfoLobbyCmd_C {
		/**
		 * 红包数量
		 */
		redpackNum: number;
		/**
		 * 红包金额
		 */
		redpackChips: number;
		/**
		 * 公告内容
		 */
		broadInfo: string;
		GetType(): string { return 'Cmd.SetAgentShareInfoLobbyCmd_C'; }
	}
	export class SetAgentShareInfoLobbyCmd_S {
		resultCode: number;
		/**
		 * 剩余红包数量
		 */
		redpackNum: number;
		/**
		 * 红包金额
		 */
		redpackChips: number;
		/**
		 * 公告内容
		 */
		broadInfo: string;
		GetType(): string { return 'Cmd.SetAgentShareInfoLobbyCmd_S'; }
	}
	/**
	 * 代理商设置公告通知所有下级播跑马灯
	 */
	export class NotifyAgentChildsBroadInfoLobby_Brd {
		/**
		 * 0只播跑马灯 1需要弹窗和跑马灯
		 */
		optype: number;
		/**
		 * 公告内容
		 */
		broadInfo: string;
		/**
		 * 红包金额（如果该值存在则在***弹窗面板***上会有一个红包)
		 * 服务器会直接默认到账，但是不会通知前端刷新
		 * 前端自己在玩家点击领取或者关闭按钮的时候弹个领取特效然后请求下刷新数据同步金币数量
		 * 注意不要弹两次特效（点击了领取按钮弹了特效后再点击关闭按钮就不要弹特效了）
		 */
		redpackChips: number;
		GetType(): string { return 'Cmd.NotifyAgentChildsBroadInfoLobby_Brd'; }
	}
	/**
	 * 大四喜大厅：查询玩家游戏记录
	 */
	export class GameRecords {
		/**
		 * 游戏时间
		 */
		timestamp: number;
		/**
		 * 牌局Id,如果没传值得话，前端显示个“-”吧
		 */
		roundId: number;
		/**
		 * 投注金额
		 */
		betChips: number;
		/**
		 * 中奖金额
		 */
		lotteryChips: number;
		/**
		 * 输赢
		 */
		profitChips: number;
		/**
		 * 游戏Id
		 */
		gameId: number;
		/**
		 * 有效投注
		 */
		vailidBet: number;
		GetType(): string { return 'Cmd.GameRecords'; }
	}
	export class FindUserGameRecordsLobbyCmd_C {
		/**
		 * 不传或者传0默认为查找全部
		 */
		gameId: number;
		/**
		 * 开始时间戳
		 */
		sttime: number;
		/**
		 * 结束时间戳
		 */
		endtime: number;
		GetType(): string { return 'Cmd.FindUserGameRecordsLobbyCmd_C'; }
	}
	export class FindUserGameRecordsLobbyCmd_S {
		/**
		 * 如果没传则表示没有记录
		 */
		records: GameRecords[];
		GetType(): string { return 'Cmd.FindUserGameRecordsLobbyCmd_S'; }
	}
	/**
	 * 玩家赠送金币信息
	 */
	export class GetUserGiftCoinInfoLobbyCmd_CS {
		/**
		 * 客服微信号
		 */
		weChat: string;
		/**
		 * 赠送下限
		 */
		minLimit: number;
		/**
		 * 赠送上限
		 */
		maxLimit: number;
		/**
		 * 可赠送数量，为空则不限制，仅普通玩家间有效
		 */
		canGiftNum: number;
		GetType(): string { return 'Cmd.GetUserGiftCoinInfoLobbyCmd_CS'; }
	}
	export class GameStateList {
		/**
		 * 状态机状态id
		 */
		id: number;
		/**
		 * 状态机对应时间间隔
		 */
		time: number;
		GetType(): string { return 'Cmd.GameStateList'; }
	}
	export class GameSyncStatusData {
		baseTime: number;
		stateList: GameStateList[];
		/**
		 * 房间等级
		 */
		level: number;
		GetType(): string { return 'Cmd.GameSyncStatusData'; }
	}
	/**
	 * 历史数据更新（大厅）
	 */
	export class HistoryUpdateLobbyCmd_CS {
		/**
		 * 游戏Id
		 */
		gameId: number;
		/**
		 * 房间等级列表
		 */
		levelList: number[];
		/**
		 * 历史数据列表
		 */
		historyList: Cmd.History[];
		/**
		 * 时间戳
		 */
		timestamp: number;
		/**
		 * jackpot时间戳
		 */
		lastUpdateTime: number;
		/**
		 * 时间间隔
		 */
		interval: number;
		/**
		 * 获取最后一条记录
		 */
		lastExpect: boolean;
		/**
		 * 游戏同步数据
		 */
		gameSyncStatusList: GameSyncStatusData[];
		GetType(): string { return 'Cmd.HistoryUpdateLobbyCmd_CS'; }
	}
	/**
	 * 玩家游戏历史数据更新（大厅）
	 */
	export class UserGameHistoryUpdateLobbyCmd_CS {
		/**
		 * 游戏Id
		 */
		gameId: number;
		/**
		 * 房间等级
		 */
		level: number;
		/**
		 * 起始下标
		 */
		beginIndex: number;
		/**
		 * 结束下标
		 */
		endIndex: number;
		/**
		 * 历史记录最大条目数
		 */
		maxLen: number;
		/**
		 * 历史数据列表
		 */
		history: Cmd.History;
		GetType(): string { return 'Cmd.UserGameHistoryUpdateLobbyCmd_CS'; }
	}
	/**
	 * 同步推广员邮件信息
	 */
	export class SyncPromotersMailInfoLobbyCmd_CS {
		/**
		 * 1 设置推广员身份 2 取消推广员身份
		 */
		optype: number;
		/**
		 * 邮件标题 不填充为获取邮件信息
		 */
		title: string;
		/**
		 * 邮件内容
		 */
		content: string;
		GetType(): string { return 'Cmd.SyncPromotersMailInfoLobbyCmd_CS'; }
	}
	export class MahjongPoint {
		/**
		 * 角色ID
		 */
		charid: number;
		/**
		 * 昵称
		 */
		name: string;
		/**
		 * 头像
		 */
		headUrl: string;
		/**
		 * 输赢积分
		 */
		point: number;
		GetType(): string { return 'Cmd.MahjongPoint'; }
	}
	/**
	 * 获取分享信息（新版分享 里面存有链接）
	 */
	export class GetNewShareInfoLobbyCmd_CS {
		/**
		 * 需要带上大厅id
		 */
		globalRoomId: number;
		/**
		 * 结果
		 */
		resultCode: number;
		/**
		 * 结束时间
		 */
		endTime: number;
		/**
		 * 实际玩了几局
		 */
		realNum: number;
		/**
		 * 积分情况
		 */
		rdata: MahjongPoint[];
		/**
		 * 链接地址
		 */
		url: string;
		/**
		 * 操作类型：1 查询 2 领取 3 接受邀请
		 */
		optype: number;
		GetType(): string { return 'Cmd.GetNewShareInfoLobbyCmd_CS'; }
	}
	/**
	 * ---------------------------------西安房卡每日抽奖任务----------------------------//
	 *  每日任务
	 */
	export class DailyTask {
		/**
		 * 任务id
		 */
		id: number;
		/**
		 * 任务状态,nil表示未接,0表示已完成,其他数字表示进度,比如1/1表示可完成,需要完成次数需要从任务表里读取
		 */
		state: number;
		GetType(): string { return 'Cmd.DailyTask'; }
	}
	/**
	 * 请求每日任务
	 */
	export class RequestDailyTaskLobbyCmd_C {
		GetType(): string { return 'Cmd.RequestDailyTaskLobbyCmd_C'; }
	}
	/**
	 * 返回每日任务
	 */
	export class ReturnDailyTaskLobbyCmd_S {
		/**
		 * 每日任务
		 */
		daily: DailyTask[];
		/**
		 * 剩余抽奖次数
		 */
		leftNum: number;
		GetType(): string { return 'Cmd.ReturnDailyTaskLobbyCmd_S'; }
	}
	/**
	 * 获取新手奖励信息
	 */
	export class GetNoviceInfodLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetNoviceInfodLobbyCmd_C'; }
	}
	export class GetNoviceInfodLobbyCmd_S {
		resultCode: number;
		noviceInfo: NoviceItem[];
		remainDay: number;
		GetType(): string { return 'Cmd.GetNoviceInfodLobbyCmd_S'; }
	}
	/**
	 * 领取新手奖励
	 */
	export class GetNoviceRewarddLobbyCmd_C {
		lobbyId: number;
		/**
		 * 1:普通领取 2:双倍领取
		 */
		typ: number;
		GetType(): string { return 'Cmd.GetNoviceRewarddLobbyCmd_C'; }
	}
	export class GetNoviceRewarddLobbyCmd_S {
		resultCode: number;
		day: number;
		GetType(): string { return 'Cmd.GetNoviceRewarddLobbyCmd_S'; }
	}
	export class NoviceItem {
		day: number;
		/**
		 * 1:未领 2:已领 3:当前可领
		 */
		status: number;
		goodId: number;
		goodNbr: number;
		GetType(): string { return 'Cmd.NoviceItem'; }
	}
	/**
	 * 小程序分享活动相关
	 */
	export class InviteInfoLitteGame {
		/**
		 * 漳州使用 当前状态 1：等待邀请(这时候不会有昵称和头像信息) 2：已邀请但局数未满 3:已邀请且局数已满可领取奖励 4：已邀请奖励已领取
		 * 当前状态 1：等待邀请(这时候不会有昵称和头像信息) 2：已邀请等待领取奖励 3：已邀请奖励已领取(好彩跑得快使用)
		 */
		status: number;
		uid: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 头像
		 */
		headUrl: string;
		/**
		 * 对应道具
		 */
		goods: Cmd.Goods;
		id: number;
		/**
		 * 当前游戏局数
		 */
		curGameNbr: number;
		/**
		 * 总共需游戏局数
		 */
		allGameNbr: number;
		GetType(): string { return 'Cmd.InviteInfoLitteGame'; }
	}
	/**
	 *  分享有奖（邀请有礼）
	 *  获取界面信息
	 */
	export class GetInviteInfoLittleGameLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetInviteInfoLittleGameLobbyCmd_C'; }
	}
	export class GetInviteInfoLittleGameLobbyCmd_S {
		resultCode: number;
		info: InviteInfoLitteGame[];
		/**
		 * 奖励领取状态 1：未邀请不可领 2：可领 3：今日已领取完(前端根据这个数值判断按钮是否可点或者一些弹窗处理)
		 */
		rewardStatus: number;
		GetType(): string { return 'Cmd.GetInviteInfoLittleGameLobbyCmd_S'; }
	}
	/**
	 * 领取奖励
	 */
	export class GetInviteRewardLittleGameLobbyCmd_C {
		lobbyId: number;
		id: number;
		GetType(): string { return 'Cmd.GetInviteRewardLittleGameLobbyCmd_C'; }
	}
	export class GetInviteRewardLittleGameLobbyCmd_S {
		resultCode: number;
		/**
		 * 对应道具
		 */
		goods: Cmd.Goods[];
		/**
		 * 这里的数据量很小，我们就直接将所有的信息回复过去，前端刷新就直接替换
		 */
		info: InviteInfoLitteGame[];
		/**
		 * 奖励领取状态 1：未邀请不可领 2：可领 3：今日已领取完(前端根据这个数值判断按钮是否可点或者一些弹窗处理)
		 */
		rewardStatus: number;
		id: number;
		GetType(): string { return 'Cmd.GetInviteRewardLittleGameLobbyCmd_S'; }
	}
	/**
	 *  苹果领钻石（只针对苹果用户开放需要前端做一下显示处理）
	 *  获取分享信息
	 */
	export class GetIosInviteInfoLittleGameLobbyCmd_C {
		/**
		 * 第几页 数据分页一次给20条
		 */
		index: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetIosInviteInfoLittleGameLobbyCmd_C'; }
	}
	export class GetIosInviteInfoLittleGameLobbyCmd_S {
		/**
		 * 已经分享的群数量
		 */
		yet: number;
		/**
		 * 总共可分享的群数量
		 */
		total: number;
		/**
		 * 分页
		 */
		index: number;
		/**
		 * 数据
		 */
		info: InviteInfoLitteGame[];
		GetType(): string { return 'Cmd.GetIosInviteInfoLittleGameLobbyCmd_S'; }
	}
	export class GetIosInviteRewardLittleGameLobbyCmd_C {
		uid: number;
		lobbyId: number;
		GetType(): string { return 'Cmd.GetIosInviteRewardLittleGameLobbyCmd_C'; }
	}
	export class GetIosInviteRewardLittleGameLobbyCmd_S {
		resultCode: number;
		/**
		 * 这块的数据量可能会过多我们不回复所有的数据过去，这里只回复领取对应的值，前端自行去根据uid刷新领取状态
		 */
		single: InviteInfoLitteGame;
		GetType(): string { return 'Cmd.GetIosInviteRewardLittleGameLobbyCmd_S'; }
	}
	/**
	 * 钻石不足时获取钻石界面提示
	 */
	export class GetDiamondInterfaceTips_C {
		/**
		 * 1:安卓 2:ios
		 */
		typ: number;
		GetType(): string { return 'Cmd.GetDiamondInterfaceTips_C'; }
	}
	export class GetDiamondInterfaceTips_S {
		/**
		 * 1:分享有礼 2:每日任务 3:免费钻石赛 4:商城(安卓) 5:领钻石(ios)
		 */
		tips: number[];
		GetType(): string { return 'Cmd.GetDiamondInterfaceTips_S'; }
	}
	/**
	 * 话费券兑换提示
	 */
	export class ExchangeGiftVoucherTips_S {
		/**
		 * 1:不足 2:已足 3:清除提示
		 */
		typ: number;
		GetType(): string { return 'Cmd.ExchangeGiftVoucherTips_S'; }
	}
	/**
	 * 请求兑换话费信息
	 */
	export class GetExchangeGiftVoucherInfo_C {
		GetType(): string { return 'Cmd.GetExchangeGiftVoucherInfo_C'; }
	}
	export class GetExchangeGiftVoucherInfo_S {
		infos: GoodsItem[];
		/**
		 * 已提取总额
		 */
		drawAll: number;
		GetType(): string { return 'Cmd.GetExchangeGiftVoucherInfo_S'; }
	}
	export class GoodsItem {
		/**
		 * 商品id
		 */
		goodsId: number;
		/**
		 * 剩余次数
		 */
		remainder: number;
		GetType(): string { return 'Cmd.GoodsItem'; }
	}
	/**
	 * 免费领钻
	 */
	export class GetFreeDiamondLobbyCmd_C {
		GetType(): string { return 'Cmd.GetFreeDiamondLobbyCmd_C'; }
	}
	/**
	 * 获取月卡信息
	 */
	export class GetMonthCardInfoLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetMonthCardInfoLobbyCmd_C'; }
	}
	export class GetMonthCardInfoLobbyCmd_S {
		/**
		 * 0:未开通 1:可领 2:已领
		 */
		state: number;
		/**
		 * 剩余天数
		 */
		remainDay: number;
		GetType(): string { return 'Cmd.GetMonthCardInfoLobbyCmd_S'; }
	}
	/**
	 * 领取月卡奖励
	 */
	export class GetMonthCardRewardLobbyCmd_C {
		lobbyId: number;
		GetType(): string { return 'Cmd.GetMonthCardRewardLobbyCmd_C'; }
	}
	/**
	 * 保险箱
	 */
	export class OperationSafeBoxLobbyCmd_CS {
		/**
		 * 操作类型：1 设置密码 2 重置密码 3 找回密码 4 存钱 5 取钱 6 获取保险箱数据
		 */
		optype: number;
		/**
		 * 手机号（获取时填充说明设置过密码了）
		 */
		phoneNumber: string;
		/**
		 * 验证码
		 */
		code: string;
		/**
		 * 密码
		 */
		password: string;
		/**
		 * 新密码，仅用于重置密码操作
		 */
		passwordNew: string;
		/**
		 * 操作货币类型：1 钻石 2 金币 3 红包
		 */
		currencyType: number;
		/**
		 * 操作货币数量
		 */
		currencyNum: number;
		/**
		 * 获取时用
		 */
		currencyNumList: number[];
		GetType(): string { return 'Cmd.OperationSafeBoxLobbyCmd_CS'; }
	}
	/**
	 * 请求弹窗活动
	 */
	export class PopUpNewsLobbyCmd_C {
		GetType(): string { return 'Cmd.PopUpNewsLobbyCmd_C'; }
	}
	export class PopUpNews {
		/**
		 * matchId,匹配号id
		 */
		id: number;
		/**
		 * matchName,匹配号id
		 */
		name: number;
		GetType(): string { return 'Cmd.PopUpNews'; }
	}
	/**
	 * 请求弹窗活动返回
	 */
	export class PopUpNewsLobbyCmd_S {
		list: PopUpNews[];
		GetType(): string { return 'Cmd.PopUpNewsLobbyCmd_S'; }
	}
	/**
	 * 背包信息
	 */
	export class BackpackInfo {
		/**
		 * 物品ID
		 */
		goodId: number;
		/**
		 * 物品数量
		 */
		number: number;
		/**
		 * 剩余时间
		 */
		lefttime: number;
		GetType(): string { return 'Cmd.BackpackInfo'; }
	}
	/**
	 * 请求背包列表
	 */
	export class BackpackInfoRequestBackpackCmd_C {
		GetType(): string { return 'Cmd.BackpackInfoRequestBackpackCmd_C'; }
	}
	export class BackpackInfoReturnBackpackCmd_S {
		resultCode: number;
		desc: string;
		backpackList: BackpackInfo[];
		GetType(): string { return 'Cmd.BackpackInfoReturnBackpackCmd_S'; }
	}
	/**
	 * 请求使用物品
	 */
	export class BackpackExchangeRequestBackpackCmd_C {
		/**
		 * 将要使用的物品信息
		 */
		backpackInfo: BackpackInfo;
		/**
		 * 使用话费物品的手机号
		 */
		cellPhoneNumber: string;
		/**
		 * 公告内容
		 */
		content: string;
		GetType(): string { return 'Cmd.BackpackExchangeRequestBackpackCmd_C'; }
	}
	export class BackpackExchangeReturnBackpackCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 剩余数量
		 */
		surplus: number;
		/**
		 * 更新物品信息
		 */
		backpackInfo: BackpackInfo;
		GetType(): string { return 'Cmd.BackpackExchangeReturnBackpackCmd_S'; }
	}
	/**
	 * 请求赠送物品
	 */
	export class BackpackPresentRequestBackpackCmd_C {
		/**
		 * 奖要赠送的物品信息
		 */
		backpackInfo: BackpackInfo;
		/**
		 * 目标uid
		 */
		uid: number;
		GetType(): string { return 'Cmd.BackpackPresentRequestBackpackCmd_C'; }
	}
	export class BackpackPresentReturnBackpackCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 更新物品信息
		 */
		backpackInfo: BackpackInfo;
		GetType(): string { return 'Cmd.BackpackPresentReturnBackpackCmd_S'; }
	}
	/**
	 * 获取公众号关注信息
	 */
	export class GetAttentionRewardCmd_C {
		lobbyId: number;
		/**
		 * 操作类型：1关注  2查询 3领取
		 */
		optype: number;
		GetType(): string { return 'Cmd.GetAttentionRewardCmd_C'; }
	}
	export class GetAttentionRewardCmd_S {
		resultCode: number;
		opType: number;
		/**
		 * 0:未关注 1:可领 2:已领
		 */
		state: number;
		/**
		 * 关注公众号获取的奖励
		 */
		items: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.GetAttentionRewardCmd_S'; }
	}
	/**
	 * 钻石兑换奖励
	 */
	export class ExchangeRewardLobbyCmd_C {
		/**
		 * 大厅id
		 */
		lobbyId: number;
		/**
		 * 兑换id(道具兑换表中的ID)
		 */
		itemId: number;
		/**
		 * 手机号
		 */
		mobilePhone: string;
		/**
		 * 邮箱
		 */
		email: string;
		/**
		 * 钻石数
		 */
		diamond: number;
		GetType(): string { return 'Cmd.ExchangeRewardLobbyCmd_C'; }
	}
	export class ExchangeRewardLobbyCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 兑换id(道具兑换表中的ID)
		 */
		itemId: number;
		GetType(): string { return 'Cmd.ExchangeRewardLobbyCmd_S'; }
	}
	/**
	 * 领取限时宝箱奖励
	 */
	export class GetTimeLimitBoxRewardLobbyCmd_C {
		GetType(): string { return 'Cmd.GetTimeLimitBoxRewardLobbyCmd_C'; }
	}
	export class GetTimeLimitBoxRewardLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 如果领取成功则发送下个宝箱的时间长度 如果领取成功但是没有下个宝箱了 则该字段为nil
		 */
		nextTime: number;
		GetType(): string { return 'Cmd.GetTimeLimitBoxRewardLobbyCmd_S'; }
	}
	/**
	 * 进入刮刮乐界面
	 */
	export class IntoScratchTicketLobbyCmd_C {
		GetType(): string { return 'Cmd.IntoScratchTicketLobbyCmd_C'; }
	}
	export class IntoScratchTicketLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 如果有值 表示已经刮过哪几个档次的了
		 */
		recvId: number[];
		/**
		 * 当前局数
		 */
		curRoomNbr: number;
		/**
		 * 当前可刮的所有档次结果
		 */
		rewardNbr: number[];
		GetType(): string { return 'Cmd.IntoScratchTicketLobbyCmd_S'; }
	}
	/**
	 * 离开刮刮乐界面
	 */
	export class ExitScratchTicketLobbyCmd_C {
		GetType(): string { return 'Cmd.ExitScratchTicketLobbyCmd_C'; }
	}
	/**
	 * 领取奖励
	 */
	export class GetScratchTicketRewardLobbyCmd_C {
		/**
		 * 即将刮的是第几个
		 */
		recvId: number;
		GetType(): string { return 'Cmd.GetScratchTicketRewardLobbyCmd_C'; }
	}
	export class GetScratchTicketRewardLobbyCmd_S {
		resultCode: number;
		desc: string;
		/**
		 * 如果有值 表示已经刮的第几个档次的了
		 */
		recvId: number;
		/**
		 * 当前奖励数
		 */
		rewardNbr: number;
		GetType(): string { return 'Cmd.GetScratchTicketRewardLobbyCmd_S'; }
	}
	/**
	 * 大奖励广播一下
	 */
	export class ScratchTicketRewardLobbyCmd_Brd {
		/**
		 * 广播内容
		 */
		desc: string;
		GetType(): string { return 'Cmd.ScratchTicketRewardLobbyCmd_Brd'; }
	}
	/**
	 * 游客绑定第三方账号
	 */
	export class GuestSwitchToThirdPartyLobbyCmd_CS {
		/**
		 * 操作类型 1 -- 暂只支持绑定
		 */
		optype: number;
		/**
		 * 平台用户信息
		 */
		platinfo: Cmd.PlatInfo;
		/**
		 * 0代表成功，1代表失败
		 */
		ret: number;
		/**
		 * 错误描述
		 */
		desc: string;
		GetType(): string { return 'Cmd.GuestSwitchToThirdPartyLobbyCmd_CS'; }
	}
	/**
	 * 请求获取跳转登录token  -- Tips：最终跳转到目标登录服的 platid应为:1000 plataccount为:当前游戏服gameid .. &quot;_&quot; .. 当前游戏服玩家uid
	 */
	export class RequestForwardLoginTokenLobbyCmd_CS {
		/**
		 * 目标登录服地址
		 */
		url: string;
		/**
		 * 目标gameid
		 */
		gameid: number;
		/**
		 * 目标zoneid
		 */
		zoneid: number;
		/**
		 * 0代表成功，1代表失败
		 */
		ret: number;
		/**
		 * 错误描述
		 */
		desc: string;
		/**
		 * 跳转登录token
		 */
		forwardtoken: string;
		GetType(): string { return 'Cmd.RequestForwardLoginTokenLobbyCmd_CS'; }
	}
	/**
	 * 银行卡信息
	 */
	export class BankCardInfo {
		/**
		 * 银行卡ID, 暂时不用
		 */
		id: number;
		/**
		 * 银行名称
		 */
		name: string;
		/**
		 * 支行名称
		 */
		branch: string;
		/**
		 * 省份
		 */
		province: string;
		/**
		 * 城市
		 */
		city: string;
		/**
		 * 开户名
		 */
		username: string;
		/**
		 * 卡号
		 */
		cardno: string;
		/**
		 * 银行卡在支付宝的索引, 暂时不用
		 */
		cardindex: string;
		GetType(): string { return 'Cmd.BankCardInfo'; }
	}
	/**
	 * 提现订单信息
	 */
	export class DrawCashOrderInfo {
		/**
		 * 银行卡信息
		 */
		bankCard: BankCardInfo;
		/**
		 * 订单创建时间
		 */
		timestamp: number;
		/**
		 * 游戏服订单号
		 */
		gameOrder: string;
		/**
		 * 支付服订单号
		 */
		platOrder: string;
		/**
		 * 金额
		 */
		amount: number;
		/**
		 * 状态 0 处理中 1 失败 2 成功
		 */
		state: number;
		/**
		 * 状态描述
		 */
		stateDesc: string;
		GetType(): string { return 'Cmd.DrawCashOrderInfo'; }
	}
	/**
	 * 获取提现订单历史
	 */
	export class RequestDrawCashOrderHistory_CS {
		/**
		 * 一页显示数量
		 */
		perPage: number;
		/**
		 * 当前页数
		 */
		curPage: number;
		/**
		 * 最大页数
		 */
		maxPage: number;
		/**
		 * 订单历史
		 */
		orderList: DrawCashOrderInfo[];
		GetType(): string { return 'Cmd.RequestDrawCashOrderHistory_CS'; }
	}
	/**
	 * 赠送记录信息
	 */
	export class GiftHistoryInfo {
		/**
		 * 赠送方的uid
		 */
		fromUid: number;
		/**
		 * 接收玩家的uid
		 */
		toUid: number;
		/**
		 * 赠送时间
		 */
		timestamp: number;
		/**
		 * 赠送的金币数量
		 */
		sendCoin: number;
		/**
		 * 赠送后我的金币数量
		 */
		myCoin: number;
		/**
		 * 赠送方玩家的昵称
		 */
		fromNickname: string;
		/**
		 * 接收玩家的昵称
		 */
		toNickname: string;
		/**
		 * 唯一id,追回等操作用
		 */
		id: number;
		GetType(): string { return 'Cmd.GiftHistoryInfo'; }
	}
	/**
	 * 获取赠送历史
	 */
	export class RequestGiftHistory_CS {
		/**
		 * 一页显示数量
		 */
		perPage: number;
		/**
		 * 当前页数
		 */
		curPage: number;
		/**
		 * 最大页数
		 */
		maxPage: number;
		/**
		 * 赠送历史
		 */
		historyList: GiftHistoryInfo[];
		GetType(): string { return 'Cmd.RequestGiftHistory_CS'; }
	}
	/**
	 * 追回赠送历史,如果追回成功,返回RequestGiftHistory_CS
	 */
	export class RecoverGiftHistory_C {
		/**
		 * 唯一id,追回等操作用
		 */
		id: number;
		/**
		 * 赠送方的uid
		 */
		fromUid: number;
		/**
		 * 接收玩家的uid
		 */
		toUid: number;
		/**
		 * 一页显示数量
		 */
		perPage: number;
		/**
		 * 当前页数
		 */
		curPage: number;
		/**
		 * 最大页数
		 */
		maxPage: number;
		GetType(): string { return 'Cmd.RecoverGiftHistory_C'; }
	}
	/**
	 * 更新公告广播
	 */
	export class UpdateVersionBroadCastLobbyCmd_Brd {
		/**
		 * 广播标题
		 */
		title: string;
		/**
		 * 广播内容
		 */
		content: string;
		GetType(): string { return 'Cmd.UpdateVersionBroadCastLobbyCmd_Brd'; }
	}
	/**
	 * 纯真年代幸运播报
	 */
	export class luckyBrd {
		nickName: number;
		reward: Cmd.RewardItem;
		GetType(): string { return 'Cmd.luckyBrd'; }
	}
	/**
	 * 纯真年代 进入活动界面
	 */
	export class IntoPureTimeLobbyCmd_C {
		GetType(): string { return 'Cmd.IntoPureTimeLobbyCmd_C'; }
	}
	export class IntoPureTimeLobbyCmd_S {
		resultCode: number;
		/**
		 * 气球数
		 */
		balloon: number;
		/**
		 * 今日开箱数
		 */
		openNbr: number;
		/**
		 * 累计宝箱是否可开 默认为长度为4的数组。数组内的数值代表：0/1/2 未可领、可领取、已领取
		 */
		continueReward: number[];
		/**
		 * 幸运播报
		 */
		luckyBrds: luckyBrd[];
		/**
		 * 数组对应0/1/2/3,代表玩家收集的“纯真年代”四个字
		 */
		reward: number[];
		GetType(): string { return 'Cmd.IntoPureTimeLobbyCmd_S'; }
	}
	/**
	 * 纯真年代 开启宝箱
	 */
	export class PureTimeOpenBoxLobbyCmd_C {
		GetType(): string { return 'Cmd.PureTimeOpenBoxLobbyCmd_C'; }
	}
	export class PureTimeOpenBoxLobbyCmd_S {
		resultCode: number;
		reward: Cmd.RewardItem;
		/**
		 * 当前气球数
		 */
		balloon: number;
		GetType(): string { return 'Cmd.PureTimeOpenBoxLobbyCmd_S'; }
	}
	/**
	 * 纯真年代 领取累计开箱奖励
	 */
	export class PureTimeGetContinueReardLobbyCmd_C {
		/**
		 * 具体开哪一个
		 */
		which: number;
		GetType(): string { return 'Cmd.PureTimeGetContinueReardLobbyCmd_C'; }
	}
	export class PureTimeGetContinueReardLobbyCmd_S {
		resultCode: number;
		reward: Cmd.RewardItem;
		GetType(): string { return 'Cmd.PureTimeGetContinueReardLobbyCmd_S'; }
	}
	export class PureTimeRecord {
		/**
		 * 奖励获取时间戳
		 */
		timestamp: number;
		/**
		 * 奖励内容
		 */
		reward: Cmd.RewardItem;
		GetType(): string { return 'Cmd.PureTimeRecord'; }
	}
	/**
	 * 纯真年代 查看获奖记录
	 */
	export class PureTimeGetRecordLobbyCmd_C {
		/**
		 * 分页处理 当前请求第几页 默认一页返回10个数据
		 */
		curPage: number;
		/**
		 * 请求类型 1/2 宝箱奖励、累计奖励
		 */
		typ: number;
		GetType(): string { return 'Cmd.PureTimeGetRecordLobbyCmd_C'; }
	}
	export class PureTimeGetRecordLobbyCmd_S {
		resultCode: number;
		/**
		 * 分页处理 当前请求第几页 默认一页返回10个数据
		 */
		curPage: number;
		maxPage: number;
		/**
		 * 奖励数据
		 */
		record: PureTimeRecord[];
		/**
		 * 请求类型 1/2 宝箱奖励、累计奖励
		 */
		typ: number;
		GetType(): string { return 'Cmd.PureTimeGetRecordLobbyCmd_S'; }
	}
	/**
	 * 纯真年代 获取个人资料
	 */
	export class PureTimeGetPersonalDataLobbyCmd_C {
		GetType(): string { return 'Cmd.PureTimeGetPersonalDataLobbyCmd_C'; }
	}
	export class PureTimeGetPersonalDataLobbyCmd_S {
		resultCode: number;
		name: string;
		phoneNumber: number;
		wx: string;
		addr: string;
		GetType(): string { return 'Cmd.PureTimeGetPersonalDataLobbyCmd_S'; }
	}
	/**
	 * 纯真年代 填写个人资料
	 */
	export class PureTimeSetPersonalDataLobbyCmd_C {
		name: string;
		phoneNumber: number;
		wx: string;
		addr: string;
		GetType(): string { return 'Cmd.PureTimeSetPersonalDataLobbyCmd_C'; }
	}
	export class PureTimeSetPersonalDataLobbyCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.PureTimeSetPersonalDataLobbyCmd_S'; }
	}
	/**
	 * 第三方充值
	 */
	export class BuyDiamond51PayLobbyCmd_C {
		/**
		 * 需要购买的钻石数量
		 */
		num: number;
		/**
		 * 替他人购买,不填就是自己
		 */
		uid: number;
		GetType(): string { return 'Cmd.BuyDiamond51PayLobbyCmd_C'; }
	}
	/**
	 * 第三方充值地址
	 */
	export class BuyDiamond51PayLobbyCmd_S {
		/**
		 * 充值地址
		 */
		url: string;
		GetType(): string { return 'Cmd.BuyDiamond51PayLobbyCmd_S'; }
	}
	export class ZZTurnTableTask {
		/**
		 * 任务id
		 */
		taskId: number;
		/**
		 * 进度次数
		 */
		nbr: number;
		GetType(): string { return 'Cmd.ZZTurnTableTask'; }
	}
	export class ZZTurnTableRecord {
		/**
		 * 时间
		 */
		time: number;
		/**
		 * 物品ID
		 */
		goodId: number;
		/**
		 * 物品数量
		 */
		goodNbr: number;
		GetType(): string { return 'Cmd.ZZTurnTableRecord'; }
	}
	/**
	 * 漳州新增转盘  进入转盘界面
	 */
	export class IntoZZTurnTableLobbyCmd_CS {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 当前积分
		 */
		integral: number;
		/**
		 * 剩余金额
		 */
		money: number;
		/**
		 * 具体任务进度
		 */
		tasks: ZZTurnTableTask[];
		GetType(): string { return 'Cmd.IntoZZTurnTableLobbyCmd_CS'; }
	}
	/**
	 * 转动转盘
	 */
	export class ZZTurnTableLobbyCmd_CS {
		/**
		 * 返回码
		 */
		resultCode: number;
		reward: Cmd.RewardItem;
		/**
		 * 当前积分
		 */
		integral: number;
		/**
		 * 剩余金额
		 */
		money: number;
		GetType(): string { return 'Cmd.ZZTurnTableLobbyCmd_CS'; }
	}
	export class GetZZTurnTableRecordsLobbyCmd_CS {
		resultCode: number;
		/**
		 * 活动获奖记录
		 */
		records: ZZTurnTableRecord[];
		GetType(): string { return 'Cmd.GetZZTurnTableRecordsLobbyCmd_CS'; }
	}
	/**
	 * 广东大厅推送钻石翻倍弹窗
	 */
	export class NotifyUserDoubleDiamondLobbyCmd_S {
		preDiamond: number;
		curDiamond: number;
		GetType(): string { return 'Cmd.NotifyUserDoubleDiamondLobbyCmd_S'; }
	}
	/**
	 * 广东大厅推送老用户赠送钻石
	 */
	export class NotifyRewardOldPlayerLobbyCmd_S {
		diamond: number;
		GetType(): string { return 'Cmd.NotifyRewardOldPlayerLobbyCmd_S'; }
	}
}
