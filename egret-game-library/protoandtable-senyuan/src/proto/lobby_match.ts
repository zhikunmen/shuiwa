//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// Generated from: lobby_match.proto
/// <reference path="common.ts" />
/// <reference path="lobby_room.ts" />

module Cmd {
	export enum MatchGroupType {
		MatchGroupType_None = 0,
		MatchGroupType_TaoTai = 1
	}
	/**
	 * 红花改变类型 枚举
	 */
	export enum FlowerChangeType {
		/**
		 * 奖励群主
		 */
		Reward_Manager = 101,
		/**
		 * 输掉的（对局奖出）
		 */
		Lose = 102,
		/**
		 * 赠送
		 */
		Send = 103,
		/**
		 * 群主摘取
		 */
		Manager_Gather1 = 104,
		/**
		 * 退群清空
		 */
		Exit_Group_Sub = 105,
		/**
		 * 大赢家赠送给群主(即房费)
		 */
		Winner_Send = 201,
		/**
		 * AA赠送给群主(即房费)
		 */
		AA_Send = 202,
		/**
		 * 赢的（对局获得）
		 */
		Win = 203,
		/**
		 * 获赠
		 */
		Recv = 204,
		/**
		 * 群主摘得
		 */
		Manager_Gather2 = 205,
		/**
		 * 退群增加
		 */
		Exit_Group = 206
	}
	/**
	 *  匹配号相关协议--------------------------------------------------------------------------------------------
	 *  请求创建匹配组
	 */
	export class CreateMatchGroupCmd_C {
		/**
		 * 房间信息
		 */
		createRoom: Cmd.CreateRoomCmd_C;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单
		 */
		type: number;
		/**
		 * 最小开局人数,到达人数就开始倒计时
		 */
		minNum: number;
		/**
		 * 最大开局人数,到达人数就直接匹配一桌
		 */
		maxNum: number;
		/**
		 * 是否需要授权,1表示需要
		 */
		needAgree: number;
		/**
		 * 匹配号到达基础人数后的倒计时,秒,0表示用不
		 */
		countDownSec: number;
		/**
		 * 匹配号的生存时间,秒,0表示用不
		 */
		lifeTimeSec: number;
		/**
		 * 匹配类型,空或0是常规模式,1是淘汰赛模式MatchGroupType
		 */
		matchType: number;
		/**
		 * 允许客户端选择优质id作为匹配号
		 */
		roomId: number;
		/**
		 * 需要钻石
		 */
		needDiamond: number;
		/**
		 * 最多开房数
		 */
		maxRoomNum: number;
		/**
		 * 0表示匹配模式,1表示客家俱乐部模式,2表示茶馆(包厢)模式,3表示茶楼模式
		 */
		clubType: number;
		/**
		 * 副管理员ID
		 */
		otherManagerId: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 上下分
		 */
		minMatchPoint: number;
		/**
		 * 结算分钻比例,1分扣几钻
		 */
		scoreDiamond: number;
		/**
		 * 是否为俱乐部模式1：表示为俱乐部模式(似乎已废弃)
		 */
		isClub: number;
		/**
		 * 赛事Id,只有自建赛事会发,官方赛事不发
		 */
		eventId: number;
		/**
		 * 税收起收点
		 */
		taxMin: number;
		/**
		 * 税收百分百
		 */
		tax: number;
		/**
		 * 大赢家税收固定数字
		 */
		taxNum: number;
		/**
		 * 金币转基金,只能创建是设定,中途不能修改
		 */
		gold2MatchPoint: number;
		/**
		 * 提示绑定代理标志,1表示如果没有绑定就提示
		 */
		bindAgent: number;
		/**
		 * 客服微信
		 */
		wechat: string;
		/**
		 * 推荐返利
		 */
		taxReward: number;
		/**
		 * 抢庄分
		 */
		minBankerPoint: number;
		/**
		 * 1表示可负分
		 */
		canNegative: number;
		/**
		 * 百分比扣费人数,不填或者0表示所有赢家,其他表示赢家的前几名
		 */
		taxUserNum: number;
		/**
		 * 最小进桌人数,1就相当于中途加入配置了
		 */
		minUserNum: number;
		/**
		 * 赢家上级返利比例
		 */
		tax1: number;
		/**
		 * 赢家上上级返利比例
		 */
		tax2: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 游戏里的1分等于多少基金,得有个兑换关系,默认是1:1
		 */
		exchange: number;
		/**
		 * 基金低于这个数字将自动解散
		 */
		dissMatchPoint: number;
		/**
		 * 1分几朵花 -- 若存在该参数表示为红花房
		 */
		baseFlower: number;
		/**
		 * 进房最低下限
		 */
		lowerLimitFlower: number;
		/**
		 * 大赢家摘花时 玩家输赢分数下限 -- 若存在该参数表示为大赢家摘花
		 */
		winnerLimitScore: number;
		/**
		 * 大赢家摘花数 -- 若存在该参数表示为大赢家摘花
		 */
		winnerFlower: number;
		/**
		 * AA摘花数 -- 若存在该参数表示为AA摘花
		 */
		AAFlower: number;
		/**
		 * 加多个副管理员ID
		 */
		otherManagerId2: number;
		/**
		 * 大赢家的条件 如果存在该字段 则俱乐部中大赢家的统计需要玩家所赢分数大于该分数 才认为是大赢家
		 */
		winnerConditions: number;
		/**
		 * 管理员清理战绩 nil/1 默认管理员不可清除、管理员可清除
		 */
		masterClearRecord: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		/**
		 * 大赢家摘花类型 多种模式共存的大厅 通过前端指定摘花模式 nil/1/2 大于多少分摘多少花、每多少分摘多少花、阶梯摘花
		 */
		winnerFlowerType: number;
		/**
		 * 选阶梯摘花时的具体数值
		 */
		winnerFlowerLadder: Cmd.WinnerFlowerLadder[];
		/**
		 * 管理员操作摘送花 nil/0/1 默认不传兼容老数据可操作、不可操作、可操作
		 */
		masterOpFlower: number;
		GetType(): string { return 'Cmd.CreateMatchGroupCmd_C'; }
	}
	/**
	 * 请求转换俱乐部基金到金币
	 */
	export class MatchPoint2GoldMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.MatchPoint2GoldMatchGroupCmd_C'; }
	}
	/**
	 * 给匹配号创建个新房间,茶馆用,等待别人选座加入
	 */
	export class CreateRoomMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.CreateRoomMatchGroupCmd_C'; }
	}
	/**
	 * 删除匹配号里的房间
	 */
	export class DeleteRoomMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.DeleteRoomMatchGroupCmd_C'; }
	}
	/**
	 * 设置玩家匹配分
	 */
	export class ChangeMatchPointMatchGroupCmd_CS {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 上下分
		 */
		matchPoint: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.ChangeMatchPointMatchGroupCmd_CS'; }
	}
	/**
	 * 设置玩家备注
	 */
	export class ChangeMatchDescMatchGroupCmd_CS {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 备注
		 */
		desc: string;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.ChangeMatchDescMatchGroupCmd_CS'; }
	}
	/**
	 * 修改玩家绑定关系
	 */
	export class RequestChangeParentIdMatchGroupCmd_C {
		/**
		 * 下线玩家id
		 */
		uid: number;
		GetType(): string { return 'Cmd.RequestChangeParentIdMatchGroupCmd_C'; }
	}
	/**
	 * 回应玩家绑定关系
	 */
	export class ReturnChangeParentIdMatchGroupCmd_CS {
		/**
		 * 上线玩家id
		 */
		uid: number;
		GetType(): string { return 'Cmd.ReturnChangeParentIdMatchGroupCmd_CS'; }
	}
	/**
	 * 包月续费
	 */
	export class RenewPayTimeMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RenewPayTimeMatchGroupCmd_C'; }
	}
	/**
	 * 改变匹配号属性
	 */
	export class RequestChangeMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 客户端请求类型（直接返回即可）不填或0表示原匹配号内请求修改匹配设置，1表示联盟内请求修改游戏玩法，2表示联盟内修改匹配设置，3表示联盟内请求修改匹配基金设置
		 */
		reqType: number;
		GetType(): string { return 'Cmd.RequestChangeMatchGroupCmd_C'; }
	}
	/**
	 * 改变匹配号属性
	 */
	export class ChangeMatchGroupCmd_C {
		/**
		 * 房间信息
		 */
		createRoom: Cmd.CreateRoomCmd_C;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单,3表示黄名单,4表示副群主
		 */
		type: number;
		/**
		 * 最小开局人数,到达人数就开始倒计时
		 */
		minNum: number;
		/**
		 * 最大开局人数,到达人数就直接匹配一桌
		 */
		maxNum: number;
		/**
		 * 是否需要授权,1表示需要
		 */
		needAgree: number;
		/**
		 * 匹配号到达基础人数后的倒计时,秒,0表示用不
		 */
		countDownSec: number;
		/**
		 * 匹配号的生存时间,秒,0表示用不
		 */
		lifeTimeSec: number;
		/**
		 * 匹配类型,空或0是常规模式,1是淘汰赛模式MatchGroupType
		 */
		matchType: number;
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 需要钻石
		 */
		needDiamond: number;
		/**
		 * 最多开房数
		 */
		maxRoomNum: number;
		/**
		 * 副管理员ID
		 */
		otherManagerId: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 是否公开数据
		 */
		public: number;
		/**
		 * 上下分
		 */
		minMatchPoint: number;
		/**
		 * 结算分钻比例,1分扣几钻
		 */
		scoreDiamond: number;
		/**
		 * 税收起收点
		 */
		taxMin: number;
		/**
		 * 税收百分百
		 */
		tax: number;
		/**
		 * 大赢家税收固定数字
		 */
		taxNum: number;
		/**
		 * 0表示匹配模式,1表示客家俱乐部模式,2表示茶馆(包厢)模式,3表示茶楼模式
		 */
		clubType: number;
		/**
		 * 提示绑定代理标志,1表示如果没有绑定就提示
		 */
		bindAgent: number;
		/**
		 * 客服微信
		 */
		wechat: string;
		/**
		 * 推荐返利
		 */
		taxReward: number;
		/**
		 * 抢庄分
		 */
		minBankerPoint: number;
		/**
		 * 1表示禁言
		 */
		forbiddenWords: number;
		/**
		 * 1表示可负分
		 */
		canNegative: number;
		/**
		 * 百分比扣费人数,不填或者0表示所有赢家,其他表示赢家的前几名
		 */
		taxUserNum: number;
		/**
		 * 最小进桌人数,1就相当于中途加入配置了
		 */
		minUserNum: number;
		/**
		 * 赢家上级返利比例
		 */
		tax1: number;
		/**
		 * 赢家上上级返利比例
		 */
		tax2: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 游戏里的1分等于多少基金,得有个兑换关系,默认是1:1
		 */
		exchange: number;
		/**
		 * 客户端请求类型（直接返回即可）不填或0表示原匹配号内请求修改匹配设置，1表示联盟内请求修改游戏玩法，2表示联盟内修改匹配设置，3表示联盟内请求修改匹配基金设置
		 */
		reqType: number;
		/**
		 * 基金低于这个数字将自动解散
		 */
		dissMatchPoint: number;
		/**
		 * 1分几朵花 -- 若存在该参数表示为红花房
		 */
		baseFlower: number;
		/**
		 * 进房最低下限
		 */
		lowerLimitFlower: number;
		/**
		 * 大赢家摘花时 玩家输赢分数下限 -- 若存在该参数表示为大赢家摘花
		 */
		winnerLimitScore: number;
		/**
		 * 大赢家摘花数 -- 若存在该参数表示为大赢家摘花
		 */
		winnerFlower: number;
		/**
		 * AA摘花数 -- 若存在该参数表示为AA摘花
		 */
		AAFlower: number;
		/**
		 * 加多个副管理员ID
		 */
		otherManagerId2: number;
		/**
		 * 大赢家的条件 如果存在该字段 则俱乐部中大赢家的统计需要玩家所赢分数大于该分数 才认为是大赢家
		 */
		winnerConditions: number;
		/**
		 * 管理员清理战绩 nil/1 默认管理员不可清除、管理员可清除
		 */
		masterClearRecord: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		/**
		 * 大赢家摘花类型 多种模式共存的大厅 通过前端指定摘花模式 nil/1/2 大于多少分摘多少花、每多少分摘多少花、阶梯摘花
		 */
		winnerFlowerType: number;
		/**
		 * 选阶梯摘花时的具体数值
		 */
		winnerFlowerLadder: Cmd.WinnerFlowerLadder[];
		/**
		 * 管理员操作摘送花 nil/0/1 默认不传兼容老数据可操作、不可操作、可操作
		 */
		masterOpFlower: number;
		GetType(): string { return 'Cmd.ChangeMatchGroupCmd_C'; }
	}
	/**
	 * 改变匹配号属性
	 */
	export class ChangeMatchGroupCmd_S {
		/**
		 * 房间信息
		 */
		createRoom: Cmd.CreateRoomCmd_C;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单,3表示黄名单,4表示副群主
		 */
		type: number;
		/**
		 * 最小开局人数,到达人数就开始倒计时
		 */
		minNum: number;
		/**
		 * 最大开局人数,到达人数就直接匹配一桌
		 */
		maxNum: number;
		/**
		 * 是否需要授权,1表示需要
		 */
		needAgree: number;
		/**
		 * 匹配号到达基础人数后的倒计时,秒,0表示用不
		 */
		countDownSec: number;
		/**
		 * 匹配号的生存时间,秒,0表示用不
		 */
		lifeTimeSec: number;
		/**
		 * 匹配类型,空或0是常规模式,1是淘汰赛模式MatchGroupType
		 */
		matchType: number;
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 需要钻石
		 */
		needDiamond: number;
		/**
		 * 最多开房数
		 */
		maxRoomNum: number;
		/**
		 * 副管理员ID
		 */
		otherManagerId: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 是否公开数据
		 */
		public: number;
		/**
		 * 上下分
		 */
		minMatchPoint: number;
		/**
		 * 结算分钻比例,1分扣几钻
		 */
		scoreDiamond: number;
		/**
		 * 税收起收点
		 */
		taxMin: number;
		/**
		 * 税收百分百
		 */
		tax: number;
		/**
		 * 大赢家税收固定数字
		 */
		taxNum: number;
		/**
		 * 金币转基金,只能创建是设定,中途不能修改
		 */
		gold2MatchPoint: number;
		/**
		 * 0表示匹配模式,1表示客家俱乐部模式,2表示茶馆(包厢)模式,3表示茶楼模式
		 */
		clubType: number;
		/**
		 * 提示绑定代理标志,1表示如果没有绑定就提示
		 */
		bindAgent: number;
		/**
		 * 客服微信
		 */
		wechat: string;
		/**
		 * 推荐返利
		 */
		taxReward: number;
		/**
		 * 抢庄分
		 */
		minBankerPoint: number;
		/**
		 * 1表示禁言
		 */
		forbiddenWords: number;
		/**
		 * 1表示可负分
		 */
		canNegative: number;
		/**
		 * 百分比扣费人数,不填或者0表示所有赢家,其他表示赢家的前几名
		 */
		taxUserNum: number;
		/**
		 * 最小进桌人数,1就相当于中途加入配置了
		 */
		minUserNum: number;
		/**
		 * 赢家上级返利比例
		 */
		tax1: number;
		/**
		 * 赢家上上级返利比例
		 */
		tax2: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 游戏里的1分等于多少基金,得有个兑换关系,默认是1:1
		 */
		exchange: number;
		/**
		 * 客户端请求类型（直接返回即可）不填或0表示原匹配号内请求修改匹配设置，1表示联盟内请求修改游戏玩法，2表示联盟内修改匹配设置，3表示联盟内请求修改匹配基金设置
		 */
		reqType: number;
		/**
		 * 基金低于这个数字将自动解散
		 */
		dissMatchPoint: number;
		/**
		 * 1分几朵花 -- 若存在该参数表示为红花房
		 */
		baseFlower: number;
		/**
		 * 进房最低下限
		 */
		lowerLimitFlower: number;
		/**
		 * 大赢家摘花时 玩家输赢分数下限 -- 若存在该参数表示为大赢家摘花
		 */
		winnerLimitScore: number;
		/**
		 * 大赢家摘花数 -- 若存在该参数表示为大赢家摘花
		 */
		winnerFlower: number;
		/**
		 * AA摘花数 -- 若存在该参数表示为AA摘花
		 */
		AAFlower: number;
		/**
		 * 加多个副管理员ID
		 */
		otherManagerId2: number;
		/**
		 * 单独新增个字段告诉前端 这个俱乐部是否初始化过红花了 1为已初始化
		 */
		hasInitFlower: number;
		/**
		 * 大赢家的条件 如果存在该字段 则俱乐部中大赢家的统计需要玩家所赢分数大于该分数 才认为是大赢家
		 */
		winnerConditions: number;
		/**
		 * 管理员清理战绩 nil/1 默认管理员不可清除、管理员可清除
		 */
		masterClearRecord: number;
		/**
		 * 大赢家摘花类型 多种模式共存的大厅 通过前端指定摘花模式 nil/1/2 大于多少分摘多少花、每多少分摘多少花、阶梯摘花
		 */
		winnerFlowerType: number;
		/**
		 * 选阶梯摘花时的具体数值
		 */
		winnerFlowerLadder: Cmd.WinnerFlowerLadder[];
		/**
		 * 管理员操作摘送花 nil/0/1 默认不传兼容老数据可操作、不可操作、可操作
		 */
		masterOpFlower: number;
		GetType(): string { return 'Cmd.ChangeMatchGroupCmd_S'; }
	}
	/**
	 * 服务器请求绑定代理,弹窗
	 */
	export class RequestBindAgentMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 代理id
		 */
		agentId: number;
		GetType(): string { return 'Cmd.RequestBindAgentMatchGroupCmd_S'; }
	}
	/**
	 * 请求绑定代理
	 */
	export class RequestBindAgentMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 代理id
		 */
		agentId: number;
		GetType(): string { return 'Cmd.RequestBindAgentMatchGroupCmd_C'; }
	}
	/**
	 * 匹配号内排行
	 */
	export class OrderListMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 不填或0表示今天,1表示昨天,2表示本月,3表示上月,4表示本周,5表示上周
		 */
		day: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.OrderListMatchGroupCmd_C'; }
	}
	export class OrderListMatch {
		uid: number;
		name: number;
		/**
		 * 积分
		 */
		score: number;
		/**
		 * 当天大赢次
		 */
		bigWinNum: number;
		/**
		 * 总上桌次数
		 */
		playNum: number;
		/**
		 * 头像url,茶馆要用
		 */
		headUrl: string;
		GetType(): string { return 'Cmd.OrderListMatch'; }
	}
	/**
	 * 匹配号内排行
	 */
	export class OrderListMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 成员信息
		 */
		list: OrderListMatch[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.OrderListMatchGroupCmd_S'; }
	}
	/**
	 * 请求参与玩家的列表
	 */
	export class PlayedListMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.PlayedListMatchGroupCmd_C'; }
	}
	/**
	 * 返回参与玩家的列表,里面包括了玩家的输赢清空,搞活动用
	 */
	export class PlayedListMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 成员信息
		 */
		list: Cmd.MatchGroupMemberInfo[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.PlayedListMatchGroupCmd_S'; }
	}
	/**
	 * 清空与玩家的列表 返回PlayedListMatchGroupCmd_S
	 */
	export class ClearPlayedListMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.ClearPlayedListMatchGroupCmd_C'; }
	}
	/**
	 * 请求提取俱乐部税收,每次都是一次性全部提取
	 */
	export class GetTaxMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.GetTaxMatchGroupCmd_C'; }
	}
	/**
	 * 设置俱乐部税收
	 */
	export class SetTaxMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 当前剩余未提取税收
		 */
		curTax: number;
		/**
		 * 当前剩余未提取税收
		 */
		allTax: number;
		/**
		 * 当前剩余未提取税收
		 */
		change: number;
		GetType(): string { return 'Cmd.SetTaxMatchGroupCmd_S'; }
	}
	/**
	 * 请求等待列表
	 */
	export class WaitUserListMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.WaitUserListMatchGroupCmd_C'; }
	}
	/**
	 * 请求等待列表
	 */
	export class WaitUserListMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 排队中的成员信息
		 */
		waitUserList: Cmd.MatchGroupMemberInfo[];
		/**
		 * 当前局数
		 */
		curGameNbr: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		GetType(): string { return 'Cmd.WaitUserListMatchGroupCmd_S'; }
	}
	/**
	 * 匹配开启倒计时
	 */
	export class StartCountDownMatchGroupCmd_Brd {
		/**
		 * 倒计时秒数
		 */
		sec: number;
		GetType(): string { return 'Cmd.StartCountDownMatchGroupCmd_Brd'; }
	}
	/**
	 * 创建匹配组返回
	 */
	export class CreateMatchGroupCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 自己创建的所有匹配号
		 */
		curMath: Cmd.MathGroup;
		/**
		 * 自己创建的所有匹配号
		 */
		matchIdList: number[];
		GetType(): string { return 'Cmd.CreateMatchGroupCmd_S'; }
	}
	/**
	 * 请求自己的所有匹配号,并且选中其中一个
	 */
	export class RequestMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 是否为俱乐部模式1：表示为俱乐部模式
		 */
		isClub: number;
		/**
		 * 获取指定楼层 -- sz新版俱乐部添加楼层 如果不传默认回最底层
		 */
		floorId: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.RequestMatchGroupCmd_C'; }
	}
	/**
	 * 返回自己的所有匹配号
	 */
	export class ReturnMatchGroupCmd_S {
		/**
		 * 当前匹配号数据
		 */
		curMath: Cmd.MathGroup;
		/**
		 * 自己创建的所有匹配号
		 */
		matchIdList: number[];
		/**
		 * 当前可用钻石
		 */
		diamond: number;
		/**
		 * 昨日钻石消耗
		 */
		diamondY: number;
		/**
		 * 今日钻石消耗
		 */
		diamondT: number;
		/**
		 * 所有其他匹配组详细
		 */
		list: Cmd.MathGroup[];
		/**
		 * 是否为俱乐部模式1：表示为俱乐部模式
		 */
		isClub: number;
		/**
		 * 前端用的
		 */
		isEnterRoom: number;
		/**
		 * 包月显示包月剩余分钟
		 */
		leftMin: number;
		/**
		 * 本月消耗
		 */
		diamondM: number;
		/**
		 * 本月最大需求钻石数量
		 */
		diamondMNeed: number;
		/**
		 * 是否显示刮刮乐 -- 当前只有漳州有
		 */
		isShowScratch: number;
		/**
		 * 茶楼列表
		 */
		clubType3List: number[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 漳州暂时需要辨别玩家是否当前首次进自己的俱乐部 1表示首次进入
		 */
		isFirst: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.ReturnMatchGroupCmd_S'; }
	}
	/**
	 * 请求俱乐部战绩
	 */
	export class RequestMatchGroupRoomListCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 传查询日期的00:00的时间戳过来
		 */
		date: number;
		/**
		 * 查询玩家id
		 */
		query_uid: number;
		/**
		 * 查询第几页的数据
		 */
		curPage: number;
		/**
		 * 一页多少条数据
		 */
		perPage: number;
		GetType(): string { return 'Cmd.RequestMatchGroupRoomListCmd_C'; }
	}
	/**
	 * 返回俱乐部战绩
	 */
	export class ReturnMatchGroupRoomListCmd_S {
		/**
		 * 俱乐部
		 */
		roomList: Cmd.MathGroupRoomInfo[];
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 查询日期的00:00的时间戳
		 */
		date: number;
		/**
		 * 查询玩家id
		 */
		query_uid: number;
		/**
		 * 查询第几页的数据
		 */
		curPage: number;
		/**
		 * 一页多少条数据
		 */
		perPage: number;
		/**
		 * 是否还有下一页1是 0否
		 */
		hasNextPage: number;
		GetType(): string { return 'Cmd.ReturnMatchGroupRoomListCmd_S'; }
	}
	/**
	 * 导出战绩
	 */
	export class ExportHistoryMatchGroupCmd_C {
		fromMatchId: number;
		toMatchId: number;
		/**
		 * 1表示清空原战绩
		 */
		clearType: number;
		GetType(): string { return 'Cmd.ExportHistoryMatchGroupCmd_C'; }
	}
	export class FloorCost {
		/**
		 * 楼层id
		 */
		floorId: number;
		/**
		 * 消耗钻石
		 */
		allcost: number;
		/**
		 * 房间数量
		 */
		roomnum: number;
		GetType(): string { return 'Cmd.FloorCost'; }
	}
	/**
	 * 消耗数据
	 */
	export class MatchGroupRoomCost {
		/**
		 * 消耗数据
		 */
		costlist: MatchGroupRoomDateCost[];
		GetType(): string { return 'Cmd.MatchGroupRoomCost'; }
	}
	export class MatchGroupRoomDateCost {
		date: number;
		floor_list: FloorCost[];
		GetType(): string { return 'Cmd.MatchGroupRoomDateCost'; }
	}
	/**
	 * 俱乐部消耗
	 */
	export class RequestMatchGroupRoomCostListCmd_CS {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 消耗数据
		 */
		allcost: MatchGroupRoomCost;
		GetType(): string { return 'Cmd.RequestMatchGroupRoomCostListCmd_CS'; }
	}
	/**
	 * 请求匹配号战绩
	 */
	export class HistoryMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.HistoryMatchGroupCmd_C'; }
	}
	/**
	 * 返回匹配号战绩
	 */
	export class HistoryMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 本匹配号所产生的所有房间号
		 */
		roomList: Cmd.MathGroupRoomInfo[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.HistoryMatchGroupCmd_S'; }
	}
	/**
	 * 请求黑白名单
	 */
	export class RequestMemberInfoMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 请求类型 暂时只填充1  屏蔽(统计+黑名单+游客)
		 */
		typ: number;
		/**
		 * 查询日期
		 */
		date: number;
		/**
		 * 查询楼层
		 */
		floors: number[];
		/**
		 * 查询玩家
		 */
		uid: number;
		/**
		 * 第几页
		 */
		curPage: number;
		GetType(): string { return 'Cmd.RequestMemberInfoMatchGroupCmd_C'; }
	}
	/**
	 * 返回黑白名单
	 */
	export class ReturnMemberInfoMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		whitelist: Cmd.MatchGroupMemberInfo[];
		blacklist: Cmd.MatchGroupMemberInfo[];
		guestlist: Cmd.MatchGroupMemberInfo[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 请求类型 暂时只填充1  屏蔽(统计+黑名单+游客)
		 */
		typ: number;
		/**
		 * 查询日期
		 */
		date: number;
		/**
		 * 查询楼层
		 */
		floors: number[];
		/**
		 * 查询玩家
		 */
		uid: number;
		/**
		 * 选定楼层的俱乐部总局数
		 */
		club_round_num: number;
		/**
		 * 选定楼层的俱乐部总房数
		 */
		club_room_num: number;
		/**
		 * 选定楼层的俱乐部历史总局数
		 */
		club_his_round_num: number;
		/**
		 * 选定楼层的俱乐部历史总房数
		 */
		club_his_room_num: number;
		/**
		 * 俱乐部玩家数
		 */
		club_user_num: number;
		/**
		 * 第几页
		 */
		curPage: number;
		/**
		 * 最大页数
		 */
		maxPage: number;
		GetType(): string { return 'Cmd.ReturnMemberInfoMatchGroupCmd_S'; }
	}
	/**
	 * 返回小黑屋的数据
	 */
	export class ReturnDarkMemberInfoMatchGroupCmd_S {
		/**
		 * 小黑屋id
		 */
		dark_id: number;
		/**
		 * 小黑屋内的玩家信息
		 */
		user_list: Cmd.MatchGroupMemberInfo[];
		/**
		 * 操作类型 0查询小黑屋数据 1加入小黑屋 2踢出小黑屋
		 */
		op_type: number;
		GetType(): string { return 'Cmd.ReturnDarkMemberInfoMatchGroupCmd_S'; }
	}
	/**
	 * 返回一个玩家的数据
	 */
	export class ReturnOneMemberInfoMatchGroupCmd_S {
		/**
		 * 玩家信息
		 */
		userinfo: Cmd.MatchGroupMemberInfo;
		GetType(): string { return 'Cmd.ReturnOneMemberInfoMatchGroupCmd_S'; }
	}
	/**
	 * 请求终止匹配号
	 */
	export class OperateMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 状态,0表示正常,1表示停止进人(终止)
		 */
		state: number;
		/**
		 * 1表示清空原战绩
		 */
		clearType: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.OperateMatchGroupCmd_C'; }
	}
	/**
	 * 请求删除匹配号
	 */
	export class RequestDeleteMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.RequestDeleteMatchGroupCmd_C'; }
	}
	/**
	 * 请求删除某匹配号战绩
	 */
	export class RequestDelHistoryMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 房间号
		 */
		roomId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.RequestDelHistoryMatchGroupCmd_C'; }
	}
	/**
	 * 回应删除某匹配号战绩
	 */
	export class ReturnDelHistoryMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 房间号
		 */
		roomId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.ReturnDelHistoryMatchGroupCmd_S'; }
	}
	/**
	 * 申请游客模式切换
	 */
	export class ChangeMatchTypeMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单
		 */
		type: number;
		GetType(): string { return 'Cmd.ChangeMatchTypeMatchGroupCmd_C'; }
	}
	/**
	 * 玩家主动申请加入白名单
	 */
	export class RequestJoinMemberMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestJoinMemberMatchGroupCmd_C'; }
	}
	/**
	 * 刷新某个成员信息
	 */
	export class RefreshMemberInfoMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		member: Cmd.MatchGroupMemberInfo;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.RefreshMemberInfoMatchGroupCmd_S'; }
	}
	/**
	 * 申请白名单消息列表,玩家请求后主动推给匹配主
	 */
	export class JoinMemberListMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		list: Cmd.MatchGroupMemberInfo[];
		/**
		 * 是否为俱乐部模式1：表示为俱乐部模式
		 */
		isClub: number;
		GetType(): string { return 'Cmd.JoinMemberListMatchGroupCmd_S'; }
	}
	/**
	 * 有玩家申请加入时给匹配主一个弹窗,返回ReplyJoinMemberListMatchGroupCmd_C
	 */
	export class RequestJoinMemberMatchGroupCmd_S {
		matchId: number;
		uid: number;
		nickname: string;
		/**
		 * 服务器间用
		 */
		ownerid: number;
		/**
		 * 微信联系方式
		 */
		wechat: string;
		/**
		 * 备注
		 */
		note: string;
		GetType(): string { return 'Cmd.RequestJoinMemberMatchGroupCmd_S'; }
	}
	/**
	 * 匹配主,回应申请白名单消息列表
	 */
	export class ReplyJoinMemberListMatchGroupCmd_C {
		matchId: number;
		uid: number;
		/**
		 * 0表示拒绝,1表示同意,2表示白名单,3表示黑名单
		 */
		reply: number;
		/**
		 * 服务器间用
		 */
		ownerid: number;
		/**
		 * 微信联系方式
		 */
		wechat: string;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 允许批量操作
		 */
		uids: number[];
		/**
		 * sz大联盟内容:是否准入 0/1 拒绝、允许
		 */
		leaguePermission: number;
		GetType(): string { return 'Cmd.ReplyJoinMemberListMatchGroupCmd_C'; }
	}
	/**
	 * 匹配主,清楚合伙人统计相关数据
	 */
	export class ClearPartnerRecordDataMatchGroupCmd_C {
		/**
		 * 俱乐部id
		 */
		matchId: number;
		/**
		 * 合伙人uid
		 */
		partnerUid: number;
		/**
		 * 楼层id
		 */
		floorId: number;
		/**
		 * 1:今天 2:昨天 3:前天
		 */
		which: number;
		GetType(): string { return 'Cmd.ClearPartnerRecordDataMatchGroupCmd_C'; }
	}
	/**
	 * 匹配主,清楚玩家数据
	 */
	export class ClearChoseUserClubDataCmd_C {
		/**
		 * 俱乐部id
		 */
		matchId: number;
		/**
		 * 被清除玩家id
		 */
		cl_uid: number;
		/**
		 * 被清除日期
		 */
		cl_date: number;
		/**
		 * 被清除楼层
		 */
		cl_floorids: number[];
		/**
		 * 第几页
		 */
		curPage: number;
		GetType(): string { return 'Cmd.ClearChoseUserClubDataCmd_C'; }
	}
	/**
	 * 匹配主,小黑屋操作
	 */
	export class OperatedClubDark_C {
		/**
		 * 俱乐部id
		 */
		matchId: number;
		/**
		 * 小黑屋id
		 */
		dark_id: number;
		/**
		 * 被操作玩家id 查询是可不传
		 */
		be_operated_uid: number;
		/**
		 * 操作类型 0查询小黑屋数据 1加入小黑屋 2踢出小黑屋
		 */
		op_type: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.OperatedClubDark_C'; }
	}
	/**
	 * 匹配主,查询玩家数据
	 */
	export class QueryOneMemberInfo_C {
		/**
		 * 俱乐部id
		 */
		matchId: number;
		/**
		 * 被查询玩家id
		 */
		query_uid: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.QueryOneMemberInfo_C'; }
	}
	/**
	 * 匹配主,请求黑白名单操作
	 */
	export class OperateMemberListMatchGroupCmd_C {
		uid: number;
		/**
		 * 0表示删除,1表示黑白名单互转,2表示添加白名单,3表示添加黑名单,4表示添加副群主
		 */
		reply: number;
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 允许批量操作
		 */
		uids: number[];
		/**
		 * 添加个操作类型 用于区分在哪里触发该操作 nil/1 默认老流程、闽南漳州大厅把该操作移到玩家个人信息中
		 */
		opType: number;
		GetType(): string { return 'Cmd.OperateMemberListMatchGroupCmd_C'; }
	}
	export class OperateMemberListMatchGroupCmd_S {
		uid: number;
		matchId: number;
		/**
		 * 当前黑白名单状态 0/1/2 游客、白名单、黑名单
		 */
		state: number;
		GetType(): string { return 'Cmd.OperateMemberListMatchGroupCmd_S'; }
	}
	/**
	 * 匹配主,请求黄名单操作
	 */
	export class SetVipMemberListMatchGroupCmd_C {
		uid: number;
		/**
		 * 0表示取消vip,1表示设置vip
		 */
		vip: number;
		matchId: number;
		GetType(): string { return 'Cmd.SetVipMemberListMatchGroupCmd_C'; }
	}
	/**
	 * 匹配主,请求黄名单操作
	 */
	export class OperateYellowMemberListMatchGroupCmd_C {
		uid: number;
		uid2: number;
		/**
		 * 0表示删除,1表示添加
		 */
		reply: number;
		matchId: number;
		GetType(): string { return 'Cmd.OperateYellowMemberListMatchGroupCmd_C'; }
	}
	/**
	 * 请求黄名单
	 */
	export class RequestYellowMemberInfoMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestYellowMemberInfoMatchGroupCmd_C'; }
	}
	/**
	 * 导入白名单
	 */
	export class ImportWhiteListMatchGroupCmd_C {
		fromMatchId: number;
		toMatchId: number;
		GetType(): string { return 'Cmd.ImportWhiteListMatchGroupCmd_C'; }
	}
	/**
	 * 更换匹配主主人,转让
	 */
	export class ChangeOwnerMatchGroupCmd_C {
		matchId: number;
		uid: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.ChangeOwnerMatchGroupCmd_C'; }
	}
	export class YellowMemberInfo {
		uid: number;
		nickName: string;
		uid2: number;
		nickName2: string;
		GetType(): string { return 'Cmd.YellowMemberInfo'; }
	}
	/**
	 * 返回黄名单
	 */
	export class ReturnYellowMemberInfoMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 黄名单列表
		 */
		list: YellowMemberInfo[];
		GetType(): string { return 'Cmd.ReturnYellowMemberInfoMatchGroupCmd_S'; }
	}
	/**
	 * 请求离开匹配组(深圳这边其实已经屏蔽掉了匹配等待的时间，所以不会出现这个协议)
	 */
	export class LeaveMatchGroupCmd_C {
		GetType(): string { return 'Cmd.LeaveMatchGroupCmd_C'; }
	}
	/**
	 * 离开匹配组返回
	 */
	export class LeaveMatchGroupCmd_S {
		GetType(): string { return 'Cmd.LeaveMatchGroupCmd_S'; }
	}
	/**
	 * 离开匹配组返回广播
	 */
	export class LeaveMatchGroupCmd_Brd {
		uid: number;
		GetType(): string { return 'Cmd.LeaveMatchGroupCmd_Brd'; }
	}
	/**
	 * 请求离开俱乐部(这个离开 实际上是指 玩家不想存在于该俱乐部的黑白黄名单中 感觉一股深深的不靠谱)
	 */
	export class LeaveMatchGroup2Cmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.LeaveMatchGroup2Cmd_C'; }
	}
	/**
	 * 离开匹配组返回
	 */
	export class LeaveMatchGroup2Cmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.LeaveMatchGroup2Cmd_S'; }
	}
	/**
	 * 普通玩家请求茶馆里的房间
	 */
	export class RequestRoomMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RequestRoomMatchGroupCmd_C'; }
	}
	/**
	 * 清除当前选中的匹配号,茶馆用,这样可以兼容冗余通知
	 */
	export class ClearCurMatchGroupCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		GetType(): string { return 'Cmd.ClearCurMatchGroupCmd_C'; }
	}
	/**
	 * 茶馆里的房间结束后需要通知当时大厅的所有人
	 */
	export class RoomDestroyMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 房间号
		 */
		roomId: number;
		GetType(): string { return 'Cmd.RoomDestroyMatchGroupCmd_S'; }
	}
	/**
	 * 茶馆里的房间状态变化
	 */
	export class RoomStateMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 房间号
		 */
		roomId: number;
		/**
		 * 虚拟房间号id
		 */
		deskId: number;
		/**
		 * 不填或0表示准备中,1表示已开局,2表示已结束,3表示删除
		 */
		state: number;
		/**
		 * 客户端判断类型用
		 */
		gameId: number;
		GetType(): string { return 'Cmd.RoomStateMatchGroupCmd_S'; }
	}
	/**
	 * 普通玩家请求茶馆里的房间返回
	 */
	export class ReturnRoomMatchGroupCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 本匹配号所产生的所有房间号
		 */
		roomList: Cmd.MathGroupRoomInfo[];
		/**
		 * 0：没加入桌子权限 ， 1：正在申请。 2：获得加入权限
		 */
		state: number;
		nickName: string;
		ownerid: number;
		/**
		 * 分享数据,ActiveCreateRoomCmd_C时用,山寨下
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * 最大房间内人数
		 */
		userNbr: number;
		/**
		 * 房间最大局数
		 */
		gameNbr: number;
		/**
		 * 跟进gameId判断茶馆类型
		 */
		gameId: number;
		/**
		 * 是否自动进入类型1表示自动进入
		 */
		autoInto: number;
		/**
		 * 群主微信,用来复制用
		 */
		wechat: string;
		/**
		 * 匹配号的名字
		 */
		matchName: string;
		/**
		 * 匹配分（自己当前在匹配号中的积分）
		 */
		matchPoint: number;
		/**
		 * 茶楼列表,群主开的所有茶楼列表,空表示没有,兼容所有老业务
		 */
		matchIdList: number[];
		/**
		 * 不填或0表示普通成员,1副群主,2表示下级代理,3表示大盟主副管理,4表示大联盟主
		 */
		title: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 联盟内楼层列表,与matchIdList兼容,但是多了名字发送,方便客户端显示
		 */
		teahouseList: MatchGroupInfo[];
		/**
		 * 1表示需要选座
		 */
		selectSeat: number;
		/**
		 * 房费类型
		 */
		payType: number;
		GetType(): string { return 'Cmd.ReturnRoomMatchGroupCmd_S'; }
	}
	/**
	 * 请求进入匹配组
	 */
	export class EnterMatchGroupCmd_C {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 進入房间需要带上lobbyId（指定房間id可能不是該大廳的）
		 */
		lobbyId: number;
		/**
		 * 房间id,如果不填就排队,填了直接进入,茶馆用,不填表示非茶馆模式,1表示新建房间,其他填房间号
		 */
		roomId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 如果有换坐功能,需要指定位置
		 */
		pos: number;
		GetType(): string { return 'Cmd.EnterMatchGroupCmd_C'; }
	}
	/**
	 * 请求进入匹配组返回
	 */
	export class EnterMatchGroupCmd_S {
		/**
		 * 返回码 存在返回码则是有误
		 */
		resultCode: number;
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 分享数据
		 */
		shareInfo: Cmd.ShareInfo;
		/**
		 * gameGatewayUrl,尽量让玩家跟房主一个url,防止被攻击
		 */
		url: string;
		/**
		 * 匹配组主人ID
		 */
		ownerid: number;
		/**
		 * 匹配组主人名称
		 */
		ownername: string;
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: Cmd.MatchGroupMemberInfo[];
		/**
		 * 离上一桌匹配成功的时间间隔
		 */
		lastStartSec: number;
		/**
		 * 红包雨倒计时
		 */
		leftRedPackSec: number;
		/**
		 * 游戏人数
		 */
		gameingUserNum: number;
		/**
		 * 总局数
		 */
		gameNbr: number;
		/**
		 * 当前局数
		 */
		curGameNbr: number;
		/**
		 * 匹配号名称
		 */
		matchName: string;
		/**
		 * 匹配好客服微信
		 */
		wechat: string;
		/**
		 * 匹配分（自己当前在匹配号中的积分）
		 */
		matchPoint: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 1表示需要选座
		 */
		selectSeat: number;
		GetType(): string { return 'Cmd.EnterMatchGroupCmd_S'; }
	}
	/**
	 * 分数
	 */
	export class ScoreItem {
		uid: number;
		score: number;
		GetType(): string { return 'Cmd.ScoreItem'; }
	}
	/**
	 * 当前局数刷新
	 */
	export class CurGameNbrMatchGroupCmd_S {
		/**
		 * 总局数
		 */
		roomId: number;
		/**
		 * 当前局数
		 */
		nbr: number;
		/**
		 * 分数
		 */
		list: ScoreItem[];
		GetType(): string { return 'Cmd.CurGameNbrMatchGroupCmd_S'; }
	}
	/**
	 * 广播匹配组成员
	 */
	export class EnterMatchGroupCmd_Brd {
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		info: Cmd.MatchGroupMemberInfo;
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: Cmd.MatchGroupMemberInfo[];
		/**
		 * 分享数据,为了改变人数,这里冗余下
		 */
		shareInfo: Cmd.ShareInfo;
		GetType(): string { return 'Cmd.EnterMatchGroupCmd_Brd'; }
	}
	/**
	 * 匹配组信息
	 */
	export class MatchGroupInfo {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 匹配号主人名字
		 */
		ownerName: string;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 当前参与活动人数
		 */
		curUserNbr: number;
		/**
		 * 微信联系方式
		 */
		wechat: string;
		/**
		 * 上下分
		 */
		matchPoint: number;
		/**
		 * 底注
		 */
		bottomPoint: number;
		/**
		 * 入场
		 */
		enteringPoint: number;
		/**
		 * 离场
		 */
		leavingPoint: number;
		/**
		 * 匹配组主人ID
		 */
		ownerid: number;
		/**
		 * 加个描述
		 */
		tips: string;
		/**
		 * 主人拥有的金豆数量
		 */
		chips: number;
		/**
		 * 该匹配号对应的游戏
		 */
		gameId: number;
		/**
		 * 房间人数
		 */
		userNbr: number;
		/**
		 * 等待的房间数
		 */
		waitRoomNbr: number;
		/**
		 * 开始的房间数
		 */
		startRoomNbr: number;
		/**
		 * 匹配号主人头像
		 */
		ownerHeadUrl: string;
		/**
		 * 该匹配号对应的游戏局数
		 */
		gameNbr: number;
		/**
		 * 客户端数组索引排序使用
		 */
		index: number;
		/**
		 * 是否为最新房间 1表示是
		 */
		isNew: number;
		/**
		 * 是否有未处理的消息 1表示有
		 */
		noHandle: number;
		/**
		 * 赛事Id,只有自建赛事会发,官方赛事不发
		 */
		eventId: number;
		/**
		 * 该匹配号对应的游戏名称
		 */
		gameName: string;
		/**
		 * 游戏中的玩家人数
		 */
		gameingUserNum: number;
		GetType(): string { return 'Cmd.MatchGroupInfo'; }
	}
	/**
	 * 请求所有加入过的俱乐部
	 */
	export class HistoryClubListMatchGroupCmd_C {
		GetType(): string { return 'Cmd.HistoryClubListMatchGroupCmd_C'; }
	}
	/**
	 * 返回进入过的历史匹配组列表
	 */
	export class HistoryClubListMatchGroupCmd_S {
		/**
		 * 匹配组摘要信息
		 */
		infolist: MatchGroupInfo[];
		/**
		 * 匹配组详细
		 */
		detaillist: Cmd.MathGroup[];
		GetType(): string { return 'Cmd.HistoryClubListMatchGroupCmd_S'; }
	}
	/**
	 * 请求删除进入过的历史匹配组列表
	 */
	export class DelHistoryMatchIdMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 为1 时表示退出匹配
		 */
		leave: number;
		GetType(): string { return 'Cmd.DelHistoryMatchIdMatchGroupCmd_C'; }
	}
	/**
	 * 请求进入过的历史匹配组列表
	 */
	export class HistoryMatchIdListMatchGroupCmd_C {
		/**
		 * 是否为俱乐部模式1：表示为俱乐部模式
		 */
		isClub: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.HistoryMatchIdListMatchGroupCmd_C'; }
	}
	/**
	 * 返回进入过的历史匹配组列表
	 */
	export class HistoryMatchIdListMatchGroupCmd_S {
		/**
		 * 匹配组列表
		 */
		list: MatchGroupInfo[];
		/**
		 * 是否为俱乐部模式1：表示为俱乐部模式
		 */
		isClub: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.HistoryMatchIdListMatchGroupCmd_S'; }
	}
	/**
	 * 请求添加匹配组列表
	 */
	export class RequestAddPublicMatchIdMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 微信号
		 */
		wechat: string;
		/**
		 * 加个描述
		 */
		tips: string;
		/**
		 * 不填或者1是传统匹配号,2是金豆匹配号
		 */
		typ: number;
		GetType(): string { return 'Cmd.RequestAddPublicMatchIdMatchGroupCmd_C'; }
	}
	/**
	 * 请求删除匹配组列表
	 */
	export class RequestRemovePublicMatchIdMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 不填或者1是传统匹配号,2是金豆匹配号
		 */
		typ: number;
		GetType(): string { return 'Cmd.RequestRemovePublicMatchIdMatchGroupCmd_C'; }
	}
	/**
	 * 请求官方匹配组列表
	 */
	export class PublicMatchIdListMatchGroupCmd_C {
		/**
		 * 不填或者1是传统匹配号,2是金豆匹配号
		 */
		typ: number;
		GetType(): string { return 'Cmd.PublicMatchIdListMatchGroupCmd_C'; }
	}
	/**
	 * 官方匹配组列表
	 */
	export class PublicMatchIdListMatchGroupCmd_S {
		/**
		 * 匹配组列表
		 */
		list: MatchGroupInfo[];
		/**
		 * 不填或者1是传统匹配号,2是金豆匹配号
		 */
		typ: number;
		GetType(): string { return 'Cmd.PublicMatchIdListMatchGroupCmd_S'; }
	}
	/**
	 * 请求添加冠名赛--等待未完成
	 */
	export class RequestAddOfficialMatchIdMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 微信号
		 */
		wechat: string;
		GetType(): string { return 'Cmd.RequestAddOfficialMatchIdMatchGroupCmd_C'; }
	}
	/**
	 * 请求冠名赛列表
	 */
	export class OfficialMatchIdListMatchGroupCmd_C {
		GetType(): string { return 'Cmd.OfficialMatchIdListMatchGroupCmd_C'; }
	}
	/**
	 * 冠名赛列表
	 */
	export class OfficialMatchIdListMatchGroupCmd_S {
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: MatchGroupInfo[];
		GetType(): string { return 'Cmd.OfficialMatchIdListMatchGroupCmd_S'; }
	}
	/**
	 * 刷新匹配组信息
	 */
	export class RefreshMatchGroupCmd_Brd {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 剩余开局秒数,0表示还未开始倒计时
		 */
		leftTime: number;
		/**
		 * 当前排队人数
		 */
		curNum: number;
		/**
		 * 最大排队人数
		 */
		maxNum: number;
		/**
		 * 把自己广播给其他成员,包括自己
		 */
		list: Cmd.MatchGroupMemberInfo[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.RefreshMatchGroupCmd_Brd'; }
	}
	/**
	 * 匹配号奖励查询
	 */
	export class TaxRewardMatchRoomCmd_C {
		matchId: number;
		/**
		 * 群主可以查某个玩家的,以后用
		 */
		uid: number;
		GetType(): string { return 'Cmd.TaxRewardMatchRoomCmd_C'; }
	}
	export class MatchTaxReward {
		uid: number;
		name: string;
		/**
		 * 昨日奖励
		 */
		rewardY: number;
		/**
		 * 今日奖励
		 */
		rewardT: number;
		/**
		 * 总奖励
		 */
		all: number;
		GetType(): string { return 'Cmd.MatchTaxReward'; }
	}
	/**
	 * 匹配号奖励查询返回
	 */
	export class TaxRewardMatchRoomCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		list: MatchTaxReward[];
		/**
		 * 主人id
		 */
		puid: number;
		GetType(): string { return 'Cmd.TaxRewardMatchRoomCmd_S'; }
	}
	/**
	 * 重置某个玩家的推广奖励
	 */
	export class ResetTaxRewardMatchRoomCmd_C {
		matchId: number;
		/**
		 * 不填或0表示清除所有
		 */
		uid: number;
		GetType(): string { return 'Cmd.ResetTaxRewardMatchRoomCmd_C'; }
	}
	/**
	 * 玩家是否同意操作者的捐献需求
	 */
	export class AgreeDonateChipsToUserMatchRoomCmd_CS {
		/**
		 * 操作者id
		 */
		uid: number;
		/**
		 * 增量,为正数
		 */
		add: number;
		matchId: number;
		/**
		 * 1表示同意
		 */
		agree: number;
		/**
		 * 操作者昵称,方便客户端显示
		 */
		name: number;
		GetType(): string { return 'Cmd.AgreeDonateChipsToUserMatchRoomCmd_CS'; }
	}
	/**
	 * 请求捐献金币给玩家
	 */
	export class DonateChipsToUserMatchRoomCmd_C {
		uid: number;
		/**
		 * 增量
		 */
		add: number;
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.DonateChipsToUserMatchRoomCmd_C'; }
	}
	/**
	 * 请求捐献金币给主人
	 */
	export class DonateChipsToOwnerMatchRoomCmd_C {
		/**
		 * 增量
		 */
		add: number;
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.DonateChipsToOwnerMatchRoomCmd_C'; }
	}
	/**
	 * 请求捐献操作者汇总信息
	 */
	export class DonateHistorySummaryMatchRoomCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.DonateHistorySummaryMatchRoomCmd_C'; }
	}
	export class DonateHistorySummary {
		uid: number;
		nickName: string;
		/**
		 * 今日
		 */
		donateT: number;
		/**
		 * 昨日
		 */
		donateY: number;
		/**
		 * 本周
		 */
		donateWT: number;
		/**
		 * 上周
		 */
		donateWY: number;
		/**
		 * 总
		 */
		all: number;
		GetType(): string { return 'Cmd.DonateHistorySummary'; }
	}
	/**
	 * 请求捐献操作者汇总信息
	 */
	export class DonateHistorySummaryMatchRoomCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		list: DonateHistorySummary[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.DonateHistorySummaryMatchRoomCmd_S'; }
	}
	/**
	 * 请求捐献历史
	 */
	export class DonateHistoryMatchRoomCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 群主可以查某个玩家的
		 */
		uid: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.DonateHistoryMatchRoomCmd_C'; }
	}
	export class DonateHistory {
		uid: number;
		nickName: string;
		/**
		 * 操作时间
		 */
		time: number;
		/**
		 * 当前变化量
		 */
		change: number;
		/**
		 * 总贡献量
		 */
		all: number;
		/**
		 * 类型,不填或者0:赠送体力,1:获得体力,2:下体力获得,3:被下体力减少
		 */
		typ: number;
		GetType(): string { return 'Cmd.DonateHistory'; }
	}
	/**
	 * 返回请求捐献历史
	 */
	export class DonateHistoryMatchRoomCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		list: DonateHistory[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.DonateHistoryMatchRoomCmd_S'; }
	}
	/**
	 * 请求游戏基金变动历史
	 */
	export class GameMatchPointHistoryMatchRoomCmd_C {
		/**
		 * 匹配号
		 */
		matchId: number;
		/**
		 * 群主可以查某个玩家的
		 */
		uid: number;
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.GameMatchPointHistoryMatchRoomCmd_C'; }
	}
	/**
	 * 游戏输赢变动
	 */
	export class GameMatchPointHistory {
		roomid: number;
		/**
		 * 操作时间
		 */
		time: number;
		/**
		 * 当前变化量
		 */
		change: number;
		GetType(): string { return 'Cmd.GameMatchPointHistory'; }
	}
	/**
	 * 返回请求捐献历史
	 */
	export class GameMatchPointHistoryMatchRoomCmd_S {
		/**
		 * 匹配号
		 */
		matchId: number;
		list: GameMatchPointHistory[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		GetType(): string { return 'Cmd.GameMatchPointHistoryMatchRoomCmd_S'; }
	}
	/**
	 * 俱乐部公告
	 */
	export class ClubNoticeMatchGroupCmd_CS {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 内容
		 */
		content: string;
		/**
		 * 是否可以修改 1:可以 0:不可以
		 */
		bUpdate: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		/**
		 * 根据返回码，确定公告是否修改成功
		 */
		retCode: number;
		GetType(): string { return 'Cmd.ClubNoticeMatchGroupCmd_CS'; }
	}
	/**
	 * 操作楼层
	 */
	export class OperateFloorMatchGroupCmd_CS {
		/**
		 * 匹配号id
		 */
		matchId: number;
		/**
		 * 楼层id
		 */
		floorId: number;
		/**
		 * 操作类型 1、2、3、4  新增、请求获取指定楼层当前玩法详情信息、修改、删除
		 */
		opType: number;
		/**
		 * 创建房间相关数据
		 */
		createRoom: Cmd.CreateRoomCmd_C;
		/**
		 * 1分几朵花 -- 若存在该参数表示为红花房
		 */
		baseFlower: number;
		/**
		 * 进房最低下限
		 */
		lowerLimitFlower: number;
		/**
		 * 大赢家摘花时 玩家输赢分数下限 -- 若存在该参数表示为大赢家摘花
		 */
		winnerLimitScore: number;
		/**
		 * 大赢家摘花数 -- 若存在该参数表示为大赢家摘花
		 */
		winnerFlower: number;
		/**
		 * AA摘花数 -- 若存在该参数表示为AA摘花
		 */
		AAFlower: number;
		/**
		 * 大赢家摘花类型 多种模式共存的大厅 通过前端指定摘花模式 nil/1/2 大于多少分摘多少花、每多少分摘多少花、阶梯摘花
		 */
		winnerFlowerType: number;
		/**
		 * 选阶梯摘花时的具体数值
		 */
		winnerFlowerLadder: Cmd.WinnerFlowerLadder[];
		/**
		 * 返回码 存在返回码则是有误 操作成功了 该协议不回复 直接回复有用协议
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.OperateFloorMatchGroupCmd_CS'; }
	}
	/**
	 * 退出俱乐部界面
	 */
	export class ExitMatchGroupCmd_C {
		GetType(): string { return 'Cmd.ExitMatchGroupCmd_C'; }
	}
	/**
	 * 广播当前桌子最新状况
	 */
	export class LatestMatchRoomInfoGroupCmd_Brd {
		/**
		 * 当前匹配号数据 -- 里面只填充 matchId+floorId+roomList
		 */
		curMath: Cmd.MathGroup;
		GetType(): string { return 'Cmd.LatestMatchRoomInfoGroupCmd_Brd'; }
	}
	/**
	 * 请求最近进入过匹配号的人
	 */
	export class RecentVisitListMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		GetType(): string { return 'Cmd.RecentVisitListMatchGroupCmd_C'; }
	}
	/**
	 * 返回最近进入过匹配号的人
	 */
	export class RecentVisitListMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 成员信息
		 */
		list: Cmd.MatchGroupMemberInfo[];
		GetType(): string { return 'Cmd.RecentVisitListMatchGroupCmd_S'; }
	}
	/**
	 * 红花变动
	 */
	export class FlowerChange {
		uid: number;
		flower: number;
		GetType(): string { return 'Cmd.FlowerChange'; }
	}
	/**
	 *  送花、摘花 操作
	 *  有三种填充方式：
	 *  1、操作指定待处理记录 需要填充 matchId,opType,recordId
	 *  2、主动赠送、主动摘取 需要填充 matchId,opType,toUid,nbr
	 *  3、结算界面点击赠送   需要填充 matchId,opType,globalRoomId
	 */
	export class OperateFlowerMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 操作类型 1/2/3/4 主动赠送、主动摘取、操作待处理、结算界面赠送
		 */
		opType: number;
		/**
		 * 待处理记录id 单独赠送则不填 -- 若填了该字段则赠送数量、赠送对象 以待处理记录中的为准
		 */
		recordId: string;
		/**
		 * 对象id
		 */
		toUid: number;
		/**
		 * 数量
		 */
		nbr: number;
		/**
		 * 房间id
		 */
		globalRoomId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.OperateFlowerMatchGroupCmd_CS'; }
	}
	export class OperateFlowerMatchGroupBCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 操作类型 1/2/3/4 主动赠送、主动摘取、操作待处理、结算界面赠送
		 */
		opType: number;
		/**
		 * 待处理记录id 单独赠送则不填 -- 若填了该字段则赠送数量、赠送对象 以待处理记录中的为准
		 */
		recordId: string;
		/**
		 * 对象id
		 */
		toUid: number;
		/**
		 * 数量
		 */
		nbr: number;
		/**
		 * 房间id
		 */
		globalRoomId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.OperateFlowerMatchGroupBCmd_CS'; }
	}
	/**
	 * AA房费扣花后 通知下客户端显示
	 */
	export class AAFlowerRoomChargeMatchGroupCmd_S {
		/**
		 * 具体房费扣除数目
		 */
		charges: FlowerChange[];
		GetType(): string { return 'Cmd.AAFlowerRoomChargeMatchGroupCmd_S'; }
	}
	export class BeProcessedFlowerInfo {
		/**
		 * 记录id
		 */
		recordId: string;
		/**
		 * 对象id
		 */
		uid: number;
		/**
		 * 对象昵称
		 */
		nickName: string;
		timestamp: number;
		/**
		 * 操作状态 1/2/3/4 已收、未收、已送、未送
		 */
		state: number;
		/**
		 * 红花数量
		 */
		flower: number;
		/**
		 * 该记录对应的战绩房间id
		 */
		globalRoomId: number;
		/**
		 * 操作者id        -- 兼容闽南漳州 待处理优化
		 */
		opUid: number;
		/**
		 * 操作者昵称      -- 兼容闽南漳州 待处理优化
		 */
		opNickName: string;
		GetType(): string { return 'Cmd.BeProcessedFlowerInfo'; }
	}
	/**
	 * 红花待处理界面
	 */
	export class BeProcessedFlowerMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 对象id
		 */
		getUid: number;
		/**
		 * 获取类型 -- nil/1 兼容闽南漳州 默认不传依然为以前的数据、获取该操作人下属所有待处理
		 */
		getType: number;
		/**
		 * 第几页
		 */
		curPage: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 最大页数
		 */
		maxPage: number;
		/**
		 * 暂定一页10条数据
		 */
		info: BeProcessedFlowerInfo[];
		/**
		 * 对象昵称
		 */
		nickName: string;
		/**
		 * 筛选时间
		 */
		timestamp: number;
		/**
		 * 存在待处理数量
		 */
		beprocessNbr: number;
		GetType(): string { return 'Cmd.BeProcessedFlowerMatchGroupCmd_CS'; }
	}
	export class FlowerRecordInfo {
		timestamp: number;
		/**
		 * 该记录对应的战绩房间id
		 */
		globalRoomId: number;
		/**
		 * 变化前
		 */
		pre: number;
		/**
		 * 变化量
		 */
		change: number;
		/**
		 * 变化后
		 */
		cur: number;
		/**
		 * 记录类型
		 */
		typ: FlowerChangeType;
		/**
		 * 详情处的id      -- 这是操作者的玩家id
		 */
		detailUid: number;
		/**
		 * 详情处的昵称    -- 这是操作者的玩家id
		 */
		detailName: string;
		/**
		 * 送出方id          -- 闽南漳州显示需求 -- 如果存在该字段 表示需要特殊显示
		 */
		sourceUid: number;
		/**
		 * 送出方昵称        -- 闽南漳州显示需求 -- 如果存在该字段 表示需要特殊显示
		 */
		sourceName: string;
		/**
		 * 接收方id          -- 闽南漳州显示需求 -- 如果存在该字段 表示需要特殊显示
		 */
		targetUid: number;
		/**
		 * 接收方昵称        -- 闽南漳州显示需求 -- 如果存在该字段 表示需要特殊显示
		 */
		targetName: string;
		GetType(): string { return 'Cmd.FlowerRecordInfo'; }
	}
	/**
	 * 获取红花变化记录
	 */
	export class FlowerRecordMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 对象id
		 */
		getUid: number;
		/**
		 * 第几页
		 */
		curPage: number;
		/**
		 * 获取类型 nil/1 默认全显示、只显示该合伙人的合作奖励与跟群主的上下分
		 */
		getType: number;
		/**
		 * 获取类型2 nil/1/2/3/4/5/6 默认全显示、送花合伙人、送花玩家、摘花合伙人、摘花玩家、赠送、对局变化（群主、副群主获取自己的）
		 */
		getType2: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 最大页数
		 */
		maxPage: number;
		/**
		 * 暂定一页10条数据
		 */
		info: FlowerRecordInfo[];
		/**
		 * 玩家当前红花数
		 */
		curFlower: number;
		/**
		 * 筛选时间
		 */
		timestamp: number;
		/**
		 * 统计值 分别为今日、昨日、前日 -- getType2 存在的时候赋值 -- 闽南漳州再次改版。该数据不下发了
		 */
		total: number[];
		/**
		 * 玩家总红花
		 */
		totalUser: number;
		/**
		 * 总奖励
		 */
		totalReward: number;
		GetType(): string { return 'Cmd.FlowerRecordMatchGroupCmd_CS'; }
	}
	/**
	 * 查看当前已初始化红花库存值，和剩余可分配值
	 */
	export class SearchCurTotalFlowerMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 当前已初始化红花值
		 */
		curTotalFlower: number;
		/**
		 * 剩余可初始化的值
		 */
		surplus: number;
		/**
		 * 剩余红花
		 */
		curFlower: number;
		GetType(): string { return 'Cmd.SearchCurTotalFlowerMatchGroupCmd_CS'; }
	}
	/**
	 * 改变俱乐部红花初始总值
	 */
	export class ChangeTotalFlowerMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 改变值
		 */
		change: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 剩余红花
		 */
		curFlower: number;
		GetType(): string { return 'Cmd.ChangeTotalFlowerMatchGroupCmd_CS'; }
	}
	/**
	 * 推送玩家最新红花数
	 */
	export class PushCurFlowerMatchGroupCmd_S {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 当前红花值
		 */
		flower: number;
		GetType(): string { return 'Cmd.PushCurFlowerMatchGroupCmd_S'; }
	}
	/**
	 * 添加、清除备注分数
	 */
	export class RemarkPointMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 对象id
		 */
		targetUid: number;
		/**
		 * 操作类型 1、2 添加、清除
		 */
		opType: number;
		/**
		 * 具体操作哪一天的数据 0、1、2 今天、昨天、前天
		 */
		which: number;
		/**
		 * 备注分数
		 */
		point: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.RemarkPointMatchGroupCmd_CS'; }
	}
	/**
	 * 添加、清除昵称备注
	 */
	export class RemarkNickNameMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 对象id
		 */
		targetUid: number;
		/**
		 * 备注昵称
		 */
		remark: string;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.RemarkNickNameMatchGroupCmd_CS'; }
	}
	/**
	 * 获取可导入群列表
	 */
	export class GetCanImportMemberListMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 可导入群列表
		 */
		matchLists: Cmd.MathGroup[];
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetCanImportMemberListMatchGroupCmd_CS'; }
	}
	/**
	 * 成员导入
	 */
	export class ImportMemberListMatchGroupCmd_CS {
		fromMatchId: number;
		toMatchId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ImportMemberListMatchGroupCmd_CS'; }
	}
	/**
	 * 获取可邀请成员列表
	 */
	export class GetCanInviteMemberListMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 房间id 如果有指定房间则传该参数
		 */
		roomId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 当前俱乐部数据
		 */
		curMatch: Cmd.MathGroup;
		/**
		 * 成员信息
		 */
		memberList: Cmd.MatchGroupMemberInfo[];
		GetType(): string { return 'Cmd.GetCanInviteMemberListMatchGroupCmd_CS'; }
	}
	/**
	 * 邀请指定玩家到俱乐部中
	 */
	export class InviteMemberMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 房间id 如果有指定房间则传该参数
		 */
		roomId: number;
		/**
		 * 操作玩家列表
		 */
		uids: number[];
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.InviteMemberMatchGroupCmd_CS'; }
	}
	/**
	 * 邀请指定玩家到俱乐部中 广播
	 */
	export class InviteMemberMatchGroupCmd_Brd {
		/**
		 * 邀请者
		 */
		inviter: Cmd.MatchGroupMemberInfo;
		/**
		 * 当前俱乐部数据
		 */
		curMatch: Cmd.MathGroup;
		/**
		 * 房间id 如果有指定房间则传该参数
		 */
		roomId: number;
		GetType(): string { return 'Cmd.InviteMemberMatchGroupCmd_Brd'; }
	}
	/**
	 * 清除战绩 -- 暂停开房后能清除掉战绩数据
	 */
	export class ClearRecordMatchGroupCmd_CS {
		matchId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ClearRecordMatchGroupCmd_CS'; }
	}
	/**
	 * 清除红花总奖励
	 */
	export class ClearFlowerRewardMatchGroupCmd_CS {
		matchId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ClearFlowerRewardMatchGroupCmd_CS'; }
	}
	export class FlowerRewardRecord {
		timestamp: number;
		/**
		 * 玩家总红花
		 */
		totalUser: number;
		/**
		 * 总奖励
		 */
		totalReward: number;
		GetType(): string { return 'Cmd.FlowerRewardRecord'; }
	}
	/**
	 * 获取红花奖励记录
	 */
	export class GetFlowerRewardRecordMatchGroupCmd_CS {
		matchId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 记录
		 */
		records: FlowerRewardRecord[];
		GetType(): string { return 'Cmd.GetFlowerRewardRecordMatchGroupCmd_CS'; }
	}
	/**
	 * 修改俱乐部楼层名称
	 */
	export class SetFloorNameMatchGroupCmd_CS {
		matchId: number;
		floorId: number;
		floorName: string;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.SetFloorNameMatchGroupCmd_CS'; }
	}
	/**
	 *  漳州俱乐部合伙人
	 * --------------------------------------------------------- --------------------------------------------------------
	 *  合伙人战绩数据
	 */
	export class PartnerRecordInfo {
		/**
		 * 合伙人信息
		 */
		partner: Cmd.MatchGroupMemberInfo;
		/**
		 * 总房数(今日、昨日、前日)
		 */
		roomNbrs: number[];
		/**
		 * 总人次(今日、昨日、前日)
		 */
		playUserNbrs: number[];
		/**
		 * 总大赢家数(今日、昨日、前日) 若是同一局中有两个大赢家 则各自统计加0.5 所以该数值有小数点
		 */
		winNbrs: number[];
		/**
		 * 组员数
		 */
		memberNbr: number;
		/**
		 * 当前合伙人最近三天返现数值 -- 精确到小数点后两位
		 */
		proportionNbrs: number[];
		GetType(): string { return 'Cmd.PartnerRecordInfo'; }
	}
	/**
	 * 具体合伙人内部成员战绩数据
	 */
	export class PartnerMemberRecordInfo {
		/**
		 * 成员信息
		 */
		member: Cmd.MatchGroupMemberInfo;
		/**
		 * 总房数(今日、昨日、前日)
		 */
		roomNbrs: number[];
		/**
		 * 总大赢家数(今日、昨日、前日) 若是同一局中有两个大赢家 则各自统计加0.5 所以该数值有小数点
		 */
		winNbrs: number[];
		/**
		 * 战绩(今日、昨日、前日)
		 */
		scores: number[];
		/**
		 * 红花数
		 */
		flower: number;
		GetType(): string { return 'Cmd.PartnerMemberRecordInfo'; }
	}
	/**
	 * 群主进入合伙人界面 获取合伙人数据
	 */
	export class GetPartnerRecordsMatchGroupCmd_CS {
		matchId: number;
		floorId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 各个合伙人的战绩数据 -- 合伙人人数 就为数值长度。 不单独加字段了
		 */
		records: PartnerRecordInfo[];
		/**
		 * 群主最近三天返现数值 -- 精确到小数点后两位
		 */
		proportionNbrs: number[];
		GetType(): string { return 'Cmd.GetPartnerRecordsMatchGroupCmd_CS'; }
	}
	/**
	 * 操作指定合伙人
	 */
	export class OperatePartnerMatchGroupCmd_CS {
		matchId: number;
		/**
		 * 1/2 添加、删除
		 */
		typ: number;
		/**
		 * 合伙人uid
		 */
		partnerUid: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.OperatePartnerMatchGroupCmd_CS'; }
	}
	/**
	 * 群主申请解除合伙人 发送给合伙人的广播
	 */
	export class RemovePartnerMatchGroupCmd_Brd {
		matchId: number;
		matchName: string;
		GetType(): string { return 'Cmd.RemovePartnerMatchGroupCmd_Brd'; }
	}
	/**
	 * 合伙人 回复是否解除合伙关系
	 */
	export class ReplyRemovePartnerMatchGroupCmd_CS {
		matchId: number;
		/**
		 * 1、2 同意、拒绝
		 */
		typ: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ReplyRemovePartnerMatchGroupCmd_CS'; }
	}
	/**
	 * 获取组员详情界面
	 */
	export class GetMemberRecordsMatchGroupCmd_CS {
		matchId: number;
		/**
		 * 获取目标合伙人数据
		 */
		targetUid: number;
		/**
		 * 1、2  合伙人点击、群主点击
		 */
		typ: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 当前合伙人战绩汇总 -- 群主点击的界面 该数据不回复
		 */
		statistics: PartnerRecordInfo;
		/**
		 * 各个成员的战绩数据 -- 群主点击的界面 里面的数据中分数不填充
		 */
		records: PartnerMemberRecordInfo[];
		/**
		 * 楼层 -- 原样返回
		 */
		floorId: number;
		/**
		 *  漳州大联盟逻辑
		 *  合伙人送花、摘花控制 nil/1 默认允许群主、副群主赠送、摘花 0/不允许
		 */
		operateFlowerCtr: number;
		GetType(): string { return 'Cmd.GetMemberRecordsMatchGroupCmd_CS'; }
	}
	/**
	 * 获取可导入组员列表
	 */
	export class GetCanImportMemberList2MatchGroupCmd_CS {
		/**
		 * 当前俱乐部id
		 */
		curMatchId: number;
		/**
		 * 匹配id 点导入成员按钮时 该参数可不传 由服务器给默认值
		 */
		matchId: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 匹配号id列表
		 */
		matchIdList: number[];
		/**
		 * 成员信息
		 */
		memberList: Cmd.MatchGroupMemberInfo[];
		/**
		 * 1:点击导入成员 2:点击手动添加
		 */
		typ: number;
		GetType(): string { return 'Cmd.GetCanImportMemberList2MatchGroupCmd_CS'; }
	}
	/**
	 * 查询指定成员是否可导入
	 */
	export class GetCanImportUserInfoMatchGroupCmd_CS {
		/**
		 * 当前俱乐部id
		 */
		curMatchId: number;
		/**
		 * 查询的玩家
		 */
		targetUid: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 成员信息
		 */
		userInfo: Cmd.MatchGroupMemberInfo;
		GetType(): string { return 'Cmd.GetCanImportUserInfoMatchGroupCmd_CS'; }
	}
	/**
	 * 添加指定组员到俱乐部中
	 */
	export class ImportMember2MatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 从哪个俱乐部id过来 -- 闽南漳州大联盟模式 可以不传该字段
		 */
		fromMatchId: number;
		/**
		 * 操作玩家列表
		 */
		uids: number[];
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.ImportMember2MatchGroupCmd_CS'; }
	}
	/**
	 * 移除指定组员
	 */
	export class RemoveMemberMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 操作玩家
		 */
		uid: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.RemoveMemberMatchGroupCmd_CS'; }
	}
	/**
	 * 队长手动添加弹窗
	 */
	export class PopupPartnerHandAddMatchGroupCmd_S {
		/**
		 * 队长信息
		 */
		partnerInfo: Cmd.MatchGroupMemberInfo;
		/**
		 * 成员信息
		 */
		memeberInfo: Cmd.MatchGroupMemberInfo;
		GetType(): string { return 'Cmd.PopupPartnerHandAddMatchGroupCmd_S'; }
	}
	/**
	 * 设置合伙人返利数值
	 */
	export class SetPartnerPumpProportionMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 操作玩家
		 */
		uid: number;
		/**
		 * 返利比例
		 */
		proportion: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.SetPartnerPumpProportionMatchGroupCmd_CS'; }
	}
	/**
	 * 设置是否允许群主、副群主 操作合伙人成员红花
	 */
	export class SetPartnerFlowerCtrMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 0/1  0不允许、1允许
		 */
		control: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.SetPartnerFlowerCtrMatchGroupCmd_CS'; }
	}
	/**
	 * --------------------------------------------------------- --------------------------------------------------------
	 *  设置定时器
	 */
	export class SetPauseTimerMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 暂停定时器
		 */
		pauseTimer: number;
		/**
		 * 恢复定时器的时间 -- 传今日的秒数 例如设置为 8点45分 即为：8*3600+45*60
		 */
		restoreTimer: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.SetPauseTimerMatchGroupCmd_CS'; }
	}
	/**
	 * 清空玩家输赢数据
	 */
	export class CleanMemberWinPointMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 操作玩家
		 */
		targetUid: number;
		/**
		 * 操作那一项 1/2/3 今日、昨日、前日
		 */
		which: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.CleanMemberWinPointMatchGroupCmd_CS'; }
	}
	export class CleanRecord {
		/**
		 * 时间
		 */
		timestamp: number;
		/**
		 * 操作员
		 */
		opUser: string;
		/**
		 * 操作那一项 1/2/3 今日、昨日、前日
		 */
		which: number;
		/**
		 * 分数
		 */
		nbr: number;
		GetType(): string { return 'Cmd.CleanRecord'; }
	}
	/**
	 * 获取清空的操作记录
	 */
	export class GetCleanRecordMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 对象id
		 */
		targetUid: number;
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 返回记录数据 返回最多10条
		 */
		records: CleanRecord[];
		GetType(): string { return 'Cmd.GetCleanRecordMatchGroupCmd_CS'; }
	}
	/**
	 * 指定一个记账地址
	 */
	export class SetBookingUrlMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 记账地址
		 */
		bookingUrl: string;
		/**
		 * 秘钥
		 */
		bookingKey: string;
		/**
		 * 记账账号 可选,暂时不用
		 */
		bookingAccount: string;
		GetType(): string { return 'Cmd.SetBookingUrlMatchGroupCmd_CS'; }
	}
	/**
	 * 申请进入记账本地址
	 */
	export class RequestBookingUrlMatchGroupCmd_CS {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 進入房间需要带上lobbyId（指定房間id可能不是該大廳的）
		 */
		lobbyId: number;
		/**
		 * 记账地址
		 */
		bookingUrl: string;
		GetType(): string { return 'Cmd.RequestBookingUrlMatchGroupCmd_CS'; }
	}
	/**
	 * 自动送花是否成功
	 */
	export class AutoSendFlowerSuc_Brd {
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 客户端交互内容
		 */
		desc: string;
		GetType(): string { return 'Cmd.AutoSendFlowerSuc_Brd'; }
	}
	/**
	 * 获取俱乐部审批记录
	 */
	export class GetApproveRecordMatchGroupCmd_C {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 页数
		 */
		curPage: number;
		/**
		 * 指定的uid
		 */
		uid: number;
		GetType(): string { return 'Cmd.GetApproveRecordMatchGroupCmd_C'; }
	}
	/**
	 * 获取俱乐部审批记录
	 */
	export class GetApproveRecordMatchGroupCmd_S {
		resultCode: number;
		/**
		 * 页数
		 */
		curPage: number;
		/**
		 * 指定的uid
		 */
		records: ApproveRecord[];
		/**
		 * 最大页数
		 */
		maxPage: number;
		GetType(): string { return 'Cmd.GetApproveRecordMatchGroupCmd_S'; }
	}
	export class ApproveRecord {
		name: string;
		headurl: string;
		uid: number;
		mastername: string;
		masterheadurl: string;
		masteruid: number;
		globalroomid: number;
		/**
		 * 1= 主动申请，2=白名单加入，3=合作群添加
		 */
		type: number;
		timestamp: number;
		GetType(): string { return 'Cmd.ApproveRecord'; }
	}
	/**
	 * 奖励信息
	 */
	export class ActivityReward {
		/**
		 * 奖励要求
		 */
		rewardrequest: string;
		/**
		 * 奖励内容
		 */
		rewardcontent: string;
		GetType(): string { return 'Cmd.ActivityReward'; }
	}
	/**
	 * 活动名称、id
	 */
	export class ActivityTitles {
		title: string;
		actId: number;
		GetType(): string { return 'Cmd.ActivityTitles'; }
	}
	/**
	 * 打开活动界面
	 */
	export class OpenActivityMatchGroupCmd_C {
		/**
		 * 活动Id:打开活动页面默认不传,请求具体活动传相应活动Id
		 */
		actId: number;
		/**
		 * 老友圈id
		 */
		matchid: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.OpenActivityMatchGroupCmd_C'; }
	}
	export class OpenActivityMatchGroupCmd_S {
		/**
		 * 活动Id
		 */
		actId: number;
		/**
		 * 活动开始时间
		 */
		stimestamp: number;
		/**
		 * 活动结束时间
		 */
		etimestamp: number;
		/**
		 * 活动内容
		 */
		content: string;
		/**
		 * 奖励内容
		 */
		actreward: ActivityReward[];
		/**
		 * 活动总数量
		 */
		actnum: number;
		/**
		 * 所有活动标题、id
		 */
		activtitles: ActivityTitles[];
		/**
		 * 读取数据:1.大赢家次数2.游戏局数3.总盈利4.总亏损
		 */
		typ: number;
		gameId: number;
		/**
		 * 当前系统时间
		 */
		systime: number;
		GetType(): string { return 'Cmd.OpenActivityMatchGroupCmd_S'; }
	}
	/**
	 * 设置活动
	 */
	export class SetActivityMatchGroupCmd_C {
		/**
		 * 标题
		 */
		title: string;
		/**
		 * 内容
		 */
		content: string;
		/**
		 * 读取数据:1.大赢家次数2.游戏局数3.总盈利4.总亏损
		 */
		type: number;
		gameId: number;
		/**
		 * 奖励内容
		 */
		actreward: ActivityReward[];
		/**
		 * 活动开始时间
		 */
		stimestamp: number;
		/**
		 * 活动结束时间
		 */
		etimestamp: number;
		/**
		 * 老友圈id
		 */
		matchid: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.SetActivityMatchGroupCmd_C'; }
	}
	export class SetActivityMatchGroupCmd_S {
		resultCode: number;
		desc: string;
		GetType(): string { return 'Cmd.SetActivityMatchGroupCmd_S'; }
	}
	/**
	 * 删除活动
	 */
	export class DeleteActivityMatchGroupCmd_C {
		/**
		 * 活动Id
		 */
		actId: number;
		/**
		 * 老友圈id
		 */
		matchid: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.DeleteActivityMatchGroupCmd_C'; }
	}
	export class DeleteActivityMatchGroupCmd_S {
		resultCode: number;
		desc: string;
		GetType(): string { return 'Cmd.DeleteActivityMatchGroupCmd_S'; }
	}
	/**
	 * 排行榜信息
	 */
	export class rankInfo {
		/**
		 * 名次
		 */
		rankId: number;
		uid: number;
		/**
		 * 排行依据
		 */
		num: number;
		/**
		 * 昵称
		 */
		nickname: string;
		headurl: string;
		GetType(): string { return 'Cmd.rankInfo'; }
	}
	/**
	 * 查看排行榜
	 */
	export class GetActivityRankMatchGroupCmd_C {
		/**
		 * 活动Id
		 */
		actId: number;
		/**
		 * 老友圈id
		 */
		matchid: number;
		/**
		 * 第几页
		 */
		curPage: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		GetType(): string { return 'Cmd.GetActivityRankMatchGroupCmd_C'; }
	}
	export class GetActivityRankMatchGroupCmd_S {
		ranklist: rankInfo[];
		/**
		 * 最大页数
		 */
		maxPage: number;
		/**
		 * 自己名次
		 */
		selfRankId: number;
		GetType(): string { return 'Cmd.GetActivityRankMatchGroupCmd_S'; }
	}
	export class GetRankInfoMatchGroupCmd_CS {
		matchId: number;
		/**
		 * 1:今日 2:本月 3:昨日
		 */
		which: number;
		/**
		 * 是否为SZ大联盟模式 1：表示为SZ大联盟模式
		 */
		isSZLeague: number;
		/**
		 * 排行榜楼据
		 */
		rankList: rankInfo[];
		/**
		 * 我的排行数据
		 */
		myRank: rankInfo;
		GetType(): string { return 'Cmd.GetRankInfoMatchGroupCmd_CS'; }
	}
}
