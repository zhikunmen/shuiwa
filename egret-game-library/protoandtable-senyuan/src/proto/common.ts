//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// Generated from: common.proto

module Cmd {
	export enum CodeEnum {
		/**
		 * 成功
		 */
		SUCCESS = 0
	}
	/**
	 * ---------------------------------公共模块----------------------------//
	 */
	export enum CommonModel {
		/**
		 * 充值
		 */
		RECHARGE = 1,
		/**
		 * 在线礼包
		 */
		ONLINE_GIFT = 2,
		/**
		 * 背包
		 */
		BAG = 3,
		/**
		 * 活动中心
		 */
		ACTIVITY = 4,
		/**
		 * 个人信息
		 */
		MY = 5,
		/**
		 * 大厅底部菜单
		 */
		LOBBY_MAIN_MENU = 6,
		/**
		 * 游戏头部聊天
		 */
		TOP_CHAT = 7,
		/**
		 * 查看玩家信息
		 */
		USERINFO = 8,
		/**
		 * 兑换话费卡
		 */
		EXCHANGE_PHONECARD = 9,
		/**
		 * 大厅公告
		 */
		LOBBY_NOTICE = 10,
		/**
		 * 设置
		 */
		LOBBY_SETTING = 11
	}
	/**
	 * 聊天广播类型
	 */
	export enum CHAT_TYPE {
		/**
		 * 房间消息
		 */
		ROOM = 1,
		/**
		 * 喇叭消息
		 */
		HORN = 2,
		/**
		 * 语音消息
		 */
		VOICE = 3
	}
	/**
	 * ---------------------------------公共消息----------------------------//
	 * 游戏发送给大厅
	 */
	export enum CommonEvent_G2L {
		/**
		 * 领取在线礼包
		 */
		GET_ONLIEN_GIFT = 1
	}
	/**
	 * 大厅发送给游戏
	 */
	export enum CommonEvent_L2G {
		/**
		 * 在线礼包时间更新
		 */
		GET_ONLIEN_GIFT_TIME = 1,
		/**
		 * 在线礼包时间完成
		 */
		ON_ONLIEN_GIFT_TIME_END = 2,
		/**
		 * 设置面板
		 */
		ON_SETTING = 3,
		/**
		 * 设置面板
		 */
		ON_HELP = 4
	}
	/**
	 * 玩家在线状态
	 */
	export enum OnlineState {
		/**
		 * 离线
		 */
		OnlineState_Offline = 0,
		/**
		 * 在线
		 */
		OnlineState_Online = 1,
		/**
		 * 网络差
		 */
		OnlineState_Slow = 2,
		/**
		 * 离开,切后台
		 */
		OnlineState_Leave = 3,
		/**
		 * 电话中
		 */
		OnlineState_Calling = 4,
		/**
		 * 托管状态
		 */
		OnlineState_Hosting = 5,
		/**
		 * 排队中,匹配号用
		 */
		OnlineState_Waiting = 6,
		/**
		 * 游戏中,匹配号用
		 */
		OnlineState_Gameing = 7,
		/**
		 * 观战状态
		 */
		OnlineState_Watching = 8,
		/**
		 * 已邀请状态,漳州匹配号用
		 */
		OnlineState_Invited = 9
	}
	/**
	 * 房间类型
	 */
	export enum RoomType {
		/**
		 * 普通房间
		 */
		RoomType_Normal = 0,
		/**
		 * 快速匹配房
		 */
		RoomType_Quick = 1,
		/**
		 * 练习场
		 */
		RoomType_Learn = 2,
		/**
		 * 匹配号生成房,roomid==globalroomid
		 */
		RoomType_Match = 3
	}
	export enum MsgType {
		/**
		 * 底部菜单-&gt;商城
		 */
		Shop = 1,
		/**
		 * 底部菜单-&gt;好友
		 */
		Friend = 2,
		/**
		 * 底部菜单-&gt;救济金
		 */
		Alms = 3,
		/**
		 * 底部菜单-&gt;活动
		 */
		Activity = 4,
		/**
		 * 底部菜单-&gt;任务
		 */
		DaysTask = 5,
		/**
		 * 底部菜单-&gt;更多
		 */
		More = 6,
		/**
		 * 底部菜单-&gt;摇钱树
		 */
		MoneyTree = 7,
		/**
		 * 通知
		 */
		Notice = 8,
		/**
		 * 俱乐部
		 */
		Club = 9,
		/**
		 * 战绩
		 */
		Statistics = 10,
		/**
		 * 邮件
		 */
		Mail = 11,
		/**
		 * 分享有礼
		 */
		Share = 12,
		/**
		 * 邀请有礼
		 */
		Invitation = 13,
		/**
		 * 收藏有礼
		 */
		Subscribe = 14,
		/**
		 * 桌面启动
		 */
		Desk = 15,
		/**
		 * 底部菜单-&gt;商城-&gt;礼品屋
		 */
		GiftHouse = 100,
		/**
		 * 底部菜单-&gt;好友-&gt;好友消息
		 */
		FriendMsg = 200,
		/**
		 * 底部菜单-&gt;好友-&gt;好友请求
		 */
		FriendReq = 201,
		/**
		 * 底部菜单-&gt;救济金-&gt;领取救济金
		 */
		GetAlms = 300,
		/**
		 * 俱乐部牌局
		 */
		ClubGame = 301,
		/**
		 * 俱乐部成员
		 */
		ClubMember = 302,
		/**
		 * 俱乐部申请
		 */
		ClubApply = 303,
		ClubTransit = 304,
		/**
		 * 底部菜单-&gt;活动-&gt;每日签到
		 */
		Act_DaySign = 400,
		/**
		 * 底部菜单-&gt;活动-&gt;幸运翻翻翻
		 */
		Act_TurnCard = 401,
		/**
		 * 底部菜单-&gt;活动-&gt;幸运大转盘
		 */
		Act_TurnTable = 402,
		/**
		 * 底部菜单-&gt;任务-&gt;挑战任务
		 */
		Task_fight = 500,
		/**
		 * 底部菜单-&gt;任务-&gt;充值任务
		 */
		Task_TurnTable = 501,
		/**
		 * 底部菜单-&gt;任务-&gt;每日任务
		 */
		Task_EveryDay = 502,
		/**
		 * 底部菜单-&gt;任务-&gt;成就任务
		 */
		Task_Once = 503,
		/**
		 * 底部菜单-&gt;更多-&gt;公告
		 */
		Task_Notice = 600,
		/**
		 * 底部菜单-&gt;更多-&gt;魅力值
		 */
		Task_Charm = 601,
		/**
		 * 底部菜单-&gt;更多-&gt;邮件
		 */
		Task_NewMail = 602,
		/**
		 * 底部菜单-&gt;更多-&gt;vip
		 */
		Task_VIP = 603,
		/**
		 * 底部菜单-&gt;摇钱树-&gt;领取金币
		 */
		Task_MoneyTree = 701
	}
	/**
	 * 容器更新操作符
	 */
	export enum UpdateOperator {
		/**
		 * 全部覆盖
		 */
		Replace = 1,
		/**
		 * 追加或更新
		 */
		Update = 2,
		/**
		 * 删除
		 */
		Delete = 3,
		/**
		 * 站起
		 */
		StandUp = 4
	}
	/**
	 *  前端上传分享结果
	 *  分享类型
	 */
	export enum ShareType {
		/**
		 * 比赛邀请
		 */
		match = 1,
		/**
		 * 苹果送钻石
		 */
		ios = 2,
		/**
		 * 邀请有礼
		 */
		invite = 3,
		/**
		 * 每日任务
		 */
		task = 4,
		/**
		 * 解锁
		 */
		unlock = 5,
		/**
		 * 游戏结算
		 */
		game = 6,
		/**
		 * 新手分享
		 */
		novice = 7,
		/**
		 * 邀请进房间--房卡
		 */
		enterRoom = 8,
		/**
		 * 战绩分享
		 */
		record = 9,
		/**
		 * 金币场分享
		 */
		gold = 10,
		/**
		 * 代付
		 */
		payOther = 11
	}
	/**
	 * 操作类型
	 */
	export enum ShareOpType {
		/**
		 * 分享出去
		 */
		share = 1,
		/**
		 * 点击分享链接
		 */
		click = 2
	}
	/**
	 * 下注基本信息
	 */
	export class BetItem {
		/**
		 * 下指定位置 天地玄黄 分别为 1/2/3/4
		 */
		betId: number;
		/**
		 * 筹码
		 */
		chips: number;
		/**
		 * 输赢筹码
		 */
		profit: number;
		GetType(): string { return 'Cmd.BetItem'; }
	}
	/**
	 * 房间内玩家信息
	 */
	export class RoomUserInfo {
		uid: number;
		headUrl: string;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 如果为0就是站着
		 */
		seatId: number;
		/**
		 * 玩家当前筹码
		 */
		remainder: number;
		/**
		 * 玩家本局已下注信息
		 */
		userBet: BetItem[];
		/**
		 * 性别
		 */
		gender: string;
		/**
		 * 奖券
		 */
		giftCoupon: number;
		/**
		 * 个性签名
		 */
		signature: string;
		/**
		 * vip等级
		 */
		vipLevel: number;
		/**
		 * 当前赢得的金币，刚进去为0
		 */
		curWinProfit: number;
		/**
		 * 喇叭
		 */
		horn: number;
		/**
		 * 玩家当前钻石
		 */
		diamond: number;
		/**
		 * 正在使用的个人形象 2017.11.15好彩真人需求
		 */
		personalImage: PersonalImage[];
		GetType(): string { return 'Cmd.RoomUserInfo'; }
	}
	/**
	 * 平台用户信息
	 */
	export class PlatInfo {
		/**
		 * 用户账号。platid为PlatType_Normal时，account可以缺省为客户端机器码
		 */
		account: string;
		/**
		 * 平台id 从PlatType改成int类型
		 */
		platid: number;
		email: string;
		/**
		 * 性别
		 */
		gender: string;
		/**
		 * 昵称
		 */
		nickname: string;
		/**
		 * 时间戳
		 */
		timestamp: string;
		/**
		 * 平台签名串
		 */
		sign: string;
		/**
		 * 平台头像
		 */
		faceurl: string;
		/**
		 * 增加一个扩展字段，特殊平台自行组装json
		 */
		extdata: string;
		/**
		 * 平台id(兼容老的处理方式)
		 */
		uid: string;
		/**
		 * 客户端机器码
		 */
		imei: number;
		/**
		 * 系统名称
		 */
		osname: string;
		/**
		 * 为了支持多个公众号
		 */
		platappid: string;
		/**
		 * 二次登录随机码 用于非独立账号绑定用
		 */
		bindcode: string;
		/**
		 * 临时token,用来绕过第三方验证,由login直接认证通过,第三方服务器出问题时用
		 */
		onetoken: string;
		GetType(): string { return 'Cmd.PlatInfo'; }
	}
	export class UI_CommonChat_C {
		words: string;
		/**
		 * 普通聊天不发这个字段，广播发1
		 */
		brdType: CHAT_TYPE;
		GetType(): string { return 'Cmd.UI_CommonChat_C'; }
	}
	export class UI_CommonChat_S {
		resultCode: number;
		desc: string;
		/**
		 * 剩余喇叭数量，需要时候才发
		 */
		horn: number;
		GetType(): string { return 'Cmd.UI_CommonChat_S'; }
	}
	export class UI_CommonChat_Brd {
		uid: number;
		words: string;
		headUrl: string;
		nickName: string;
		/**
		 * 字符串+vip等级
		 */
		vipLevel: string;
		/**
		 * 时间戳
		 */
		time: number;
		seatId: number;
		/**
		 * 1-普通聊天 2-小喇叭
		 */
		brdType: CHAT_TYPE;
		GetType(): string { return 'Cmd.UI_CommonChat_Brd'; }
	}
	/**
	 * 语音聊天
	 */
	export class UI_VoiceChat_C {
		/**
		 * 语音时长
		 */
		time: string;
		/**
		 * 对应文字
		 */
		words: string;
		/**
		 * 对应地址
		 */
		url: string;
		GetType(): string { return 'Cmd.UI_VoiceChat_C'; }
	}
	export class UI_VoiceChat_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 信息
		 */
		desc: string;
		GetType(): string { return 'Cmd.UI_VoiceChat_S'; }
	}
	export class UI_VoiceChat_Brd {
		/**
		 * 语音时长
		 */
		time: string;
		/**
		 * 对应文字
		 */
		words: string;
		/**
		 * 对应地址
		 */
		url: string;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 发送语音的玩家id
		 */
		uid: number;
		GetType(): string { return 'Cmd.UI_VoiceChat_Brd'; }
	}
	/**
	 * 请求无座玩家列表
	 */
	export class UI_GetNotSeatUserListRoomCmd_C {
		/**
		 * 当前请求第几页数据
		 */
		curPage: number;
		GetType(): string { return 'Cmd.UI_GetNotSeatUserListRoomCmd_C'; }
	}
	/**
	 * 请求无座玩家列表
	 */
	export class UI_GetNotSeatUserListRoomCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 信息
		 */
		desc: string;
		/**
		 * 当前页数
		 */
		curPage: number;
		/**
		 * 玩家列表 每次最多返回20个
		 */
		users: RoomUserInfo[];
		GetType(): string { return 'Cmd.UI_GetNotSeatUserListRoomCmd_S'; }
	}
	/**
	 * 大厅公共聊天
	 */
	export class LobbyCommonChatLobby_C {
		/**
		 * 聊天内容
		 */
		chatInfo: string;
		GetType(): string { return 'Cmd.LobbyCommonChatLobby_C'; }
	}
	/**
	 * 大厅公共聊天返回
	 */
	export class LobbyCommonChatLobby_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 描述
		 */
		desc: string;
		/**
		 * 剩余时间
		 */
		remainder: number;
		/**
		 * 剩余喇叭
		 */
		horn: number;
		GetType(): string { return 'Cmd.LobbyCommonChatLobby_S'; }
	}
	/**
	 * 聊天广播
	 */
	export class LobbyCommonChatLobby_Brd {
		/**
		 * 聊天信息
		 */
		info: CommonChatInfo;
		/**
		 * 聊天类型，1：大厅内喇叭，2：游戏内
		 */
		type: number;
		GetType(): string { return 'Cmd.LobbyCommonChatLobby_Brd'; }
	}
	/**
	 * 聊天信息
	 */
	export class CommonChatInfo {
		/**
		 * 玩家昵称
		 */
		nickName: string;
		/**
		 * 玩家vip等级
		 */
		vipLevel: number;
		/**
		 * 聊天内容
		 */
		chatInfo: string;
		uid: number;
		/**
		 * 座位号
		 */
		seatId: number;
		/**
		 * 1：喇叭来自大厅
		 */
		type: number;
		/**
		 * 时间戳
		 */
		timestamp: number;
		GetType(): string { return 'Cmd.CommonChatInfo'; }
	}
	/**
	 * 获取世界聊天信息
	 */
	export class GetCommonChatInfoLobby_C {
		GetType(): string { return 'Cmd.GetCommonChatInfoLobby_C'; }
	}
	/**
	 * 获取世界聊天信息返回
	 */
	export class GetCommonChatInfoLobby_S {
		/**
		 * 聊天信息
		 */
		info: CommonChatInfo[];
		/**
		 * 自己的喇叭数目
		 */
		horn: number;
		/**
		 * 自己的状态，1：游客；2：其他
		 */
		state: number;
		GetType(): string { return 'Cmd.GetCommonChatInfoLobby_S'; }
	}
	export class RewardItem {
		/**
		 * 物品ID
		 */
		goodId: number;
		/**
		 * 物品数量
		 */
		goodNbr: number;
		GetType(): string { return 'Cmd.RewardItem'; }
	}
	/**
	 * 房间属性
	 */
	export class roomPropObj {
		/**
		 * 1:房间局数 3:人数模式 4:支付模式 5:游金倍数 101:鬼牌模式(0无鬼 1 2) 102:打捆(金华)
		 */
		id: number;
		value: number;
		GetType(): string { return 'Cmd.roomPropObj'; }
	}
	export class RoomState {
		/**
		 * 配置出牌倒计时
		 */
		outCount: number;
		/**
		 * 配置操作牌倒计时
		 */
		opCount: number;
		/**
		 * 进入房间id
		 */
		roomId: number;
		/**
		 * 玩家基础信息
		 */
		userInfoSet: UserBaseInfo[];
		/**
		 * 房间类型RoomType,0表示正常放假,1表示快速匹配场,2表示练习场
		 */
		roomType: number;
		/**
		 * 所有已准备玩家uid
		 */
		prepareSet: number[];
		/**
		 * 音效音乐等设置信息
		 */
		setInfo: SetInfo;
		/**
		 * 房间属性,带kv属性的
		 */
		roomProps: roomPropObj[];
		/**
		 * 玩法属性,只是开关类型的
		 */
		props: number[];
		/**
		 * 剩余解散房间的时间秒
		 */
		dissoveTime: number;
		/**
		 * 对赌类型 1:金币 2:钻石
		 */
		gambletype: number;
		/**
		 * 金币场底注
		 */
		betchips: number;
		/**
		 * 是否是暗杠, 1非暗杠 2暗杠
		 */
		darkBar: number;
		/**
		 * 金币场输赢上限
		 */
		winLimit: number;
		/**
		 * 进入房间matchId
		 */
		matchId: number;
		/**
		 * 底注
		 */
		bottomPoint: number;
		/**
		 * 入场
		 */
		enteringPoint: number;
		/**
		 * 离场
		 */
		leavingPoint: number;
		/**
		 * 最小匹配分
		 */
		minMatchPoint: number;
		/**
		 * 当前房间游戏局数
		 */
		curGameNbr: number;
		/**
		 * 第一局开局不准备的倒计时踢人时间
		 */
		kickTime: number;
		/**
		 * 大联盟底注
		 */
		baseFlower: number;
		GetType(): string { return 'Cmd.RoomState'; }
	}
	/**
	 * 分享信息
	 */
	export class ShareInfo {
		/**
		 * 标题
		 */
		title: string;
		/**
		 * 内容
		 */
		content: string;
		/**
		 * 分享地址
		 */
		webPageUrl: string;
		/**
		 * 二维码
		 */
		codeUrl: string;
		GetType(): string { return 'Cmd.ShareInfo'; }
	}
	/**
	 * 邮寄地址
	 */
	export class DeliverAddr {
		/**
		 * 邮政编码,可不要
		 */
		code: number;
		/**
		 * 收件人姓名
		 */
		name: string;
		/**
		 * 收件人电话
		 */
		phone: string;
		/**
		 * 收件详细地址
		 */
		addr: string;
		/**
		 * 微信
		 */
		wechat: string;
		/**
		 * qq 2017.11.15好彩真人添加
		 */
		qq: string;
		/**
		 * 邮箱 2017.11.15好彩真人添加
		 */
		mail: string;
		GetType(): string { return 'Cmd.DeliverAddr'; }
	}
	export class flowerObj {
		id: number;
		num: number;
		GetType(): string { return 'Cmd.flowerObj'; }
	}
	export class njU {
		/**
		 * 当前分数
		 */
		curP: number;
		/**
		 * 南京麻将总点数
		 */
		tolP: number;
		GetType(): string { return 'Cmd.njU'; }
	}
	/**
	 * 比赛场入场券相关
	 */
	export class ticketObj {
		/**
		 * 入场券id
		 */
		ticketId: number;
		/**
		 * 场次id
		 */
		playId: number;
		/**
		 * 数量
		 */
		count: number;
		GetType(): string { return 'Cmd.ticketObj'; }
	}
	/**
	 * 比赛场勋章相关
	 */
	export class medalObj {
		/**
		 * 勋章id
		 */
		medalId: number;
		/**
		 * 数量
		 */
		count: number;
		GetType(): string { return 'Cmd.medalObj'; }
	}
	/**
	 * 魅力值相关
	 */
	export class usercpObj {
		id: number;
		count: number;
		GetType(): string { return 'Cmd.usercpObj'; }
	}
	/**
	 * 聊天消息
	 */
	export class ChatInfo {
		/**
		 * 聊天类型
		 */
		chatType: number;
		/**
		 * 文字/语音对应的文字
		 */
		words: string;
		/**
		 * 语音时长
		 */
		time: string;
		/**
		 * 语音对应地址
		 */
		url: string;
		/**
		 * 表情id
		 */
		emojiId: number;
		/**
		 * 发送者
		 */
		fromUid: number;
		/**
		 * 接收者
		 */
		toUid: number;
		/**
		 * 时间戳
		 */
		sendTime: number;
		GetType(): string { return 'Cmd.ChatInfo'; }
	}
	/**
	 * 商品
	 */
	export class Goods {
		goodsId: number;
		goodsNum: number;
		GetType(): string { return 'Cmd.Goods'; }
	}
	/**
	 * 成长属性,让每个账号变的有成长性,可部分规避无门槛逃单问题
	 */
	export class GrowthAttr {
		/**
		 * 本周上桌次数
		 */
		playNumWeek: number;
		/**
		 * 本月上桌次数
		 */
		playNumMon: number;
		/**
		 * 总上桌次数0-100新手,100-1000资深,...
		 */
		playNumAll: number;
		/**
		 * 本周获胜次数
		 */
		winNumWeek: number;
		/**
		 * 本月获胜次数
		 */
		winNumMon: number;
		/**
		 * 总获胜次数0-100新手,100-1000资深,...
		 */
		winNumAll: number;
		/**
		 * 本周获胜次数
		 */
		bigWinNumWeek: number;
		/**
		 * 本月获胜次数
		 */
		bigWinNumMon: number;
		/**
		 * 总获胜次数0-100新手,100-1000资深,...
		 */
		bigWinNumAll: number;
		/**
		 * 胜率winNumAll/playNumAll
		 */
		winRate: number;
		/**
		 * 本周上桌次数排名
		 */
		playOrderWeek: number;
		/**
		 * 本月上桌次数排名
		 */
		playOrderMon: number;
		/**
		 * 总上桌次数0-100新手,100-1000资深,...
		 */
		playOrderAll: number;
		/**
		 * 本周获胜次数排名
		 */
		winOrderWeek: number;
		/**
		 * 本月获胜次数排名
		 */
		winOrderMon: number;
		/**
		 * 总获胜次数0-100新手,100-1000资深,...
		 */
		winOrderAll: number;
		/**
		 * 本周获胜次数排名
		 */
		bigWinOrderWeek: number;
		/**
		 * 本月获胜次数排名
		 */
		bigWinOrderMon: number;
		/**
		 * 总获胜次数0-100新手,100-1000资深,...
		 */
		bigWinOrderAll: number;
		/**
		 * 商城积分
		 */
		shopPoint: number;
		/**
		 * 奖池积分
		 */
		jackpot: number;
		GetType(): string { return 'Cmd.GrowthAttr'; }
	}
	/**
	 * 玩家充值信息
	 */
	export class RechargeInfo {
		/**
		 * 累计充值
		 */
		totalRecharge: number;
		/**
		 * 月充值
		 */
		monthRecharge: number;
		/**
		 * 日充值
		 */
		dayRecharge: number;
		GetType(): string { return 'Cmd.RechargeInfo'; }
	}
	/**
	 * 拥有的时效性道具
	 */
	export class TimeGoods {
		/**
		 * 对应道具表的id (玩家购买后对应的道具id)
		 */
		id: number;
		/**
		 * 剩余的有效天数
		 */
		timeDay: number;
		/**
		 * 过期时间戳(秒级的)
		 */
		outTime: number;
		/**
		 * 对应商城表的id (2018.03.15) 之后的购买全部使用这个字段
		 */
		shopId: number;
		GetType(): string { return 'Cmd.TimeGoods'; }
	}
	/**
	 * 正在使用个人形象
	 */
	export class PersonalImage {
		/**
		 * 1头像框(暂时只有头像框)
		 */
		typ: number;
		/**
		 * 0不使用 1购买道具 2vip特有
		 */
		optyp: number;
		/**
		 * 购买道具对应的id
		 */
		id: number;
		/**
		 * vip特有对应的vip等级
		 */
		vip: number;
		GetType(): string { return 'Cmd.PersonalImage'; }
	}
	/**
	 * 玩家所拥有的充值优惠 (2018.03.16好彩金币场系列需求)
	 */
	export class RechargeDiscounts {
		/**
		 * 商品Id
		 */
		shopId: number;
		/**
		 * 优惠加成 rate=1就相当于在基础上再加送1份
		 */
		rate: number;
		GetType(): string { return 'Cmd.RechargeDiscounts'; }
	}
	/**
	 * 基础数据
	 */
	export class UserBaseInfo {
		uid: number;
		headurl: string;
		nickname: string;
		gender: string;
		/**
		 * 房卡模式 zoneType=2
		 */
		card: number;
		/**
		 * 钻石模式 zoneType=4
		 */
		diamond: number;
		platId: number;
		subPlatId: string;
		ip: string;
		/**
		 * 上级代理 如果没有返回0
		 */
		parent: number;
		vip: number;
		/**
		 * 积分
		 */
		points: number;
		seatId: number;
		/**
		 * 为了方便放这里,在线状态OnlineState
		 */
		onlineState: number;
		/**
		 * 为了方便放这里,准备状态
		 */
		bReady: number;
		/**
		 * 为了方便放这里,当前立着的手牌数量
		 */
		handCardNum: number;
		flower: flowerObj[];
		nickName: string;
		headUrl: string;
		/**
		 * uid的索引
		 */
		sid: number;
		/**
		 * 纬度
		 */
		lat: number;
		/**
		 * 经度
		 */
		lng: number;
		/**
		 * 南京麻将使用下注
		 */
		nju: njU;
		/**
		 * 金币
		 */
		chips: number;
		/**
		 * 入场券
		 */
		ticket: ticketObj[];
		/**
		 * 勋章
		 */
		medal: medalObj[];
		/**
		 * 单局飘分
		 */
		multiPiao: number;
		/**
		 * 个性签名
		 */
		signature: string;
		/**
		 * 是否是新玩家 0:不是 1:是
		 */
		isNew: number;
		/**
		 * 游戏局数
		 */
		playNum: number;
		/**
		 * 保险箱的钱数 金币
		 */
		bankMoney: number;
		/**
		 * 是否修改过昵称 1:修改过(好彩真人的需求)
		 */
		isChangeName: number;
		/**
		 * 魅力值(好彩真人)
		 */
		usercp: number;
		/**
		 * 魅力值的具体信息(好彩真人)
		 */
		usercpObj: usercpObj[];
		/**
		 * 是否为好友 1:是好友(请求其他用户信息的标志，好彩真人的需求)
		 */
		isFriend: number;
		/**
		 * 奖券
		 */
		giftCoupon: number;
		/**
		 * 最后一条聊天记录(好彩真人好友系统使用)
		 */
		lastMsg: ChatInfo;
		/**
		 * 礼品券(好彩真人麻将,金币场赢家有几率获得)
		 */
		giftVoucher: number;
		/**
		 * 手机号(好彩真人麻将,为nil表示未绑定)
		 */
		phonenumber: string;
		/**
		 * 特殊分
		 */
		specialpoints: number;
		/**
		 * 赢三张头衔
		 */
		title: string;
		/**
		 * 赢三张喇叭(好彩金币系列也使用这个字段表示喇叭 2018.03.23)
		 */
		horn: number;
		/**
		 * 地理位置信息
		 */
		loc: string;
		/**
		 * 成长属性,西安先用
		 */
		growth: GrowthAttr;
		/**
		 * 玩家充值
		 */
		recharge: RechargeInfo;
		/**
		 * 正在使用的个人形象 2017.11.15好彩真人需求
		 */
		personalImage: PersonalImage[];
		/**
		 * 玩家所拥有的优惠商品 2018.03.16好彩需求
		 */
		discounts: RechargeDiscounts[];
		/**
		 * 保险箱 钻石
		 */
		bankDiamond: number;
		/**
		 * 详细地址
		 */
		address: string;
		/**
		 * 是否显示yy渠道的实名认证按钮
		 */
		isAnti: boolean;
		/**
		 * 是否好彩代理商
		 */
		haocaiAgent: boolean;
		/**
		 * 玩家底分集合
		 */
		userBasePoints: number[];
		/**
		 * 最后一次进的房间号
		 */
		lastRoomId: number;
		/**
		 * 跑得快炸弹数量
		 */
		bomb: number;
		email: string;
		/**
		 * 跑得快记牌器数量
		 */
		counterNum: number;
		/**
		 * 新手引导进度
		 */
		progress: number;
		/**
		 * 1表示为代理
		 */
		isAgent: number;
		/**
		 * 红包金额，单位/分
		 */
		redPacket: number;
		/**
		 * 离线时间,秒数
		 */
		sec: number;
		/**
		 * 可兑换的现金红包
		 */
		giftCash: number;
		/**
		 * 是否有新手领奖(好牌比赛用) 1:有 0:没有
		 */
		bNoviceReward: number;
		/**
		 * 自己的茶楼id
		 */
		teahouseId: number;
		/**
		 * 自己的联盟id
		 */
		leagueId: number;
		/**
		 * 名片--其实就是一图片地址
		 */
		businesscard: string;
		/**
		 * &gt;=1表示游客,观战模式
		 */
		visitor: number;
		/**
		 * 下注退水
		 */
		refundTax: number;
		/**
		 * 备注
		 */
		remark: string;
		/**
		 * 闲聊昵称
		 */
		xlNickName: string;
		/**
		 * 微信昵称
		 */
		wxNickName: string;
		/**
		 * 推荐的合伙人数据
		 */
		partner: MatchGroupMemberInfo;
		/**
		 * 玩家当前身份 暂定（0/1/2 游客、白名单、黑名单）
		 */
		identity: number;
		/**
		 * 红花数据
		 */
		flowers: number;
		GetType(): string { return 'Cmd.UserBaseInfo'; }
	}
	/**
	 * 修改玩家信息
	 */
	export class UserBaseInfoUpdateCmd_C {
		baseInfo: UserBaseInfo;
		GetType(): string { return 'Cmd.UserBaseInfoUpdateCmd_C'; }
	}
	/**
	 * 请求解散房间
	 */
	export class RequestDissolveRoom_C {
		GetType(): string { return 'Cmd.RequestDissolveRoom_C'; }
	}
	export class RequestDissolveRoom_S {
		resultCode: number;
		desc: string;
		/**
		 * 在线玩家人数
		 */
		userNum: number;
		GetType(): string { return 'Cmd.RequestDissolveRoom_S'; }
	}
	export class UserDissolveState {
		uid: number;
		nickName: string;
		/**
		 * 1确定 0拒绝 2等待操作
		 */
		state: number;
		headUrl: string;
		GetType(): string { return 'Cmd.UserDissolveState'; }
	}
	export class RequestDissolveRoom_Brd {
		/**
		 * 请求解散房间的玩家uid
		 */
		uid: number;
		/**
		 * 等待倒计时
		 */
		waitTime: number;
		/**
		 * 总共等待时间
		 */
		totalSec: number;
		/**
		 * 当前房间用户解散状态
		 */
		users: UserDissolveState[];
		GetType(): string { return 'Cmd.RequestDissolveRoom_Brd'; }
	}
	/**
	 * 回应解散房间
	 */
	export class ReplyDissolveRoom_C {
		/**
		 * 1表示同意
		 */
		isAgree: number;
		GetType(): string { return 'Cmd.ReplyDissolveRoom_C'; }
	}
	export class ReplyDissolveRoom_S {
		resultCode: number;
		desc: string;
		GetType(): string { return 'Cmd.ReplyDissolveRoom_S'; }
	}
	export class ReplyDissolveRoom_Brd {
		uid: number;
		/**
		 * 1表示同意
		 */
		isAgree: number;
		GetType(): string { return 'Cmd.ReplyDissolveRoom_Brd'; }
	}
	/**
	 * 成功解散房间
	 */
	export class SuccessDissolveRoom_Brd {
		/**
		 * 所有同意解散的玩家昵称
		 */
		agreeUsers: string[];
		/**
		 * 所有不同意解散的玩家称
		 */
		disagreeUsers: string[];
		/**
		 * 是否解散成功
		 */
		bOk: boolean;
		GetType(): string { return 'Cmd.SuccessDissolveRoom_Brd'; }
	}
	/**
	 * 主动上报客户端IP
	 */
	export class ClientIpCmd_C {
		ip: number;
		port: number;
		/**
		 * 127.0.0.1
		 */
		ipstr: string;
		/**
		 * 127.0.0.1:1000
		 */
		ipport: string;
		GetType(): string { return 'Cmd.ClientIpCmd_C'; }
	}
	/**
	 * 通知前端上发获取经度纬度
	 */
	export class GetGPSLocationCmd_S {
		GetType(): string { return 'Cmd.GetGPSLocationCmd_S'; }
	}
	/**
	 * gps获取经度纬度
	 */
	export class GetGPSLocationCmd_C {
		/**
		 * 纬度
		 */
		lat: number;
		/**
		 * 经度
		 */
		lng: number;
		/**
		 * 详细地址
		 */
		address: string;
		GetType(): string { return 'Cmd.GetGPSLocationCmd_C'; }
	}
	/**
	 * gps获取经度纬度返回
	 */
	export class ClientGpsLobbyCmd_S {
		/**
		 * 纬度
		 */
		lat: number;
		/**
		 * 经度
		 */
		lng: number;
		/**
		 * 详细地址
		 */
		address: string;
		GetType(): string { return 'Cmd.ClientGpsLobbyCmd_S'; }
	}
	/**
	 * gps获取经度纬度广播
	 */
	export class GetGPSLocationCmd_Brd {
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 纬度
		 */
		lat: number;
		/**
		 * 经度
		 */
		lng: number;
		/**
		 * 详细地址
		 */
		address: string;
		GetType(): string { return 'Cmd.GetGPSLocationCmd_Brd'; }
	}
	export class IpGPS {
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 纬度
		 */
		lat: number;
		/**
		 * 经度
		 */
		lng: number;
		ip: number;
		/**
		 * 127.0.0.1
		 */
		ipstr: string;
		GetType(): string { return 'Cmd.IpGPS'; }
	}
	/**
	 * 请求ip和gps获取经度纬度
	 */
	export class RequestIpGPSCmd_C {
		/**
		 * 房间id,默认不填就是请求自己的
		 */
		roomId: number;
		GetType(): string { return 'Cmd.RequestIpGPSCmd_C'; }
	}
	/**
	 * 返回ip和gps获取经度纬度
	 */
	export class ReturnIpAndGPSCmd_S {
		/**
		 * 位置信息
		 */
		list: IpGPS[];
		GetType(): string { return 'Cmd.ReturnIpAndGPSCmd_S'; }
	}
	export class JsonCompressKey {
		key: string;
		/**
		 * 嵌套描述
		 */
		json: JsonCompressKey[];
		GetType(): string { return 'Cmd.JsonCompressKey'; }
	}
	/**
	 * json压缩约定消息
	 */
	export class JsonCompressNullUserPmd_CS {
		key: string;
		json: JsonCompressKey[];
		/**
		 * 0表示不省略,1表示省略,默认不省略,default省略,{} ,&quot;&quot;,0
		 */
		omit: number;
		/**
		 * 0表示重置,1表示添加
		 */
		add: number;
		/**
		 * 消息列表
		 */
		msglist: string[];
		GetType(): string { return 'Cmd.JsonCompressNullUserPmd_CS'; }
	}
	/**
	 * 语音聊天
	 */
	export class VoiceChat_C {
		/**
		 * 语音时长
		 */
		time: string;
		/**
		 * 对应文字
		 */
		words: string;
		/**
		 * 对应地址
		 */
		url: string;
		roomId: number;
		GetType(): string { return 'Cmd.VoiceChat_C'; }
	}
	export class VoiceChat_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 信息
		 */
		desc: string;
		GetType(): string { return 'Cmd.VoiceChat_S'; }
	}
	export class VoiceChat_Brd {
		/**
		 * 语音时长
		 */
		time: string;
		/**
		 * 对应文字
		 */
		words: string;
		/**
		 * 对应地址
		 */
		url: string;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 发送语音的玩家id
		 */
		uid: number;
		GetType(): string { return 'Cmd.VoiceChat_Brd'; }
	}
	export class VoiceObj {
		/**
		 * 语音时长
		 */
		time: string;
		/**
		 * 对应文字
		 */
		words: string;
		/**
		 * 对应地址
		 */
		url: string;
		/**
		 * 发送聊天的玩家id
		 */
		uid: number;
		/**
		 * 发送聊天时的时间
		 */
		timestamp: string;
		GetType(): string { return 'Cmd.VoiceObj'; }
	}
	/**
	 * 语音记录
	 */
	export class VoiceChatRecord_C {
		GetType(): string { return 'Cmd.VoiceChatRecord_C'; }
	}
	export class VoiceChatRecord_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 信息
		 */
		desc: string;
		/**
		 * 语音记录
		 */
		records: VoiceObj[];
		GetType(): string { return 'Cmd.VoiceChatRecord_S'; }
	}
	export class CommonChat_C {
		/**
		 * 语音id
		 */
		voiceId: number;
		/**
		 * 文字聊天内容
		 */
		words: string;
		roomId: number;
		GetType(): string { return 'Cmd.CommonChat_C'; }
	}
	export class CommonChat_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 信息
		 */
		desc: string;
		GetType(): string { return 'Cmd.CommonChat_S'; }
	}
	export class CommonChat_Brd {
		/**
		 * 语音id
		 */
		voiceId: number;
		/**
		 * 发送语音的玩家id
		 */
		uid: number;
		/**
		 * 文字聊天内容
		 */
		words: string;
		GetType(): string { return 'Cmd.CommonChat_Brd'; }
	}
	export class SetInfo {
		/**
		 * 音效 false:关 true:开
		 */
		sound: boolean;
		/**
		 * 音乐 false:关 true:开
		 */
		music: boolean;
		/**
		 * 音控 false:关 true:开
		 */
		control: boolean;
		/**
		 * 方言 1:普能话 2:龙岩话
		 */
		dialect: number;
		GetType(): string { return 'Cmd.SetInfo'; }
	}
	/**
	 * 音效音乐设置
	 */
	export class SoundSet_C {
		/**
		 * 音效音乐等设置信息
		 */
		setInfo: SetInfo;
		GetType(): string { return 'Cmd.SoundSet_C'; }
	}
	/**
	 * 获取玩家头像
	 */
	export class GetUserHeadList_C {
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 玩家id
		 */
		uidList: number[];
		GetType(): string { return 'Cmd.GetUserHeadList_C'; }
	}
	export class UserHead {
		/**
		 * 玩家id
		 */
		uid: number;
		headUrl: string;
		GetType(): string { return 'Cmd.UserHead'; }
	}
	export class GetUserHeadList_S {
		/**
		 * 玩家列表
		 */
		headList: UserHead[];
		GetType(): string { return 'Cmd.GetUserHeadList_S'; }
	}
	/**
	 * 获取玩家列表信息
	 */
	export class GetUserList_C {
		GetType(): string { return 'Cmd.GetUserList_C'; }
	}
	export class GetUserList_S {
		/**
		 * 玩家列表
		 */
		userSet: UserBaseInfo[];
		GetType(): string { return 'Cmd.GetUserList_S'; }
	}
	export class CustomBetChipsCmd_C {
		betchips: number[];
		GetType(): string { return 'Cmd.CustomBetChipsCmd_C'; }
	}
	/**
	 * 请求玩家面板信息
	 */
	export class GetPersonalPanel_C {
		/**
		 * 玩家id
		 */
		uid: number;
		GetType(): string { return 'Cmd.GetPersonalPanel_C'; }
	}
	export class GetPersonalPanel_S {
		/**
		 * 玩家基本信息
		 */
		userInfo: UserBaseInfo;
		resultCode: number;
		GetType(): string { return 'Cmd.GetPersonalPanel_S'; }
	}
	/**
	 * 通知客户端可以显示准备按钮
	 */
	export class ShowPrepareBtnRoom_S {
		GetType(): string { return 'Cmd.ShowPrepareBtnRoom_S'; }
	}
	/**
	 * 通知客户端可以显示提前开始按钮了
	 */
	export class ShowChangeUserNbrRoom_S {
		GetType(): string { return 'Cmd.ShowChangeUserNbrRoom_S'; }
	}
	/**
	 * 请求切换房间人数
	 */
	export class RequestChangeUserNbrRoom_C {
		resultCode: number;
		desc: string;
		GetType(): string { return 'Cmd.RequestChangeUserNbrRoom_C'; }
	}
	/**
	 * 请求切换房间人数
	 */
	export class RequestChangeUserNbrRoom_Brd {
		uid: number;
		/**
		 * 目标人数
		 */
		userNbr: number;
		resultCode: number;
		desc: string;
		/**
		 * 当前房间用户提前开局状态
		 */
		users: UserDissolveState[];
		GetType(): string { return 'Cmd.RequestChangeUserNbrRoom_Brd'; }
	}
	export class ReturnChangeUserNbrRoom_C {
		/**
		 * 1表示同意
		 */
		isAgree: number;
		/**
		 * 目标人数
		 */
		userNbr: number;
		resultCode: number;
		desc: string;
		GetType(): string { return 'Cmd.ReturnChangeUserNbrRoom_C'; }
	}
	export class ReturnChangeUserNbrRoom_Brd {
		uid: number;
		/**
		 * 1表示同意 没有及不同意
		 */
		isAgree: number;
		GetType(): string { return 'Cmd.ReturnChangeUserNbrRoom_Brd'; }
	}
	/**
	 * 请求刷新座位积分
	 */
	export class UpdatePointSeatRoom_S {
		uid: number;
		/**
		 * 可能是积分,金币或者钻石
		 */
		point: number;
		/**
		 * 奖池,捕鱼专用
		 */
		jackpot: number;
		/**
		 * 1表示麻将,2表示斗地主类(用了pokerLib的)3表示跑得快,4表示十三水,5表示三公,不填就兼容老业务
		 */
		typ: number;
		GetType(): string { return 'Cmd.UpdatePointSeatRoom_S'; }
	}
	/**
	 * 请求换坐
	 */
	export class RequestChangeSeatRoom_C {
		seatid: number;
		GetType(): string { return 'Cmd.RequestChangeSeatRoom_C'; }
	}
	/**
	 * 请求换坐给对方客户端
	 */
	export class RequestChangeSeatRoom_S {
		/**
		 * 玩家id
		 */
		fromuid: number;
		GetType(): string { return 'Cmd.RequestChangeSeatRoom_S'; }
	}
	/**
	 * 对方回应,成功后直接操作
	 */
	export class ReturnChangeSeatRoom_C {
		/**
		 * 玩家id
		 */
		fromuid: number;
		/**
		 * 1表示同意
		 */
		isAgree: number;
		GetType(): string { return 'Cmd.ReturnChangeSeatRoom_C'; }
	}
	/**
	 * 请求排行榜
	 */
	export class GetRankingListRoomCmd_C {
		GetType(): string { return 'Cmd.GetRankingListRoomCmd_C'; }
	}
	/**
	 * +
	 */
	export class RankInfo {
		/**
		 * 玩家id
		 */
		uid: number;
		/**
		 * 玩家昵称
		 */
		nickname: string;
		/**
		 * 头像地址
		 */
		headUrl: string;
		/**
		 * 排行值
		 */
		point: number;
		/**
		 * 玩家上一局输
		 */
		profit: number;
		/**
		 * 玩家总成绩
		 */
		totalProfit: number;
		GetType(): string { return 'Cmd.RankInfo'; }
	}
	export class GetRankingListRoomCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 信息
		 */
		desc: string;
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 排行榜数据
		 */
		rankInfo: RankInfo[];
		GetType(): string { return 'Cmd.GetRankingListRoomCmd_S'; }
	}
	/**
	 * 排行榜广播
	 */
	export class GetRankingListRoomCmd_Brd {
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 排行榜数据
		 */
		rankInfo: RankInfo[];
		GetType(): string { return 'Cmd.GetRankingListRoomCmd_Brd'; }
	}
	/**
	 *  C-&gt;S 托管请求
	 *  S-&gt;C 托管状态更新
	 */
	export class HostUpdateRoomCmd_CS {
		yesOrNo: boolean;
		uid: number;
		opList: number[];
		/**
		 * 0表示取消托管,1表示普通托管,2表示高智商托管
		 */
		hostType: number;
		GetType(): string { return 'Cmd.HostUpdateRoomCmd_CS'; }
	}
	/**
	 *  Echo应答,服务器探测玩家是否活着
	 *  TODO,还未使用,待升级
	 */
	export class ServerEchoRoomCmd_SC {
		/**
		 * echo标志
		 */
		id: number;
		/**
		 * echo描述,原封不动返回
		 */
		desc: string;
		GetType(): string { return 'Cmd.ServerEchoRoomCmd_SC'; }
	}
	/**
	 *  Echo应答,客户端探测服务器
	 *  TODO,还未使用,待升级
	 */
	export class ClientEchoRoomCmd_SC {
		/**
		 * echo标志
		 */
		id: number;
		/**
		 * echo描述,原封不动返回
		 */
		desc: string;
		/**
		 * 是否有房间最终结算
		 */
		final: boolean;
		GetType(): string { return 'Cmd.ClientEchoRoomCmd_SC'; }
	}
	/**
	 * 在线状态更新
	 */
	export class OnlineStateRoomCmd_S {
		uid: number;
		state: OnlineState;
		GetType(): string { return 'Cmd.OnlineStateRoomCmd_S'; }
	}
	/**
	 *  C-&gt;S 离开房间请求
	 *  S-&gt;C 离开房间通知
	 */
	export class LeaveRoomCmd_CS {
		uid: number;
		roomId: number;
		GetType(): string { return 'Cmd.LeaveRoomCmd_CS'; }
	}
	/**
	 *  C-&gt;S 准备/取消准备请求
	 *  S-&gt;C 更新准备状态
	 */
	export class ReadyUpdateRoomCmd_CS {
		yesOrNo: boolean;
		uid: number;
		/**
		 * 1表示重新洗牌
		 */
		shuffle: number;
		/**
		 * 推注
		 */
		pushBet: number;
		GetType(): string { return 'Cmd.ReadyUpdateRoomCmd_CS'; }
	}
	/**
	 * 系统通知
	 */
	export class SysMessageCmd_S {
		msgType: SysMessageCmd_S.MsgType;
		/**
		 * 文本
		 */
		msg: string;
		code: number;
		GetType(): string { return 'Cmd.SysMessageCmd_S'; }
	}
	export module SysMessageCmd_S {
		export enum MsgType {
			/**
			 * 文本消息
			 */
			Text = 1,
			/**
			 * 解散房间
			 */
			DissolveRoom = 2,
			/**
			 * 返回到大厅
			 */
			BackToLobby = 3,
			/**
			 * 提前开局
			 */
			StartInAdvance = 4,
			/**
			 * 弹框
			 */
			Bounce = 5,
			/**
			 * 余额不足
			 */
			NotEnoughMoney = 6,
			/**
			 * 创建房间成功
			 */
			CreateRoom = 7,
			/**
			 * 重新进入大厅
			 */
			EnterLobby = 8
		}
	}
	/**
	 *  C-&gt;S 查询服务器当前逻辑时间
	 *  S-&gt;C 服务器当前逻辑时间
	 */
	export class GameTimeSyncCmd_CS {
		/**
		 * unix时间戳
		 */
		stamp: number;
		GetType(): string { return 'Cmd.GameTimeSyncCmd_CS'; }
	}
	/**
	 * 请求更换房间消息
	 */
	export class ChangeRoomCmd_C {
		GetType(): string { return 'Cmd.ChangeRoomCmd_C'; }
	}
	/**
	 * 换座
	 */
	export class ChangeSeatRoomCmd_C {
		/**
		 * 目标座位
		 */
		pos: number;
		GetType(): string { return 'Cmd.ChangeSeatRoomCmd_C'; }
	}
	/**
	 * +
	 */
	export class GiftsInfo {
		/**
		 * 发送玩家Id
		 */
		fromUid: number;
		/**
		 * 接收玩家Id
		 */
		toUid: number;
		/**
		 * 礼物Id
		 */
		giftsId: number;
		/**
		 * 礼物数量
		 */
		giftsNum: number;
		GetType(): string { return 'Cmd.GiftsInfo'; }
	}
	/**
	 * 送礼
	 */
	export class SendGiftRoomCmd_C {
		/**
		 * 礼物内容
		 */
		gift: GiftsInfo;
		roomId: number;
		GetType(): string { return 'Cmd.SendGiftRoomCmd_C'; }
	}
	export class SendGiftRoomCmd_S {
		resultCode: number;
		gift: GiftsInfo;
		GetType(): string { return 'Cmd.SendGiftRoomCmd_S'; }
	}
	export class SendGiftRoomCmd_Brd {
		/**
		 * 送礼玩家
		 */
		gift: GiftsInfo;
		/**
		 * 玩家剩余钻石
		 */
		diamond: number[];
		GetType(): string { return 'Cmd.SendGiftRoomCmd_Brd'; }
	}
	export class SendGiftPokerCmd_C {
		/**
		 * 礼物内容
		 */
		gift: GiftsInfo;
		GetType(): string { return 'Cmd.SendGiftPokerCmd_C'; }
	}
	export class SendGiftPokerCmd_S {
		resultCode: number;
		desc: string;
		GetType(): string { return 'Cmd.SendGiftPokerCmd_S'; }
	}
	export class SendGiftPokerCmd_Brd {
		/**
		 * 送礼玩家
		 */
		gift: GiftsInfo;
		GetType(): string { return 'Cmd.SendGiftPokerCmd_Brd'; }
	}
	/**
	 * 大厅送礼 客户端大厅相同的协议会有问题
	 */
	export class SendGiftLobbyCmd_C {
		/**
		 * 礼物内容
		 */
		gift: GiftsInfo;
		GetType(): string { return 'Cmd.SendGiftLobbyCmd_C'; }
	}
	export class SendGiftLobbyCmd_S {
		resultCode: number;
		gift: GiftsInfo;
		userInfo: UserBaseInfo;
		GetType(): string { return 'Cmd.SendGiftLobbyCmd_S'; }
	}
	/**
	 * 离开房间
	 */
	export class LeaveRoomCmd_C {
		/**
		 * 离开状态 0 返回大厅 1 暂时离开 2 断线
		 */
		state: number;
		GetType(): string { return 'Cmd.LeaveRoomCmd_C'; }
	}
	export class LeaveRoomCmd_S {
		resultCode: number;
		desc: string;
		GetType(): string { return 'Cmd.LeaveRoomCmd_S'; }
	}
	/**
	 * 广播玩家离开房间
	 */
	export class LeaveRoomCmd_Brd {
		resultCode: number;
		desc: string;
		uid: number;
		state: number;
		GetType(): string { return 'Cmd.LeaveRoomCmd_Brd'; }
	}
	/**
	 * 认输
	 */
	export class GiveupRoomCmd_C {
		/**
		 * 认输数量,认输时需要输入认输数量
		 */
		num: number;
		GetType(): string { return 'Cmd.GiveupRoomCmd_C'; }
	}
	/**
	 *  发起视频聊天
	 *  C-&gt;S 请求视频聊天
	 *  S-&gt;C 请求视频聊天通知
	 */
	export class VideoChatRequestCmd_CS {
		uid: number;
		GetType(): string { return 'Cmd.VideoChatRequestCmd_CS'; }
	}
	/**
	 *  C-&gt;S 请求视频聊天回复请求
	 *  S-&gt;C 请求视频聊天回复通知
	 */
	export class VideoChatReturnCmd_CS {
		uid: number;
		/**
		 * 是否接受
		 */
		result: boolean;
		GetType(): string { return 'Cmd.VideoChatReturnCmd_CS'; }
	}
	/**
	 *  C-&gt;S 视频聊天关闭请求
	 *  S-&gt;C 视频聊天关闭通知
	 */
	export class VideoChatShutdownCmd_CS {
		uid: number;
		GetType(): string { return 'Cmd.VideoChatShutdownCmd_CS'; }
	}
	/**
	 * 聊天消息内容
	 */
	export class ChatMessageInfo {
		/**
		 * 文本/表情/语音url
		 */
		msg: string;
		/**
		 * 聊天内容类型
		 */
		msgType: ChatMessageInfo.MsgType;
		/**
		 * 时间
		 */
		time: number;
		/**
		 * 语音时长
		 */
		voiceTime: number;
		/**
		 * 发言人ID
		 */
		speakerUid: number;
		/**
		 * 发言人名字
		 */
		speakerName: string;
		/**
		 * 发言人头像
		 */
		speakerHeadUrl: string;
		/**
		 * 频道ID
		 */
		channelId: number;
		/**
		 * 好友ID
		 */
		friendUid: number;
		/**
		 * 频道类型
		 */
		channelType: ChatMessageInfo.ChannelType;
		GetType(): string { return 'Cmd.ChatMessageInfo'; }
	}
	export module ChatMessageInfo {
		/**
		 * 聊天内容类型
		 */
		export enum MsgType {
			/**
			 * 文本
			 */
			Text = 1,
			/**
			 * 语音
			 */
			Voice = 2,
			/**
			 * 表情
			 */
			Face = 3,
			/**
			 * 德州扑克创建房间信息
			 */
			TexasConfig = 4
		}
	}
	export module ChatMessageInfo {
		/**
		 * 聊天频道
		 */
		export enum ChannelType {
			/**
			 * 房间
			 */
			Room = 1,
			/**
			 * 俱乐部
			 */
			Club = 2,
			/**
			 * 两个好友聊天
			 */
			Friend = 3
		}
	}
	/**
	 *  C-&gt;S 聊天消息
	 *  S-&gt;C 聊天消息
	 */
	export class ChatCmd_CS {
		chat: ChatMessageInfo;
		chatList: ChatMessageInfo[];
		GetType(): string { return 'Cmd.ChatCmd_CS'; }
	}
	/**
	 * 匹配组成员信息
	 */
	export class MatchGroupMemberInfo {
		uid: number;
		nickname: string;
		/**
		 * 空或0表示游客,1表示白名单,2表示黑名单,3表示黄名单,4表示副群主
		 */
		type: number;
		/**
		 * 状态,OnlineState
		 */
		state: number;
		/**
		 * 积分
		 */
		score: number;
		/**
		 * 申请加入时使用,冗余
		 */
		matchId: number;
		/**
		 * 头像url,茶馆要用
		 */
		headUrl: string;
		/**
		 * 输次
		 */
		loseNum: number;
		/**
		 * 赢次
		 */
		winNum: number;
		/**
		 * VIP等级
		 */
		vip: number;
		/**
		 * 当天大赢次
		 */
		bigWinNum: number;
		/**
		 * 总上桌次数
		 */
		playNum: number;
		/**
		 * 昨日积分
		 */
		lastScore: number;
		/**
		 * 上下分
		 */
		matchPoint: number;
		/**
		 * 成长属性,西安先用
		 */
		growth: GrowthAttr;
		/**
		 * 本周积分
		 */
		scoreWeek: number;
		/**
		 * 本月积分
		 */
		scoreMon: number;
		/**
		 * 总积分
		 */
		scoreAll: number;
		/**
		 * 备注
		 */
		desc: string;
		/**
		 * 微信联系方式
		 */
		wechat: string;
		/**
		 * 金豆场用
		 */
		chips: number;
		/**
		 * 总投注额
		 */
		allBets: number;
		/**
		 * 所在房间号,茶馆和比赛用
		 */
		roomId: number;
		/**
		 * 备注(sz使用)
		 */
		note: string;
		/**
		 * 税收贡献(未提取税收贡献)
		 */
		tax: number;
		/**
		 * 成员类型(sz使用) 1:群主 2:副群主 3:合伙人,4:普通成员是
		 */
		membertype: number;
		/**
		 * 最近活跃时间,用分钟倒计时不如60,表示1小时
		 */
		lastMin: number;
		/**
		 * 积分列表（今日、昨日、前日）
		 */
		scores: number[];
		/**
		 * 大赢家次数列表(今日、昨日、前日)
		 */
		winNums: number[];
		/**
		 * 联盟id
		 */
		leagueId: number;
		/**
		 * 昨日局数
		 */
		playNumY: number;
		/**
		 * 昨日大赢次
		 */
		bigWinNumY: number;
		/**
		 * 总税收贡献
		 */
		taxA: number;
		/**
		 * 当前红花数
		 */
		flower: number;
		/**
		 * 如果有换坐功能,需要指定位置
		 */
		pos: number;
		/**
		 * 备注昵称
		 */
		remark: string;
		/**
		 * 备注分数(今日、昨日、前日) -- 该字段的取值范围为 -999 -- 999   特殊填充：如果为-10000则直接不显示
		 */
		remarkPoints: number[];
		/**
		 * 时间
		 */
		time: number;
		/**
		 * 推荐的合伙人数据
		 */
		partner: MatchGroupMemberInfo;
		/**
		 * 合伙人状态(nil/1 正常、被踢出了的)
		 */
		partnerState: number;
		/**
		 * 房间数据(今日、昨日、前日)
		 */
		roomNbrs: number[];
		/**
		 * 俱乐部 积分输赢
		 */
		lose: number;
		/**
		 * 俱乐部 积分输赢
		 */
		win: number;
		/**
		 * 俱乐部 局数
		 */
		round_num: number;
		/**
		 * 俱乐部 开房数
		 */
		room_num: number;
		/**
		 * 俱乐部 大赢家数
		 */
		big_win: number;
		/**
		 * 俱乐部 历史输赢
		 */
		his_win: number;
		/**
		 * 俱乐部 历史输赢
		 */
		his_lose: number;
		/**
		 * 俱乐部 历史局数
		 */
		his_round_num: number;
		/**
		 * 俱乐部 历史开房数
		 */
		his_room_num: number;
		/**
		 * 俱乐部 历史大赢家数
		 */
		his_big_win: number;
		/**
		 * 玩家被加入小黑屋的时间戳
		 */
		in_dark_time: number;
		/**
		 * 玩家加入俱乐部的时间戳
		 */
		in_club_time: number;
		/**
		 * 1表示有对该玩家进行大联盟准入的权限
		 */
		leaguePermission: number;
		/**
		 * 分成比例
		 */
		proportion: number;
		/**
		 * 离线时间
		 */
		offlineTime: number;
		GetType(): string { return 'Cmd.MatchGroupMemberInfo'; }
	}
	/**
	 * 楼层内的各层玩法
	 */
	export class LeaguePlayFloorInfo {
		/**
		 * 当前玩法层id
		 */
		playFloorId: number;
		/**
		 * 游戏id  -- 兼容俱乐部模式 需要显示游戏名称和具体玩法描述
		 */
		gameId: number;
		/**
		 * 游戏名称
		 */
		gameName: string;
		/**
		 * 最大房间内人数
		 */
		userNbr: number;
		/**
		 * 玩法描述
		 */
		playTypeDesc: string;
		/**
		 * 当前游戏人数
		 */
		curUserNbr: number;
		/**
		 * 底注
		 */
		baseFlower: number;
		/**
		 * 进房最低下限
		 */
		lowerLimitFlower: number;
		GetType(): string { return 'Cmd.LeaguePlayFloorInfo'; }
	}
	/**
	 * 大联盟的楼层
	 */
	export class LeagueFloorInfo {
		/**
		 * 当前楼层id
		 */
		floorId: number;
		/**
		 * 游戏类型 暂时有 0/1/3 麻将、扑克、字牌
		 */
		gameType: number;
		/**
		 * 当前游戏人数
		 */
		curUserNbr: number;
		/**
		 * 当前模式 0:坐桌 1:匹配
		 */
		matchDesk: number;
		GetType(): string { return 'Cmd.LeagueFloorInfo'; }
	}
	/**
	 * 楼层基本信息
	 */
	export class FloorInfo {
		/**
		 * 当前楼层id
		 */
		floorId: number;
		/**
		 * 游戏id  -- 兼容俱乐部模式 需要显示游戏名称和具体玩法描述
		 */
		gameId: number;
		/**
		 * 游戏名称
		 */
		gameName: string;
		/**
		 * 最大局数
		 */
		gameNbr: number;
		/**
		 * 最大房间内人数
		 */
		userNbr: number;
		/**
		 * 玩法描述
		 */
		playTypeDesc: string;
		/**
		 * 红花玩法描述
		 */
		flowerTypeDesc: string;
		/**
		 * 楼层名称
		 */
		floorName: string;
		GetType(): string { return 'Cmd.FloorInfo'; }
	}
	/**
	 * 匹配组信息
	 */
	export class MathGroup {
		/**
		 * 匹配id
		 */
		matchId: number;
		/**
		 * 分享数据
		 */
		shareInfo: ShareInfo;
		/**
		 * gameGatewayUrl,尽量让玩家跟房主一个url,防止被攻击
		 */
		url: string;
		/**
		 * 匹配组主人ID
		 */
		ownerid: number;
		/**
		 * 匹配组主人名称
		 */
		ownername: string;
		/**
		 * 本匹配号所产生的所有房间号
		 */
		roomList: MathGroupRoomInfo[];
		/**
		 * 状态,0表示正常,1表示停止进人(终止)
		 */
		state: number;
		/**
		 * 接客倒计时
		 */
		lifeTimeSec: number;
		/**
		 * 销毁倒计时
		 */
		delTimeSec: number;
		/**
		 * 排队人数(已改为白名单人数,排队人数已无意义)
		 */
		waitUserNum: number;
		/**
		 * 游戏人数
		 */
		gameingUserNum: number;
		/**
		 * 当前轮数,赛事用
		 */
		step: number;
		/**
		 * 匹配号名字
		 */
		matchName: string;
		/**
		 * 副匹配主id
		 */
		masterid: string;
		/**
		 * 是否公开数据
		 */
		public: number;
		/**
		 * 排队中的成员信息
		 */
		waitUserList: MatchGroupMemberInfo[];
		/**
		 * 最大局数
		 */
		gameNbr: number;
		/**
		 * 最大房间内人数
		 */
		userNbr: number;
		/**
		 * 当前匹配号开了多少个房间了
		 */
		curRoomNbr: number;
		/**
		 * 游戏id  -- 兼容俱乐部模式 需要显示游戏名称和具体玩法描述
		 */
		gameId: number;
		/**
		 * 玩法描述 -- 兼容俱乐部模式 需要显示游戏名称和具体玩法描述
		 */
		playTypeDesc: string;
		/**
		 * 1表示游客模式访问
		 */
		guest: number;
		/**
		 * 4个元素的数组 分别表示  今天、昨天、7天内、30天内的 开房数
		 */
		openNbrs: number[];
		/**
		 * 底注
		 */
		bottomPoint: number;
		/**
		 * 入场
		 */
		enteringPoint: number;
		/**
		 * 离场
		 */
		leavingPoint: number;
		/**
		 * 游戏名称也发下去  -- 兼容俱乐部模式 需要显示游戏名称和具体玩法描述
		 */
		gameName: string;
		/**
		 * 当前剩余未提取税收
		 */
		curTax: number;
		/**
		 * 历史总税收
		 */
		allTax: number;
		/**
		 * 金币转基金,只能创建是设定,中途不能修改
		 */
		gold2MatchPoint: number;
		/**
		 * 当前楼层id
		 */
		floorId: number;
		/**
		 * 当前楼层列表数据 只需要回各楼层的基本玩法数据即可
		 */
		floorList: FloorInfo[];
		/**
		 * 俱乐部成员当前在线人数
		 */
		onlineUserNum: number;
		/**
		 * 俱乐部公告
		 */
		clubNotice: string;
		/**
		 * 0表示匹配模式,1表示客家俱乐部模式,2表示茶馆(包厢)模式,3表示茶楼模式
		 */
		clubType: number;
		/**
		 * 摘花玩法描述 -- 若该字段不为nil 则表示该俱乐部存在摘花玩法
		 */
		flowerTypeDesc: string;
		/**
		 * 俱乐部成员数量
		 */
		memberNum: number;
		/**
		 * 第二个副匹配主id
		 */
		masterid2: string;
		/**
		 * 单独新增个字段告诉前端 这个俱乐部是否初始化过红花了 1为已初始化
		 */
		hasInitFlower: number;
		/**
		 * 大赢家的条件 如果存在该字段 则俱乐部中大赢家的统计需要玩家所赢分数大于该分数 才认为是大赢家
		 */
		winnerConditions: number;
		/**
		 * 是否为合伙人 1表示是合伙人 当前俱乐部需要显示组员按钮。
		 */
		isPartner: number;
		/**
		 * 暂停定时器
		 */
		pauseTimer: number;
		/**
		 * 恢复定时器
		 */
		restoreTimer: number;
		/**
		 * 当前楼层数据
		 */
		leagueFloorInfo: LeagueFloorInfo;
		/**
		 * 当前楼层的各种玩法
		 */
		playFloorList: LeaguePlayFloorInfo[];
		/**
		 * SZ大联盟:剩余总钻石数
		 */
		diamond: number;
		/**
		 * SZ大联盟:当前请求的玩家身份 0/1/2/3/4 普通成员、盟主、副盟主、群主、队长
		 */
		identity: number;
		/**
		 * SZ大联盟:当前玩家疲劳值
		 */
		flower: number;
		/**
		 * 存在待处理数量
		 */
		beprocessNbr: number;
		GetType(): string { return 'Cmd.MathGroup'; }
	}
	/**
	 * 匹配组房间信息
	 */
	export class MathGroupRoomInfo {
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 成员信息
		 */
		list: MatchGroupMemberInfo[];
		/**
		 * 开启时间unix sec
		 */
		beginTime: number;
		/**
		 * 结束时间unix sec
		 */
		endTime: number;
		/**
		 * 当前局数
		 */
		curGameNbr: number;
		/**
		 * 最大局数
		 */
		gameNbr: number;
		/**
		 * 游戏id
		 */
		gameId: number;
		/**
		 * 分享数据,ActiveCreateRoomCmd_C时用,山寨下
		 */
		shareInfo: ShareInfo;
		/**
		 * 当前房间内人数
		 */
		curUserNbr: number;
		/**
		 * 最大房间内人数
		 */
		userNbr: number;
		/**
		 * globalRoomId
		 */
		gid: number;
		/**
		 * 不填或0表示准备中,1表示已开局,2表示已结束
		 */
		state: number;
		/**
		 * 玩法描述
		 */
		playTypeDesc: string;
		/**
		 * 当前所属楼层
		 */
		floorId: number;
		/**
		 * 游戏名称
		 */
		gameName: string;
		/**
		 * 联盟用
		 */
		matchId: string;
		/**
		 * 房间消耗了多少钻石
		 */
		diamondFee: number;
		/**
		 * 当前所属玩法层id
		 */
		playFloorId: number;
		/**
		 * 进房最低下限
		 */
		lowerLimitFlower: number;
		GetType(): string { return 'Cmd.MathGroupRoomInfo'; }
	}
	/**
	 * 整个匹配组的统计数据
	 */
	export class MathGroupstatisticInfo {
		/**
		 *  typ为1时请求的填充为：4个元素的数组 分别表示  今天、昨天、7天内、30天内的 开房数
		 *  typ为2时请求的填充为：总房数(今日、昨日、前日)
		 */
		openNbrs: number[];
		/**
		 * 大赢家数（今日、昨日、前日）
		 */
		winNbrs: number[];
		GetType(): string { return 'Cmd.MathGroupstatisticInfo'; }
	}
	/**
	 * 地址
	 */
	export class Address {
		/**
		 * 国家
		 */
		country: string;
		/**
		 * 省
		 */
		province: string;
		/**
		 * 市
		 */
		city: string;
		GetType(): string { return 'Cmd.Address'; }
	}
	export class DonateData {
		regulationList: StatisticsRoundData[];
		fix: boolean;
		devide: number[];
		GetType(): string { return 'Cmd.DonateData'; }
	}
	export class ClubInfo {
		clubId: number;
		/**
		 * 地址
		 */
		address: Address;
		name: string;
		memberList: ClubInfo.Member[];
		/**
		 * 创建者
		 */
		founder: number;
		/**
		 * 创建时间
		 */
		createdAt: number;
		/**
		 * 签名
		 */
		signature: string;
		/**
		 * 成员人数上限
		 */
		memberLimit: number;
		/**
		 * 人数
		 */
		memberNum: number;
		/**
		 * 俱乐部头像
		 */
		headurl: string;
		/**
		 * 创建者信息
		 */
		founderInfo: UserBaseInfo;
		/**
		 * 公告
		 */
		announcement: string;
		/**
		 * 职位权限
		 */
		postPermission: ClubInfo.PostPermission[];
		/**
		 * 基金
		 */
		fund: number;
		myMember: ClubInfo.Member;
		/**
		 * 私密
		 */
		private: boolean;
		donatedata: DonateData;
		unionList: number[];
		level: number;
		/**
		 * 房间数
		 */
		gameNum: number;
		/**
		 * 最大的代理层级
		 */
		maxAgentLayer: number;
		/**
		 * 是否app端
		 */
		isApp: boolean;
		/**
		 * 提示
		 */
		tips: MsgType[];
		GetType(): string { return 'Cmd.ClubInfo'; }
	}
	export module ClubInfo {
		/**
		 * 权限
		 */
		export enum Permission {
			/**
			 * 开局
			 */
			CreateRoom = 1,
			/**
			 * 审核成员申请
			 */
			MemeberJoin = 2,
			/**
			 * 查看报表
			 */
			CheckReport = 3,
			/**
			 * 资金管理
			 */
			FundManage = 4
		}
	}
	export module ClubInfo {
		/**
		 * 职位
		 */
		export enum Post {
			Man = 1000,
			Agent = 1500,
			Admin = 2000,
			Founder = 3000
		}
	}
	export module ClubInfo {
		/**
		 * 成员
		 */
		export class Member {
			user: UserBaseInfo;
			/**
			 * 职位
			 */
			post: ClubInfo.Post;
			clubId: number;
			/**
			 * 消息
			 */
			msg: string;
			/**
			 * 筹码
			 */
			chips: number;
			/**
			 * 创建时间
			 */
			createdAt: number;
			/**
			 * 战绩
			 */
			statistics: StatisticsRoundData;
			/**
			 * 代理信用值
			 */
			credit: number;
			/**
			 * 上线
			 */
			upline: number;
			/**
			 * 下线数量
			 */
			downlineNum: number;
			/**
			 * 代理层级
			 */
			layer: number;
			/**
			 * 是否app端
			 */
			isApp: boolean;
			/**
			 * 钻石
			 */
			diamond: number;
			GetType(): string { return 'Cmd.ClubInfo.Member'; }
		}
	}
	export module ClubInfo {
		/**
		 * 职位所拥有的权限
		 */
		export class PostPermission {
			post: ClubInfo.Post;
			permission: ClubInfo.Permission[];
			GetType(): string { return 'Cmd.ClubInfo.PostPermission'; }
		}
	}
	export module ClubInfo {
		/**
		 * 转账
		 */
		export class Transition {
			id: number;
			/**
			 * 申请人
			 */
			user: UserBaseInfo;
			/**
			 * 数量
			 */
			num: number;
			/**
			 * true 转进 false 转出
			 */
			inOrOut: boolean;
			/**
			 * 申请时间
			 */
			createdAt: number;
			clubId: number;
			/**
			 * 0 未处理 1 同意 2 不同意
			 */
			deal: number;
			/**
			 * 审核人
			 */
			dealer: UserBaseInfo;
			/**
			 * 资金类型 1：基金，2：钻石
			 */
			type: number;
			/**
			 * 目标id
			 */
			touid: number;
			GetType(): string { return 'Cmd.ClubInfo.Transition'; }
		}
	}
	/**
	 * 分页
	 */
	export class Page {
		/**
		 * 第几页
		 */
		current: number;
		/**
		 * 每页的数量
		 */
		num: number;
		GetType(): string { return 'Cmd.Page'; }
	}
	/**
	 * 数据更新通知
	 */
	export class DataUpdateNotifyCmd_S {
		update: MsgType;
		clubId: number;
		GetType(): string { return 'Cmd.DataUpdateNotifyCmd_S'; }
	}
	/**
	 * 玩家牌局押注数据
	 */
	export class StatisticsRoundData {
		uid: number;
		/**
		 * 多长时间内
		 */
		days: number;
		/**
		 * 玩法 废弃
		 */
		play: number;
		user: UserBaseInfo;
		/**
		 * 牌局规则
		 */
		regulation: number;
		id: number;
		/**
		 *  押注元数据
		 *  参与的房间数
		 */
		gameNum: number;
		/**
		 * 手数
		 */
		hand: number;
		/**
		 * 翻牌前加注数
		 */
		flopRaise: number;
		/**
		 * 入池数
		 */
		inpot: number;
		/**
		 * allin 赢的次数
		 */
		allinWin: number;
		/**
		 * allin 次数
		 */
		allin: number;
		/**
		 *  计算后的概率
		 *  入池率
		 */
		vpip: number;
		/**
		 * 翻牌前加注率
		 */
		prf: number;
		/**
		 * ALL-IN胜率
		 */
		allinWinRate: number;
		/**
		 *  金钱数据
		 *  带入的筹码
		 */
		bring: number;
		/**
		 * 盈亏
		 */
		profit: number;
		/**
		 * 保险买入
		 */
		insBuy: number;
		/**
		 * 保险利润
		 */
		insProfit: number;
		/**
		 * 奖金
		 */
		prize: number;
		/**
		 * 带出
		 */
		out: number;
		/**
		 * 捐献金
		 */
		donate: number;
		donateIncome: number;
		/**
		 * 保险
		 */
		insurance: number;
		/**
		 * 赢
		 */
		lose: number;
		/**
		 * 输
		 */
		win: number;
		jackpot: number;
		/**
		 * 剩余筹码
		 */
		chips: number;
		/**
		 *  名次
		 *  冠军数
		 */
		firstPlace: number;
		/**
		 * 亚军数
		 */
		secondPlace: number;
		/**
		 * 季军数
		 */
		thirdPlace: number;
		/**
		 * 名次
		 */
		place: number;
		/**
		 * 报名
		 */
		sign: boolean;
		GetType(): string { return 'Cmd.StatisticsRoundData'; }
	}
	/**
	 * 玩法数据
	 */
	export class Playing {
		id: Playing.PlayId;
		value: number;
		GetType(): string { return 'Cmd.Playing'; }
	}
	export module Playing {
		/**
		 * 玩法id
		 */
		export enum PlayId {
			/**
			 * 小盲
			 */
			Smallblind = 1,
			/**
			 * 牌局规则 1 普通-德扑 2 SNG-德扑 3 普通-短牌 4 SNG-短牌
			 */
			Regulation = 2,
			/**
			 * 座位数
			 */
			SeatNum = 3,
			/**
			 * 前注
			 */
			Ante = 4,
			/**
			 * 升盲速度
			 */
			BlindLength = 5,
			/**
			 * 初始盲注
			 */
			StartChips = 6,
			/**
			 * 速度
			 */
			Speed = 7,
			/**
			 * 时长
			 */
			Duration = 8,
			/**
			 * 俱乐部id, 代表从俱乐部创建的牌局
			 */
			ClubId = 9,
			/**
			 * 报名费
			 */
			EntryFee = 10,
			/**
			 * 强制盲注
			 */
			ForceBlind = 10447,
			/**
			 * 控制带入
			 */
			ControlEntry = 10448,
			/**
			 * 保险
			 */
			Insurance = 10449,
			GPS = 96,
			/**
			 * 相同ip不可进入
			 */
			IPEnter = 100,
			/**
			 * 控制玩家报名
			 */
			ControlSignUp = 10489,
			/**
			 * 文本聊天
			 */
			TextChat = 10490,
			/**
			 * 语言聊天
			 */
			VoiceChat = 10491,
			/**
			 * 捐献金比例
			 */
			DonateRate = 10561,
			/**
			 * 自动开局条件人数
			 */
			StartAutoNum = 10582,
			/**
			 * 最少买入
			 */
			BringMin = 10583,
			/**
			 * 最大买入
			 */
			BringMax = 10584,
			/**
			 * 自动开始
			 */
			StartAuto = 10585,
			/**
			 * 俱乐部基金买入服务费
			 */
			ClubFundPlatFee = 10586,
			/**
			 * 两倍前注
			 */
			DoubleAnte = 10590,
			/**
			 * 三条大于顺子
			 */
			ThreeGtStraight = 10591,
			/**
			 * 押注时长
			 */
			ActionDuration = 10592,
			/**
			 * 联盟
			 */
			UnionId = 10615,
			/**
			 * 埋牌
			 */
			CoverCard = 10619,
			/**
			 * 同时发牌
			 */
			Concurrent = 10729,
			/**
			 * 分支等级
			 */
			Level = 10732,
			/**
			 * 入局带入
			 */
			EntryBring = 10734,
			/**
			 * allin 或 fold
			 */
			AllinOrFold = 10815
		}
	}
	/**
	 * 德扑的配置信息
	 */
	export class TexasConfig {
		/**
		 * 房间名称
		 */
		name: string;
		roomId: number;
		/**
		 * 房间唯一id
		 */
		globalRoomId: number;
		/**
		 * 创建时间
		 */
		createdAt: number;
		/**
		 * 奖金 废弃
		 */
		prize: number[];
		/**
		 * 报名人
		 */
		signList: UserBaseInfo[];
		/**
		 * 涨盲
		 */
		blindLine: number[];
		/**
		 * 人数
		 */
		userNum: number;
		owner: UserBaseInfo;
		/**
		 * 开始时间
		 */
		startAt: number;
		clubName: string;
		/**
		 * 玩法列表
		 */
		playList: Playing[];
		/**
		 * 盲注等级
		 */
		blindLevel: number;
		leftSec: number;
		/**
		 * 表格id
		 */
		tableId: number;
		/**
		 * 名义上的奖金
		 */
		prizeNameList: number[];
		/**
		 * 实际获得的奖金
		 */
		prizeGiveList: number[];
		statistics: StatisticsRoundData;
		/**
		 * 结束时间
		 */
		destroyAt: number;
		headurl: string;
		/**
		 * 游戏id
		 */
		gameId: number;
		GetType(): string { return 'Cmd.TexasConfig'; }
	}
	/**
	 * 彩票信息
	 */
	export class Lottery {
		/**
		 * 期号
		 */
		expect: number;
		/**
		 * 子期号
		 */
		subExpect: number;
		/**
		 * 开奖时间
		 */
		openstamp: number;
		/**
		 * 开奖数据
		 */
		opencode: number[];
		/**
		 * 开奖数据
		 */
		opennum: number;
		GetType(): string { return 'Cmd.Lottery'; }
	}
	/**
	 * 牌局历史
	 */
	export class History {
		/**
		 * 房间等级
		 */
		level: number;
		data: History.HistoryInfo[];
		GetType(): string { return 'Cmd.History'; }
	}
	export module History {
		export class HistoryInfo {
			/**
			 * 输赢
			 */
			roundWinLose: number;
			/**
			 * 利润
			 */
			profit: number;
			/**
			 * 彩票数据
			 */
			lottery: Lottery;
			/**
			 * 赢家id
			 */
			winId: number;
			/**
			 * 牌
			 */
			cardList: number[];
			/**
			 * 我的押注
			 */
			statistics: StatisticsRoundData[];
			/**
			 * 奖池
			 */
			jackpot: number;
			GetType(): string { return 'Cmd.History.HistoryInfo'; }
		}
	}
	/**
	 * 过滤条件
	 */
	export class FilterInfo {
		clubId: number;
		page: Page;
		globalRoomId: number;
		/**
		 * 查询的开始时间
		 */
		beginAt: number;
		/**
		 * 查询的结束时间
		 */
		endAt: number;
		regulation: number;
		uid: number;
		/**
		 * 向上还是向下查询
		 */
		upOrDown: boolean;
		/**
		 * 查询的数量
		 */
		num: number;
		id: number;
		/**
		 * 0 未处理 1 同意 2 不同意
		 */
		deal: number;
		unionId: number;
		GetType(): string { return 'Cmd.FilterInfo'; }
	}
	/**
	 * 金钱账单
	 */
	export class MoneyStatementInfo {
		id: number;
		type: MoneyStatementInfo.StatementType;
		createdAt: number;
		money: number;
		GetType(): string { return 'Cmd.MoneyStatementInfo'; }
	}
	export module MoneyStatementInfo {
		export enum StatementType {
			/**
			 * 平台转入
			 */
			CashIn = 1,
			/**
			 * 平台转出
			 */
			CashOut = 2,
			/**
			 * 房间带出
			 */
			BringIn = 3,
			/**
			 * 房间带入
			 */
			BringOut = 4,
			/**
			 * 购买钻石
			 */
			BuyDiamond = 5
		}
	}
	export class UploadShareInfoLittleGameLobbyCmd_CS {
		opType: ShareOpType;
		uid: number;
		shareType: ShareType;
		/**
		 * 微信相关分享数据(json格式)
		 */
		jsonShare: string;
		/**
		 * 拓展字段
		 */
		extData: string;
		GetType(): string { return 'Cmd.UploadShareInfoLittleGameLobbyCmd_CS'; }
	}
	/**
	 * 操作互动,有人看牌等小动作,发给其他玩家能表现出这个动作
	 */
	export class ShowActionRoomCmd_CS {
		uid: number;
		/**
		 * 动作,不填或者0表示看扣下的牌,以后继续添加
		 */
		act: number;
		GetType(): string { return 'Cmd.ShowActionRoomCmd_CS'; }
	}
	/**
	 * 客户端执行指定代码
	 */
	export class ClientRunCode_S {
		code: string;
		GetType(): string { return 'Cmd.ClientRunCode_S'; }
	}
	/**
	 * 访客列表,观战列表
	 */
	export class VisitorListRoomCmd_C {
		/**
		 * 房间id
		 */
		roomId: number;
		GetType(): string { return 'Cmd.VisitorListRoomCmd_C'; }
	}
	/**
	 * 访客列表,观战列表
	 */
	export class VisitorListRoomCmd_S {
		/**
		 * 房间id
		 */
		roomId: number;
		/**
		 * 访客列表
		 */
		list: UserBaseInfo[];
		GetType(): string { return 'Cmd.VisitorListRoomCmd_S'; }
	}
}
