//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
/// Generated from: lobby_hpmatch.proto
/// <reference path="common.ts" />
/// <reference path="lobby_room.ts" />

module Cmd {
	/**
	 * 大厅界面显示 个人积分数据
	 */
	export class PersonalHpRankInfo {
		/**
		 * 当前比赛游戏id
		 */
		gameId: number;
		/**
		 * 当前积分
		 */
		point: number;
		/**
		 * 当前排名
		 */
		rank: number;
		/**
		 * 当前比赛状态 是否开放 0、1 不开放、开放
		 */
		state: number;
		/**
		 * 晋级积分 当前即为第108名的积分
		 */
		promotionPoint: number;
		/**
		 * 半决赛还有多久 负数/0/正数  半决赛已过、半决赛正在进行、半决赛还有多长时间开始
		 */
		waitTime: number;
		/**
		 * 需要显示当前是否在某种定时赛中 场次id
		 */
		curMatch: number;
		/**
		 * 两种比赛的人数数量 下标3为金币场人数
		 */
		matchUser: number[];
		/**
		 * 免费赛场次数据
		 */
		freeSceneInfo: HpMatchInfo;
		GetType(): string { return 'Cmd.PersonalHpRankInfo'; }
	}
	/**
	 * 排行积分数据
	 */
	export class HpRankInfo {
		/**
		 * 排名
		 */
		rank: number;
		uid: number;
		headUrl: string;
		nickName: string;
		point: number;
		GetType(): string { return 'Cmd.HpRankInfo'; }
	}
	export class RewardItems {
		rewards: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.RewardItems'; }
	}
	/**
	 * 比赛数据(时间、奖励动态配置)
	 */
	export class HpMatchInfo {
		/**
		 * 指定比赛类型id
		 */
		sceneId: number;
		beginTime: number;
		/**
		 * 每天结束时间
		 */
		endTime: number;
		/**
		 * 该比赛每周几开启
		 */
		week: number[];
		/**
		 * 冠亚季军的奖励
		 */
		rewards: RewardItems[];
		/**
		 * 是否已解锁 0/1 未解锁、已解锁
		 */
		unLocked: number;
		/**
		 * 当前是否开启 -- 限时赛
		 */
		isOpen: number;
		/**
		 * 如果未解锁状态 则把当前已有几个玩家帮其解锁的数据下发 只发headurl的数组
		 */
		unLockList: string[];
		/**
		 * 报名次数限制 如果为nil表示无限制
		 */
		signLimit: number;
		/**
		 * 已报名次数
		 */
		signNum: number;
		GetType(): string { return 'Cmd.HpMatchInfo'; }
	}
	/**
	 * 获奖记录
	 */
	export class RewardRecord {
		beginTime: number;
		endTime: number;
		rankList: string[];
		/**
		 * -1/0/1   未参加、参加了未上榜、上榜名次
		 */
		myRank: number;
		GetType(): string { return 'Cmd.RewardRecord'; }
	}
	/**
	 * 战绩
	 */
	export class RankHistory {
		matchId: number;
		matchName: string;
		timestamp: number;
		rank: number;
		rewards: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.RankHistory'; }
	}
	/**
	 * 场次信息
	 */
	export class SceneInfo {
		/**
		 * 1:经典场 2:跑八张 3:疯狂场
		 */
		type: number;
		items: SceneItem[];
		/**
		 * 当前人数
		 */
		curUserNbr: number;
		GetType(): string { return 'Cmd.SceneInfo'; }
	}
	export class SceneItem {
		/**
		 * 1:初级 2:中级 3:高级
		 */
		type: number;
		gameId: number;
		/**
		 * 场次id
		 */
		sceneId: number;
		/**
		 * 准入
		 */
		lowestCarry: number;
		/**
		 * 当前人数
		 */
		curUserNbr: number;
		/**
		 * 红包额
		 */
		money: number;
		/**
		 * 底分
		 */
		bottomPoint: number;
		/**
		 * 最多携带
		 */
		maxCarry: number;
		/**
		 * 玩几局拿红包
		 */
		gameNbr: number;
		GetType(): string { return 'Cmd.SceneItem'; }
	}
	export class ChallengeInfo {
		/**
		 * 挑战类型 1:银猪 2:金猪
		 */
		type: number;
		items: RoundItem[];
		GetType(): string { return 'Cmd.ChallengeInfo'; }
	}
	export class RoundItem {
		/**
		 * 第几关
		 */
		round: number;
		/**
		 * 0:未解锁 1:已解锁
		 */
		unlock: number;
		/**
		 * 报名费
		 */
		signFee: Cmd.RewardItem[];
		/**
		 * 奖励
		 */
		rewards: Cmd.RewardItem[];
		/**
		 * 0:未过关 2:已过关
		 */
		pass: number;
		GetType(): string { return 'Cmd.RoundItem'; }
	}
	export class RushInfo {
		/**
		 * 闯关类型 1:金币 2:钻石
		 */
		type: number;
		/**
		 * 当前进度
		 */
		round: number;
		/**
		 * 报名费
		 */
		signFee: Cmd.RewardItem[];
		/**
		 * 奖励
		 */
		rewards: RewardItems[];
		/**
		 * 可复活关卡
		 */
		reviveRounds: number[];
		/**
		 * 最高彩蛋奖励
		 */
		maxGoldEgg: number;
		/**
		 * 报名条件
		 */
		enterLimit: number;
		GetType(): string { return 'Cmd.RushInfo'; }
	}
	/**
	 * 1 请求参加比赛
	 */
	export class RequestJoinHpMatchCmd_C {
		/**
		 * 获取指定游戏比赛数据
		 */
		gameId: number;
		/**
		 * 获取指定比赛场次
		 */
		sceneId: number;
		GetType(): string { return 'Cmd.RequestJoinHpMatchCmd_C'; }
	}
	export class RequestJoinHpMatchCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.RequestJoinHpMatchCmd_S'; }
	}
	export class RequestExitHpMatchCmd_C {
		/**
		 * 操作类型 nil/1/2 正常退出/断线回来/切后台回来
		 */
		opType: number;
		GetType(): string { return 'Cmd.RequestExitHpMatchCmd_C'; }
	}
	export class RequestExitHpMatchCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.RequestExitHpMatchCmd_S'; }
	}
	/**
	 * 当前比赛等待列表数据广播
	 */
	export class WaitListHpMatchCmd_Brd {
		sceneId: number;
		/**
		 * 当前人数
		 */
		curUserNbr: number;
		/**
		 * 倒计时
		 */
		timestamp: number;
		GetType(): string { return 'Cmd.WaitListHpMatchCmd_Brd'; }
	}
	/**
	 * 进入金猪银猪闯关
	 */
	export class EnterChallengeHpMatchCmd_C {
		/**
		 * 挑战类型
		 */
		type: number;
		/**
		 * 第几关
		 */
		round: number;
		GetType(): string { return 'Cmd.EnterChallengeHpMatchCmd_C'; }
	}
	export class EnterChallengeHpMatchCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.EnterChallengeHpMatchCmd_S'; }
	}
	/**
	 * 进入金币福卡闯关
	 */
	export class EnterRushHpMatchCmd_C {
		/**
		 * 类型 1:金币 2:福卡
		 */
		type: number;
		GetType(): string { return 'Cmd.EnterRushHpMatchCmd_C'; }
	}
	export class EnterRushHpMatchCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.EnterRushHpMatchCmd_S'; }
	}
	/**
	 * 4 最终打完结果推送 谁谁谁得奖。 TODO 还没确定最终怎么推送
	 */
	export class ResultHpMatchCmd_Brd {
		rank: number;
		rewards: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.ResultHpMatchCmd_Brd'; }
	}
	/**
	 * 5 获取比赛积分界面 -- 返回当前赛季的各种积分排行数据
	 */
	export class RequestRankInfoHpMatchCmd_C {
		/**
		 * 获取指定游戏比赛数据
		 */
		gameId: number;
		/**
		 * 当前第几页
		 */
		curPage: number;
		GetType(): string { return 'Cmd.RequestRankInfoHpMatchCmd_C'; }
	}
	export class RequestRankInfoHpMatchCmd_S {
		resultCode: number;
		/**
		 * 获取指定游戏比赛数据
		 */
		gameId: number;
		rankInfos: HpRankInfo[];
		myRank: HpRankInfo;
		/**
		 * 当前第几页
		 */
		curPage: number;
		/**
		 * 是否最后一页
		 */
		isLastPage: boolean;
		GetType(): string { return 'Cmd.RequestRankInfoHpMatchCmd_S'; }
	}
	/**
	 * 6 请求比赛场次列表
	 */
	export class RequestRankListHpMatchCmd_C {
		/**
		 * 获取指定游戏比赛数据
		 */
		gameId: number;
		GetType(): string { return 'Cmd.RequestRankListHpMatchCmd_C'; }
	}
	export class RequestRankListHpMatchCmd_S {
		resultCode: number;
		/**
		 * 获取指定游戏比赛数据
		 */
		gameId: number;
		/**
		 * 比赛列表数据
		 */
		matchList: HpMatchInfo[];
		GetType(): string { return 'Cmd.RequestRankListHpMatchCmd_S'; }
	}
	/**
	 * 7 获取指定比赛场次的获奖记录 -- 只有定时赛才存在获奖记录。 -- 里面包括了所有我参加或未参加的记录。（记录可以再分开存 不存在该场比赛中 可以存得简短一点）
	 */
	export class RequestRewardRecordHpMatchCmd_C {
		/**
		 * 获取指定比赛场次
		 */
		sceneId: number;
		/**
		 * 当前页数
		 */
		curPage: number;
		GetType(): string { return 'Cmd.RequestRewardRecordHpMatchCmd_C'; }
	}
	export class RequestRewardRecordHpMatchCmd_S {
		resultCode: number;
		/**
		 * 当前页
		 */
		curPage: number;
		/**
		 * 是否是最后一页
		 */
		isLastPage: boolean;
		/**
		 * 获奖记录列表
		 */
		records: RewardRecord[];
		GetType(): string { return 'Cmd.RequestRewardRecordHpMatchCmd_S'; }
	}
	/**
	 * 8 获取战绩记录 -- 应该可以跟上面的获奖记录从同个地方获取，看下怎么优化存储方式，能够方便取出相关数据(玩家个人数据中存着吧 存着个人获奖的场次和总共的场次 再通过场次id去上面那个找)
	 */
	export class RequestHistoryHpMatchCmd_C {
		/**
		 * 获取指定游戏比赛数据
		 */
		gameId: number;
		/**
		 * 0/1 比赛记录、获奖记录
		 */
		typ: number;
		/**
		 * 当前页数
		 */
		curPage: number;
		GetType(): string { return 'Cmd.RequestHistoryHpMatchCmd_C'; }
	}
	export class RequestHistoryHpMatchCmd_S {
		resultCode: number;
		/**
		 * 0/1 比赛记录、获奖记录
		 */
		typ: number;
		/**
		 * 当前页数
		 */
		curPage: number;
		/**
		 * 是否是最后一页
		 */
		isLastPage: boolean;
		historys: RankHistory[];
		GetType(): string { return 'Cmd.RequestHistoryHpMatchCmd_S'; }
	}
	/**
	 * 主动用钻石解锁某个场次
	 */
	export class RequestUnLockHpMatchCmd_C {
		/**
		 * 指定比赛类型id
		 */
		sceneId: number;
		GetType(): string { return 'Cmd.RequestUnLockHpMatchCmd_C'; }
	}
	export class RequestUnLockHpMatchCmd_S {
		resultCode: number;
		GetType(): string { return 'Cmd.RequestUnLockHpMatchCmd_S'; }
	}
	/**
	 * 主动刷新大厅表面数据
	 */
	export class FlushUserHpMatchInfoHpMatchCmd_Brd {
		/**
		 * 好牌网比赛数据
		 */
		hpRanks: PersonalHpRankInfo[];
		GetType(): string { return 'Cmd.FlushUserHpMatchInfoHpMatchCmd_Brd'; }
	}
	/**
	 * 再来一局
	 */
	export class ApplyContinuePlayHpMatchCmd_C {
		gameId: number;
		GetType(): string { return 'Cmd.ApplyContinuePlayHpMatchCmd_C'; }
	}
	export class ApplyContinuePlayHpMatchCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		seneInfo: HpMatchInfo;
		GetType(): string { return 'Cmd.ApplyContinuePlayHpMatchCmd_S'; }
	}
	/**
	 * 请求下限时赛当前人数
	 */
	export class GetTimerMatchUserHpMatchCmd_C {
		/**
		 * 指定比赛类型id
		 */
		sceneId: number;
		GetType(): string { return 'Cmd.GetTimerMatchUserHpMatchCmd_C'; }
	}
	export class GetTimerMatchUserHpMatchCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		/**
		 * 返回码
		 */
		nbr: number;
		GetType(): string { return 'Cmd.GetTimerMatchUserHpMatchCmd_S'; }
	}
	/**
	 * 推送获得的道具奖励
	 */
	export class PushItemRewardsHpMatchCmd_S {
		rewards: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.PushItemRewardsHpMatchCmd_S'; }
	}
	/**
	 * 手动领取比赛奖励
	 */
	export class UserGetRewardsManuallyHpMatchCmd_C {
		/**
		 * 1/2 直接领取、看视频后领取
		 */
		typ: number;
		GetType(): string { return 'Cmd.UserGetRewardsManuallyHpMatchCmd_C'; }
	}
	export class UserGetRewardsManuallyHpMatchCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.UserGetRewardsManuallyHpMatchCmd_S'; }
	}
	/**
	 * 金币场场次信息
	 */
	export class GetGoldCoinSceneInfoHpMatchCmd_C {
		GetType(): string { return 'Cmd.GetGoldCoinSceneInfoHpMatchCmd_C'; }
	}
	export class GetGoldCoinSceneInfoHpMatchCmd_S {
		infos: SceneInfo[];
		/**
		 * 默认进那个场次
		 */
		defType: number;
		GetType(): string { return 'Cmd.GetGoldCoinSceneInfoHpMatchCmd_S'; }
	}
	/**
	 * 挑战赛场次信息
	 */
	export class GetChallengeInfoHpMatchCmd_C {
		GetType(): string { return 'Cmd.GetChallengeInfoHpMatchCmd_C'; }
	}
	export class GetChallengeInfoHpMatchCmd_S {
		infos: ChallengeInfo[];
		GetType(): string { return 'Cmd.GetChallengeInfoHpMatchCmd_S'; }
	}
	/**
	 * 闯关信息
	 */
	export class GetRushInfoHpMatchCmd_C {
		GetType(): string { return 'Cmd.GetRushInfoHpMatchCmd_C'; }
	}
	export class GetRushInfoHpMatchCmd_S {
		infos: RushInfo[];
		GetType(): string { return 'Cmd.GetRushInfoHpMatchCmd_S'; }
	}
	/**
	 * 收藏有礼
	 */
	export class GetSubscribeAwardHpMatchCmd_C {
		GetType(): string { return 'Cmd.GetSubscribeAwardHpMatchCmd_C'; }
	}
	/**
	 * 破产补助
	 */
	export class PushBankruptcyRewardsHpMatchCmd_S {
		/**
		 * 金币
		 */
		chips: number;
		/**
		 * 总次数
		 */
		total: number;
		/**
		 * 次数
		 */
		num: number;
		rewards: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.PushBankruptcyRewardsHpMatchCmd_S'; }
	}
	/**
	 * 桌面启动奖励
	 */
	export class GetDesktopLaunchAwardHpMatchCmd_C {
		GetType(): string { return 'Cmd.GetDesktopLaunchAwardHpMatchCmd_C'; }
	}
	export class GetDesktopLaunchAwardHpMatchCmd_S {
		/**
		 * 返回码
		 */
		resultCode: number;
		GetType(): string { return 'Cmd.GetDesktopLaunchAwardHpMatchCmd_S'; }
	}
	/**
	 * //////////////////////新手七日签到红包活动////////////////////////
	 */
	export class NewSignItem {
		/**
		 * 天数
		 */
		day: number;
		/**
		 * 1:未领 2:已领 3:当前可领 4:还不可领
		 */
		status: number;
		GetType(): string { return 'Cmd.NewSignItem'; }
	}
	/**
	 * 获取七日签到红包活动信息
	 */
	export class GetNewRedPackdInfoHpMatchCmd_C {
		GetType(): string { return 'Cmd.GetNewRedPackdInfoHpMatchCmd_C'; }
	}
	export class GetNewRedPackdInfoHpMatchCmd_S {
		/**
		 * 今日领取
		 */
		todayNum: number;
		/**
		 * 累积领取
		 */
		totalNum: number;
		/**
		 * 签到信息
		 */
		infos: NewSignItem[];
		GetType(): string { return 'Cmd.GetNewRedPackdInfoHpMatchCmd_S'; }
	}
	/**
	 * 领红包
	 */
	export class GetNewRedPackRewardHpMatch_C {
		GetType(): string { return 'Cmd.GetNewRedPackRewardHpMatch_C'; }
	}
	export class GetNewRedPackRewardHpMatch_S {
		resultCode: number;
		GetType(): string { return 'Cmd.GetNewRedPackRewardHpMatch_S'; }
	}
	/**
	 * 兑换
	 */
	export class ExchangeNewRedPackHpMatchCmd_C {
		GetType(): string { return 'Cmd.ExchangeNewRedPackHpMatchCmd_C'; }
	}
	/**
	 * //////////////////////天降喜金活动////////////////////////
	 *  奖励信息
	 */
	export class HeavenAwardInfo {
		/**
		 * 类型
		 */
		type: number;
		uid: number;
		/**
		 * 昵称
		 */
		nickName: string;
		/**
		 * 金币
		 */
		chips: number;
		/**
		 * 获得时间
		 */
		time: number;
		GetType(): string { return 'Cmd.HeavenAwardInfo'; }
	}
	/**
	 * 通知获奖
	 */
	export class GoldFromHeavenHpMatchCmd_S {
		/**
		 * 奖励信息
		 */
		awardInfo: HeavenAwardInfo;
		GetType(): string { return 'Cmd.GoldFromHeavenHpMatchCmd_S'; }
	}
	/**
	 * 获奖记录
	 */
	export class GetHeavenAwardHistoryHpMatchCmd_C {
		/**
		 * 游戏ID
		 */
		gameId: number;
		/**
		 * 场次ID
		 */
		sceneId: number;
		/**
		 * 页码
		 */
		pagenum: number;
		/**
		 * 容量
		 */
		pagecap: number;
		GetType(): string { return 'Cmd.GetHeavenAwardHistoryHpMatchCmd_C'; }
	}
	export class GetHeavenAwardHistoryHpMatchCmd_S {
		/**
		 * 当前奖池
		 */
		jackpot: number;
		/**
		 * 页码
		 */
		pagenum: number;
		/**
		 * 获奖历史
		 */
		awardInfos: HeavenAwardInfo[];
		/**
		 * 累积胜场
		 */
		winsnum: number;
		/**
		 * 连胜场数
		 */
		winstreak: number;
		GetType(): string { return 'Cmd.GetHeavenAwardHistoryHpMatchCmd_S'; }
	}
	/**
	 * /////////////////////闯九关/////////////////////
	 */
	export class GetRewardListMahjongCmd_C {
		GetType(): string { return 'Cmd.GetRewardListMahjongCmd_C'; }
	}
	export class GetRewardListMahjongCmd_S {
		/**
		 * 奖励列表
		 */
		rewardList: ChallengeReward[];
		GetType(): string { return 'Cmd.GetRewardListMahjongCmd_S'; }
	}
	export class ChallengeReward {
		/**
		 * 关数
		 */
		round: number;
		/**
		 * 是否领取
		 */
		bRecv: number;
		/**
		 * 奖品列表
		 */
		rewads: Cmd.RewardItem[];
		GetType(): string { return 'Cmd.ChallengeReward'; }
	}
}
